{"version":3,"sources":["redux/actions/index.js","assets/searchFilled.svg","utils/tableUtils.js","utils/formatUtils.js","utils/metadata.js","components/ListDocuments.js","components/StatusIcon.js","components/ListContracts.js","pages/HomePage.js","utils/fitler.js","components/Filter.js","utils/exportUtils.js","pages/ContractsPage.js","pages/DocumentsPage.js","pages/NotFoundPage.js","components/TagList.js","assets/Icon-Bial-R.png","assets/Icon-Bial-X_2019.png","utils/currentRequest.js","pages/ContractDetailPage.js","assets/logo.png","pages/Skeleton.js","pages/MetadataPage.js","components/EditableTagList.js","pages/DocumentReadModifyPage.js","pages/DocumentCreatePage.js","App.js","serviceWorker.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["ApiPath","process","ADD_BREADCRUMB","addBreadcrumb","payload","type","SET_LOADING","setLoading","SET_LOADING_DATABASE","setLoadingDatabase","SET_NAVBAR","setNavbar","UPDATE","update","dispatch","a","error","fetch","method","toString","GET_UPDATE_TIME","UPDATE_ALL_CONTRACTS","updateAllContracts","contracts","data","response","ok","status","json","UPDATE_ALL_METADATA","updateAllMetadata","metadata","metadataResponse","metadataJson","metadataDocumentsTypes","documentsTypesJson","documentsTypes","UPDATE_METADATA","updateMetadata","DELETE_METADATA","deleteMetadata","ADD_METADATA","addMetadata","EDIT_GROUP","DELETE_GROUP","UPDATE_ALL_DOCUMENTS","updateAllDocuments","documents","ADD_DOCUMENT","addDocument","DELETE_DOCUMENT","deleteDocument","id","UPDATE_DOCUMENT","updateDocument","INIT_ALL","initAll","updateTime","documentResponse","contractResponse","UpdateTimeResponse","update_datetime","substr","UPDATE_FILTER_CONTRACT","updateFilterContract","UPDATE_FILTER_DOCUMENT","updateFilterDocument","GET_ALL_KEYWORDS","SET_METADATA_FROM_DOCUMENTS","setMetadatasFromDocuments","contractId","contract","searchText","searchedColumn","focus","checkedList","handleSearch","selectedKeys","confirm","dataIndex","currentSearchText","handleReset","clearFilters","getColumnSearchProps","dataSurname","arrayPath","linkData","isDate","filterDropdown","setSelectedKeys","className","span","ref","node","placeholder","value","onChange","e","target","onPressEnter","onClick","icon","SearchOutlined","filterIcon","filtered","Icon","style","color","component","width","height","fill","viewBox","x","y","xlinkHref","searchFilled","undefined","fontSize","onFilter","record","Array","isArray","obj","map","child","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","textRaw","text","var","to","path","highlightStyle","backgroundColor","padding","searchWords","autoEscape","textToHighlight","optionsDate","weekday","year","month","day","optionsDateYear","getDate","date","Date","toLocaleDateString","getYear","dateFormat","getIdByContract","title","ifFailed","split","match","isInVersion","documentsType","filter","item","document_type_id","length","getLibeleByKey","result","find","getKeyById","console","log","key","getMetadataByID","idList","metadataList","testList","Object","keys","metadata_id","push","list","ListDocuments","size","isButton","onClickButton","isPreview","loading","columnsData","sorter","b","name","trim","localeCompare","compare","moment","format","window","open","EyeOutlined","Math","random","replace","CheckOutlined","columns","dataSource","pagination","pageSize","rowKey","hideOnSinglePage","StatusIcon","props","PlusCircleFilled","ClockCircleFilled","CheckCircleFilled","CloseCircleFilled","ListContracts","filterArray","customer_name","label","Group","options","FilterFilled","FilterOutlined","contract_id","showSizeChanger","showQuickJumper","connect","state","loadingDatabase","useDispatch","useState","searchResult","setSearchResult","inResearch","setInResearch","errorSearch","setErrorSearch","findDocuments","keywords","Promise","resolve","reject","then","Error","catch","err","res","message","useEffect","reset","href","Helmet","paddingLeft","navigate","paddingRight","float","warning","marginTop","_","document_id","locale","emptyText","image","Empty","PRESENTED_IMAGE_SIMPLE","description","lg","xl","sort","parseInt","slice","stringSimplfier","str","toUpperCase","normalize","getStrByFilter","word","getManyByFilterMany","words","one","getDateBeetweenTwoFilter","filterDate","isBetween","Filter","isDocument","OnFilter","dataFilter","OnReset","hide","setHide","isFiltered","setIsFiltered","tags","setTags","Form","useForm","form","setMetadataList","Option","Select","RangePicker","DatePicker","safeFilter","category","ghost","UndoOutlined","resetFields","disabled","labelCol","wrapperCol","labelAlign","onFinish","values","onValuesChange","initialValues","md","Item","initialValue","contract_name","domain","showSearch","allowClear","filterOption","inputValue","option","creationDate","customer","extension","mode","company","affected_commercials","commercials","employeeId","fullName","affected_project_managers","projectManagers","creator","marginLeft","submit","exportToCSVDocument","csv","document","version","sequentialNumber","projectName","summary","getListValueByID","BOM","Uint8Array","blob","Blob","encoding","navigator","msSaveBlob","link","createElement","download","url","URL","createObjectURL","setAttribute","visibility","body","appendChild","click","removeChild","contractFiltered","setContractFiltered","listIdProjectManager","wordsObj","nested","specialFilterByNested","external","couple","flag","specialFilterByNestedExternal","begin_date","two","end_date","affectedCommercials","affectedProjectManagers","billing_date","exportToCSVContracts","others","documentTypes","documentFiltered","setDocumentFiltered","NotFoundPage","TagList","element","getContract","JSON","stringify","setContract","setError","setDocuments","metadataMapped","getDocumentsByContract","SyncOutlined","spin","xs","src","logoX","alt","logoR","total_days","total_charges","dot","ClockCircleOutlined","CheckCircleOutlined","header","bordered","renderItem","Header","Layout","Footer","Content","breadcrumb","navbar","children","messageInfo","setMessageInfo","info","justify","align","offset","sm","theme","onSelect","AuditOutlined","margin","top","position","FileOutlined","ControlOutlined","marginBottom","marginRight","textAlign","display","background","logo","isEditing","setIsEditing","isDeleting","setIsDeleting","isAdding","setIsAdding","errorBase","setErrorBase","modal","setModal","modalAdd","setModalAdd","popoverDeleteGroup","setPopoverDeleteGroup","formModal","formModalAdd","onEditGroup","newGroup","group","updateMetadataGroup","success","onDeleteGroup","deleteMetadataGroup","onDelete","deleteDocumentType","deleteMetadataInBase","onCancel","footer","content","paddingBottom","DeleteOutlined","trigger","onVisibleChange","edit","rules","required","new","addMetadataInBase","addDocumentType","updateDocumentType","updateMetadataInBase","shape","CloseOutlined","setFieldsValue","EditOutlined","PlusOutlined","extra","SettingOutlined","EditableTagList","onUpdateData","setVisibility","setText","borderColor","defaultValue","onBlur","input","addonAfter","waiting","setWaiting","setDocument","deleteModal","setdeleteModal","errorUpdate","setErrorUpdate","documentAssociated","setDocumentAssociated","isModify","setIsModify","TextArea","Input","location","pathname","getDocumentsAssociated","getDocument","isNew","onOk","deleteDocumentInBase","okText","cancelText","metadataListStr","doc","updateDocumentInBase","validator","whiteSpace","paddingTop","stepOne","setStepOne","stepTwo","setStepTwo","step","setStep","setIsNew","isVersion","setIsVersion","generatedName","setgeneratedName","errorSave","setErrorSave","generatedId","setGeneratedId","handleSaveStep3","addDocumentInBase","generatedIdTmp","getFieldValue","join","numeroAffaireFitnet","substring","XorR","generateName","contractHandle","handleOk","handleChangeType","add","subtract","suffix","FolderOpenOutlined","documentHandle","documentName","versionSplit","newDocument","handleOkStepTwo","DocumentReadModifyPage","default","Boolean","hostname","initialState","getFilterContractOptions","elem","projectManagersTmp","man","exist","orderMetadata","sortedResult","quotes","action","index","findIndex","array","newObj","modifiedContract","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"sOAAMA,EAAUC,iCAIHC,EAAiB,iBACjBC,EAAgB,SAACC,GAC5B,MAAO,CAAEC,KAAMH,EAAgBE,YAGpBE,EAAc,cACdC,EAAa,SAACH,GACzB,MAAO,CAAEC,KAAMC,EAAaF,YAGjBI,EAAuB,uBACvBC,EAAqB,SAACL,GACjC,MAAO,CAAEC,KAAMG,EAAsBJ,YAG1BM,EAAa,aACbC,EAAY,SAACP,GACxB,MAAO,CAAEC,KAAMK,EAAYN,YAIhBQ,EAAS,SACTC,EAAS,yDAAM,WAAOC,GAAP,eAAAC,EAAA,6DACtBC,EAAQ,KADc,kBAGlBC,MAAM,GAAD,OAAIjB,EAAJ,UAAqB,CAC9BkB,OAAQ,SAJc,sDAOxBF,EAAK,gCAA4B,KAAIG,YAPb,cAS1BL,EAAS,CACPT,KAAMO,EACNR,QAASY,IAXe,kBAanB,CAAEX,KAAMC,EAAaF,SAAS,IAbX,yDAAN,uDAgBTgB,EAAkB,kBAmBlBC,EAAuB,uBACvBC,EAAqB,yDAAM,WAAOR,GAAP,iBAAAC,EAAA,6DAChCQ,EAAY,CAAEP,MAAO,GAAIQ,KAAM,IADC,kBAGbP,MAAM,GAAD,OAAIjB,EAAJ,cAHQ,WAG9ByB,EAH8B,QAItBC,GAJsB,gBAKlCH,EAAUP,MAAV,gCAA2CS,EAASE,QALlB,wCAOXF,EAASG,OAPE,QAOlCL,EAAUC,KAPwB,iEAUpCD,EAAUP,MAAV,gCAA2C,KAAMG,YAVb,QAYtCL,EAAS,CACPT,KAAMgB,EACNjB,QAASmB,IAd2B,0DAAN,uDAmBrBM,EAAsB,sBACtBC,EAAoB,yDAAM,WAAOhB,GAAP,uBAAAC,EAAA,6DAC/BgB,EAAW,CAAEf,MAAO,GAAIQ,KAAM,IADC,kBAGJP,MAAM,GAAD,OAAIjB,EAAJ,aAHD,WAG7BgC,EAH6B,QAIbN,GAJa,gBAKjCK,EAASf,MAAT,gCAA0CgB,EAAiBL,QAL1B,wCAONK,EAAiBJ,OAPX,eAO3BK,EAP2B,iBAQIhB,MAAM,GAAD,OAAIjB,EAAJ,mBART,YAQ3BkC,EAR2B,QASLR,GATK,iBAU/BK,EAASf,MAAT,gCAA0CkB,EAAuBP,QAVlC,yCAYEO,EAAuBN,OAZzB,QAYzBO,EAZyB,OAa/BJ,EAASP,KAAO,CAAEO,SAAUE,EAAcG,eAAgBD,GAb3B,0DAiBnCJ,EAASf,MAAT,gCAA0C,KAAMG,YAjBb,QAmBrCL,EAAS,CAAET,KAAMwB,EAAqBzB,QAAS2B,IAnBV,0DAAN,uDAsBpBM,EAAkB,kBAClBC,EAAiB,SAAClC,GAE7B,MAAO,CAAEC,KAAMgC,EAAiBjC,YAGrBmC,EAAkB,kBAClBC,EAAiB,SAACpC,GAE7B,MAAO,CAAEC,KAAMkC,EAAiBnC,YAGrBqC,EAAe,eACfC,EAAc,SAACtC,GAE1B,MAAO,CAAEC,KAAMoC,EAAcrC,YAGlBuC,EAAa,aAMbC,EAAe,eAOfC,EAAuB,uBACvBC,EAAqB,yDAAM,WAAOhC,GAAP,iBAAAC,EAAA,6DAChCgC,EAAY,CAAE/B,MAAO,GAAIQ,KAAM,IADC,kBAGbP,MAAM,GAAD,OAAIjB,EAAJ,cAHQ,WAG9ByB,EAH8B,QAItBC,GAJsB,gBAKlCqB,EAAU/B,MAAV,gCAA2CS,EAASE,QALlB,wCAOXF,EAASG,OAPE,QAOlCmB,EAAUvB,KAPwB,iEAUpCuB,EAAU/B,MAAV,gCAA2C,KAAMG,YAVb,QAYtCL,EAAS,CACPT,KAAMwC,EACNzC,QAAS2C,IAd2B,0DAAN,uDAkBrBC,EAAe,eACfC,EAAc,SAAC7C,GAE1B,MAAO,CAAEC,KAAM2C,EAAc5C,YAGlB8C,EAAkB,kBAClBC,EAAiB,SAACC,GAAD,8CAAQ,WAAOtC,GAAP,iBAAAC,EAAA,6DAChCC,EAAQ,GADwB,kBAGXC,MAAM,GAAD,OAAIjB,EAAJ,qBAAwBoD,GAAM,CACxDlC,OAAQ,WAJwB,QAG5BO,EAH4B,QAMpBC,KACZV,EAAK,gCAA4BS,EAAST,QAPV,gDAUlCA,EAAK,gCAA4B,KAAIG,YAVH,eAYpCL,EAAS,CACPT,KAAM6C,EACN9C,QAAS,CAAEY,QAAOoC,QAdgB,kBAgB7B,CAAE/C,KAAMC,EAAaF,SAAS,IAhBD,yDAAR,uDAmBjBiD,EAAkB,kBAClBC,EAAiB,SAAClD,GAC7B,MAAO,CAAEC,KAAMgD,EAAiBjD,YAIrBmD,EAAW,WACXC,EAAU,yDAAM,WAAO1C,GAAP,mCAAAC,EAAA,6DACrBgB,EAAW,CAAEf,MAAO,GAAIQ,KAAM,IAC9BuB,EAAY,CAAE/B,MAAO,GAAIQ,KAAM,IAC/BD,EAAY,CAAEP,MAAO,GAAIQ,KAAM,IACjCiC,EAAa,KAJU,kBAMMxC,MAAM,GAAD,OAAIjB,EAAJ,aANX,WAMnBgC,EANmB,QAOHN,GAPG,iBAQvBK,EAASf,MAAT,gCAA0CgB,EAAiBL,QARpC,yCAUIK,EAAiBJ,OAVrB,eAUjBK,EAViB,iBAWchB,MAAM,GAAD,OAAIjB,EAAJ,mBAXnB,YAWjBkC,EAXiB,QAYKR,GAZL,iBAarBK,EAASf,MAAT,gCAA0CkB,EAAuBP,QAb5C,yCAeYO,EAAuBN,OAfnC,eAefO,EAfe,OAgBrBJ,EAASP,KAAO,CAAEO,SAAUE,EAAcG,eAAgBD,GAhBrC,UAiBUlB,MAAM,GAAD,OAAIjB,EAAJ,cAjBf,YAiBf0D,EAjBe,QAkBChC,GAlBD,iBAmBnBqB,EAAU/B,MAAV,gCAA2C0C,EAAiB/B,QAnBzC,yCAqBI+B,EAAiB9B,OArBrB,eAqBnBmB,EAAUvB,KArBS,iBAsBYP,MAAM,GAAD,OAAIjB,EAAJ,cAtBjB,YAsBb2D,EAtBa,QAuBGjC,GAvBH,iBAwBjBH,EAAUP,MAAV,gCAA2C2C,EAAiBhC,QAxB3C,yCA0BMgC,EAAiB/B,OA1BvB,eA0BjBL,EAAUC,KA1BO,iBA2BgBP,MAAM,GAAD,OAAIjB,EAAJ,oBA3BrB,eA2BX4D,EA3BW,iBA4BEA,EAAmBhC,OA5BrB,QA6BjB6B,GADAA,EA5BiB,QA6BOI,gBAAgBC,OAAO,EAAG,IA7BjC,0DAmCzB/B,EAASf,MAAT,gCAA0C,KAAMG,YAChD4B,EAAU/B,MAAV,gCAA2C,KAAMG,YACjDI,EAAUP,MAAV,gCAA2C,KAAMG,YACjDsC,EAAU,gCAA4B,KAAMtC,YAtCnB,QAwC3BL,EAAS,CAAET,KAAMkD,EAAUnD,QAAS,CAAE2B,WAAUgB,YAAWxB,YAAWkC,gBAxC3C,0DAAN,uDA2CVM,EAAyB,yBACzBC,EAAuB,SAAC5D,GACnC,MAAO,CAAEC,KAAM0D,EAAwB3D,YAG5B6D,EAAyB,yBACzBC,EAAuB,SAAC9D,GACnC,MAAO,CAAEC,KAAM4D,EAAwB7D,YAM5B+D,EAAmB,mBAqBnBC,EAA8B,8BAC9BC,EAA4B,SAACC,GAAD,8CAAgB,WAAOxD,GAAP,iBAAAC,EAAA,6DACjDwD,EAAW,CAAEvD,MAAO,GAAIQ,KAAM,GAAI,WAAc8C,GADC,kBAG9BrD,MAAM,GAAD,OAAIjB,EAAJ,+BAAkCsE,GAAc,CAC1EpD,OAAQ,SAJ2C,WAG/CO,EAH+C,QAMvCC,GANuC,gBAOnD6C,EAASvD,MAAT,gCAA0CS,EAASE,QAPA,wCAS7BF,EAASG,OAToB,QASnD2C,EAAS/C,KAT0C,iEAYrD+C,EAASvD,MAAT,gCAA0C,KAAMG,YAZK,QAcvDL,EAAS,CACPT,KAAM+D,EACNhE,QAASmE,IAhB4C,0DAAhB,uD,wOCzQ1B,OAA0B,yC,QCQrCC,GAAa,GACbC,GAAiB,GACjBC,GAAQ,KACRC,GAAc,GAEZC,GAAe,SAACC,EAAcC,EAASC,GAC3CD,IADyD,IAElDE,EAFkD,YAE7BH,EAF6B,MAGzDL,GAAaQ,EACbP,GAAiBM,GAGbE,GAAc,SAACC,GACnBA,IACAV,GAAa,IAGTW,GAAuB,SAACJ,EAAWK,EAAaC,EAAWC,EAAUC,GAA9C,MAA0D,CACrFC,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBZ,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASI,EAA3C,EAA2CA,aAA3C,OACd,sBAAKQ,UAAU,aAAf,SACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAKC,KAAM,GAAX,SACE,eAAC,KAAD,CACEC,IAAK,SAACC,GACJnB,GAAQmB,GAEVC,YAAW,qBAAgBV,GAC3BW,MAAOlB,EAAa,GACpBmB,SAAU,SAACC,GAAD,OAAOR,EAAgBQ,EAAEC,OAAOH,MAAQ,CAACE,EAAEC,OAAOH,OAAS,KACrEI,aAAc,kBAAMvB,GAAaC,EAAcC,EAASC,QAG5D,eAAC,KAAD,CAAKY,KAAM,GAAX,SACE,eAAC,KAAD,CAAQtF,KAAK,UAAU+F,QAAS,kBAAMxB,GAAaC,EAAcC,EAASC,IAAYsB,KAAM,eAACC,GAAA,EAAD,IAA5F,0BAIF,eAAC,KAAD,CAAKX,KAAM,GAAX,SACE,eAAC,KAAD,CACES,QAAS,WACPnB,GAAYC,IAFhB,sCAWRqB,WAAY,SAACC,GAAD,OACVA,EACE,eAACC,GAAA,EAAD,CACEC,MAAO,CAAEC,MAAO,WAChBC,UAAW,kBACT,sBAAKC,MAAM,MAAMC,OAAO,MAAMC,KAAK,UAAUC,QAAQ,gBAArD,SACE,wBAAOC,EAAE,IAAIC,EAAE,IAAIJ,OAAO,SAASD,MAAM,OAAOM,UAAWC,UAKjE,eAACd,GAAA,EAAD,CAAgBI,MAAO,CAAEC,WAAOU,EAAWC,SAAU,YAEzDC,SAAU,SAACxB,EAAOyB,GAChB,GAAIC,MAAMC,QAAQrC,GAAY,CAC5B,IAAIsC,EAAMH,EAIV,OAHAnC,EAAUuC,KAAI,SAACC,GACbF,EAAMA,EAAIE,MAELF,EAAMA,EAAIxG,WAAW2G,cAAcC,SAAShC,EAAM+B,eAAiB,GAE5E,OAAON,EAAOzC,GAAayC,EAAOzC,GAAW5D,WAAW2G,cAAcC,SAAShC,EAAM+B,eAAiB,IAExGE,8BAA+B,SAACC,GAC1BA,GACFC,YAAW,kBAAMxD,GAAMyD,WAAU,MAGrCC,OAAQ,SAACC,EAASb,GAChB,IAAIc,EAAOD,EAIX,GAHI9C,IACF+C,EAAOD,EAAQvE,OAAO,EAAG,KAEvBwB,EAAU,CACZ,IAAIqC,EAAMH,EAIV,OAHAlC,EAASiD,IAAIX,KAAI,SAACC,GAChBF,EAAMA,EAAIE,MAERpD,KAAmBM,EAEnB,eAAC,IAAD,CAAMyD,GAAIlD,EAASmD,KAAOd,EAA1B,SACE,eAAC,KAAD,CACEe,eAAgB,CAAEC,gBAAiB,UAAWC,QAAS,GACvDC,YAAa,CAACrE,IACdsE,YAAU,EACVC,gBAAiBT,EAAOA,EAAKnH,WAAa,OAK3C,eAAC,IAAD,CAAMqH,GAAIlD,EAASmD,KAAOd,EAA1B,SAAgCW,IAEzC,OAAI7D,KAAmBM,EAEnB,eAAC,KAAD,CACE2D,eAAgB,CAAEC,gBAAiB,UAAWC,QAAS,GACvDC,YAAa,CAACrE,IACdsE,YAAU,EACVC,gBAAiBT,EAAOA,EAAKnH,WAAa,KAIzCmH,KCtHLU,GAAc,CAAEC,QAAS,OAAQC,KAAM,UAAWC,MAAO,OAAQC,IAAK,WACtEC,GAAkB,CAAEH,KAAM,WAE1BI,GAAU,SAACC,GACf,OAAO,IAAIC,KAAKD,GAAME,mBAAmB,QAAST,KAG9CU,GAAU,SAACH,GACf,OAAO,IAAIC,KAAKD,GAAME,mBAAmB,QAASJ,KAwC9CM,GAAa,oBAEbC,GAAkB,SAACC,EAAOC,GAC9B,OAAOD,GAASA,EAAME,MAAM,KAAK,GAC7BF,EAAME,MAAM,KAAK,GAAGC,MAAM,SACxBH,EAAME,MAAM,KAAK,GACjBF,EAAME,MAAM,KAAK,GACnBD,GCxDAG,GAAc,SAACC,EAAe9G,GAClC,OAAQ8G,EAAcC,QAAO,SAACC,GAAD,OAA+B,IAArBA,EAAKH,aAAwBG,EAAKC,mBAAqBjH,KAAIkH,OAAS,GAGvGC,GAAiB,SAACL,EAAe9G,GACrC,IAAMoH,EAASN,EAAcO,MAAK,SAACL,GAAD,OAAUA,EAAKC,mBAAqBjH,KACtE,OAAIoH,EAAeA,EAAOzE,MACnB,WAGH2E,GAAa,SAACR,EAAe9G,GACjCuH,QAAQC,IAAIV,EAAe9G,GAC3B,IAAMoH,EAASN,EAAcO,MAAK,SAACL,GAAD,OAAUA,EAAKC,mBAAqBjH,KACtE,OAAIoH,EAAeA,EAAOK,IACnB,OAGHC,GAAkB,SAACC,EAAQC,GAC/BL,QAAQC,IAAIG,EAAQC,GACpBL,QAAQC,IAAI,OACZ,IAAIK,EAAW,GAEXF,IACFE,EAAWF,GAEb,IAAMP,EAAS,GAgBf,OAfAU,OAAOC,KAAKH,GAAcpD,KAAI,SAACiD,GAAD,OAE5BG,EAAaH,GAAKjD,KAAI,SAAC7F,GACjBkJ,EAASlD,SAAShG,EAASqJ,eACzBZ,EAAOK,IACTL,EAAOK,GAAKlD,IAAI0D,KAAKtJ,GACrByI,EAAOK,GAAKS,KAAKD,KAAKtJ,EAASgE,OAC/ByE,EAAOK,GAAKE,OAAOM,KAAKtJ,EAASqJ,cAEjCZ,EAAOK,GAAO,CAAElD,IAAK,CAAC5F,GAAWuJ,KAAM,CAACvJ,EAASgE,OAAQgF,OAAQ,CAAChJ,EAASqJ,qBAKnFT,QAAQC,IAAIJ,GACLA,GCjCM,SAASe,GAAT,GAAiH,IAAxFxI,EAAuF,EAAvFA,UAAW8G,EAA4E,EAA5EA,MAAO2B,EAAqE,EAArEA,KAAMC,EAA+D,EAA/DA,SAAUC,EAAqD,EAArDA,cAAeC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,QAASxJ,EAAkB,EAAlBA,eACrGyJ,EAAc,GAkFpB,OAjFIF,EACFE,EAAYR,KAAZ,2BACExB,MAAO,MACP9E,UAAW,OACX8F,IAAK,OACLiB,OAAQ,SAAC/K,EAAGgL,GAAJ,OAAUhL,EAAEiL,KAAKC,OAAOC,cAAcH,EAAEC,KAAKC,UAClD9G,GAAqB,OAAQ,QALlC,IAME0B,MAAO,SAGTgF,EAAYR,KAAZ,2BACExB,MAAO,MACP9E,UAAW,OACX8F,IAAK,OACLiB,OAAQ,SAAC/K,EAAGgL,GAAJ,OAAUhL,EAAEiL,KAAKC,OAAOC,cAAcH,EAAEC,KAAKC,UAClD9G,GAAqB,OAAQ,MAAO,KAAM,CAC3CsD,KAAM,cACNF,IAAK,CAAC,kBAPV,IASE1B,MAAO,SAIXgF,EAAYR,KAAZ,MAAAQ,EACK,CAAC,2BAEAhC,MAAO,OACP9E,UAAW,OACX8F,IAAK,OACLiB,OAAQ,CACNK,QAAS,SAACpL,EAAGgL,GAAJ,OAAUhL,EAAEwI,KAAK0C,OAAOC,cAAcH,EAAExC,KAAK0C,WAErD9G,GAAqB,OAAQ,OAAQ,KAAM,MAAM,IARrD,IASC0B,MAAO,MACPuB,OAAQ,SAACmB,GAAD,OAAU6C,KAAO7C,GAAM8C,OAAO1C,OAVvC,2BAaCE,MAAO,OACP9E,UAAW,OACX8F,IAAK,OACLiB,OAAQ,SAAC/K,EAAGgL,GAAJ,OAAUhL,EAAEV,KAAK4L,OAAOC,cAAcH,EAAE1L,KAAK4L,UAClD9G,GAAqB,OAAQ,SAjBjC,IAkBC0B,MAAO,MACPuB,OAAQ,SAAC/H,GAAD,OAAUkK,GAAenI,EAAgB/B,SAKnDoL,GAAYE,IACdE,EAAYR,KAAK,CACftG,UAAW,cACX8F,IAAK,cACLhE,MAAO,KACPuB,OAAQ,SAAChF,EAAIhD,GAAL,OACN,uCACGuL,GACC,eAAC,KAAD,CAKEvF,QAAS,kBAAMkG,OAAOC,KAAP,qBAA0BnJ,GAAM,UAAUsB,OAL3D,SAOE,eAAC8H,GAAA,EAAD,KANKC,KAAKC,SACPvL,SAAS,IACTwL,QAAQ,WAAY,IACpB7I,OAAO,EAAG,IAMhB2H,GACC,eAAC,KAAD,CAKErF,QAAS,kBAAMsF,EAActL,IAL/B,SAOE,eAACwM,GAAA,EAAD,KANKH,KAAKC,SACPvL,SAAS,IACTwL,QAAQ,WAAY,IACpB7I,OAAO,EAAG,UAWvB,sBAAK4B,UAAU,iBAAf,SACE,eAAC,KAAD,UACE,eAAC,KAAD,CAAKC,KAAM,GAAX,SACGkE,EACC,eAAC,KAAD,CAAMA,MAAOA,EAAb,SACE,eAAC,KAAD,CACE+B,QAASA,EACTiB,QAAShB,EACTiB,WAAY/J,EACZgK,WAAY,CACVC,SAAUxB,GAEZyB,OAAO,kBAIX,eAAC,KAAD,CACErB,QAASA,EACTiB,QAAShB,EACTiB,WAAY/J,EACZgK,WAAY,CACVC,SAAUxB,GAAQ,GAClB0B,kBAAkB,GAEpBD,OAAO,sB,0CChHN,SAASE,GAAWC,GAAQ,IACjCzL,EAAkByL,EAAlBzL,OAAQ+E,EAAU0G,EAAV1G,MAChB,MAAe,gBAAX/E,EACK,eAAC0L,GAAA,EAAD,CAAkB3G,MAAOA,IAEnB,gBAAX/E,EACK,eAAC2L,GAAA,EAAD,CAAmB5G,MAAOA,IAEpB,WAAX/E,EACK,eAAC4L,GAAA,EAAD,CAAmB7G,MAAOA,IAE5B,eAAC8G,GAAA,EAAD,CAAmB9G,MAAOA,ICRpB,SAAS+G,GAAT,GAA0F,ILoH3E1I,EAAW2I,EKpHDnM,EAAgE,EAAhEA,UAAWqK,EAAqD,EAArDA,QAASJ,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,UACnFE,EAAc,GAiGpB,OAhGIF,EACFE,EAAYR,KAAZ,2BACExB,MAAO,QACP9E,UAAW,QACX8F,IAAK,QACLiB,OAAQ,CACNK,QAAS,SAACpL,EAAGgL,GAAJ,OAAUhL,EAAE8I,MAAMoC,OAAOC,cAAcH,EAAElC,MAAMoC,WAEvD9G,GAAqB,QAAS,UAPnC,IAQE0B,MAAO,SAGTgF,EAAYR,KAAZ,2BACExB,MAAO,QACP9E,UAAW,QACX8F,IAAK,QACLiB,OAAQ,CACNK,QAAS,SAACpL,EAAGgL,GAAJ,OAAUhL,EAAE8I,MAAMoC,OAAOC,cAAcH,EAAElC,MAAMoC,WAEvD9G,GAAqB,QAAS,QAAS,KAAM,CAC9CsD,KAAM,cACNF,IAAK,CAAC,kBATV,IAWE1B,MAAO,SAIXgF,EAAYR,KAAZ,MAAAQ,EACK,CAAC,2BAEAhC,MAAO,SACP9E,UAAW,gBACX8F,IAAK,gBACLiB,OAAQ,CACNK,QAAS,SAACpL,EAAGgL,GAAJ,OAAUhL,EAAE4M,cAAc1B,OAAOC,cAAcH,EAAE4B,cAAc1B,WAEvE9G,GAAqB,gBAAiB,WAR1C,IASC0B,MAAO,QATR,2BAYCgD,MAAO,SACP9E,UAAW,SACX8F,IAAK,SACLiB,OAAQ,CACNK,QAAS,SAACpL,EAAGgL,GAAJ,OAAUhL,EAAEY,OAAOuK,cAAcH,EAAEpK,YLsExBoD,EKpEE,SLoES2I,EKpEC,CAChC,CAAEE,MAAO,cAAe7H,MAAO,eAC/B,CAAE6H,MAAO,cAAe7H,MAAO,eAC/B,CAAE6H,MAAO,SAAU7H,MAAO,UAC1B,CAAE6H,MAAO,WAAY7H,MAAO,aLgEoB,CACxDP,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBZ,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASI,EAA3C,EAA2CA,aAA3C,OACd,sBAAKQ,UAAU,aAAf,SACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAKC,KAAM,GAAX,SACE,eAAC,KAASkI,MAAV,CACEC,QAASJ,EACT1H,SAAU,SAACC,GACTR,EAAgBQ,GAChBtB,GAAcsB,GAEhBF,MAAOpB,OAGX,eAAC,KAAD,CAAKgB,KAAM,GAAX,SACE,eAAC,KAAD,CAAQtF,KAAK,UAAU+F,QAAS,kBAAMxB,GAAaC,EAAcC,EAASC,IAAYsB,KAAM,eAACC,GAAA,EAAD,IAA5F,uBAIF,eAAC,KAAD,CAAKX,KAAM,GAAX,SACE,eAAC,KAAD,CACES,QAAS,WACPnB,GAAYC,GACZP,GAAc,IAHlB,sCAYR4C,SAAU,SAACxB,EAAOyB,GAAR,OACRA,EAAOzC,GAAayC,EAAOzC,GAAW5D,WAAW2G,cAAcC,SAAShC,EAAM+B,eAAiB,IACjGvB,WAAY,SAACC,GAAD,OACVA,EACE,eAACuH,GAAA,EAAD,CAAcrH,MAAO,CAAEC,MAAO,UAAWW,SAAU,WAEnD,eAAC0G,GAAA,EAAD,CAAgBtH,MAAO,CAAEC,WAAOU,EAAWC,SAAU,eK5HpD,IAyBCT,MAAO,MACPuB,OAAQ,SAACzG,GAAD,OACN,kCACE,eAACwL,GAAD,CAAYxL,OAAQA,IADtB,YAEgBA,WAMpB8J,GAAYE,IACdE,EAAYR,KAAK,CACftG,UAAW,cACX8F,IAAK,cACLhE,MAAO,KACPuB,OAAQ,SAAC6F,EAAa7N,GAAd,OACN,uCACGuL,GACC,eAAC,KAAD,CAKEvF,QAAS,kBAAMkG,OAAOC,KAAP,qBAA0B0B,GAAe,UAAUvJ,OALpE,SAOE,eAAC8H,GAAA,EAAD,KANKC,KAAKC,SACPvL,SAAS,IACTwL,QAAQ,WAAY,IACpB7I,OAAO,EAAG,IAMhB2H,GACC,eAAC,KAAD,CAKErF,QAAS,kBAAMsF,EAActL,IAL/B,SAOE,eAACwM,GAAA,EAAD,KANKH,KAAKC,SACPvL,SAAS,IACTwL,QAAQ,WAAY,IACpB7I,OAAO,EAAG,UAWvB,eAAC,KAAD,UACE,eAAC,KAAD,CAAK6B,KAAM,GAAX,SACE,eAAC,KAAD,CACEsH,OAAO,cACPJ,QAAShB,EACTiB,WAAYvL,EACZwL,WAAY,CACVmB,iBAAiB,EACjBC,iBAAiB,EACjBnB,SAAUxB,GAAQ,GAClB0B,kBAAkB,GAEpBtB,QAASA,QCqEJwC,oBATf,SAAyBC,GACvB,MAAO,CACLzC,QAASyC,EAAMzC,QACf7I,UAAWsL,EAAMtL,UACjBxB,UAAW8M,EAAM9M,UACjB+M,gBAAiBD,EAAMC,gBACvBlM,eAAgBiM,EAAMtM,SAASK,kBAGK,CAAEjC,gBAAeU,SAAQN,aAAYI,YAAWF,sBAAzE2N,EAlLf,YAAuF,IAAnExC,EAAkE,EAAlEA,QAAS7I,EAAyD,EAAzDA,UAAWxB,EAA8C,EAA9CA,UAAW+M,EAAmC,EAAnCA,gBAAiBlM,EAAkB,EAAlBA,eAC5DtB,EAAWyN,cADmE,EAE5CC,mBAAS,IAFmC,mBAE7EC,EAF6E,KAE/DC,EAF+D,OAGhDF,oBAAS,GAHuC,mBAG7EG,EAH6E,KAGjEC,EAHiE,OAI9CJ,wBAASnH,GAJqC,mBAI7EwH,EAJ6E,KAIhEC,EAJgE,KAkCpF,SAASC,EAAc9I,GAlBvB,IAAgB+I,KAmBP/I,EAAEC,OAAOH,MAlBT,IAAIkJ,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,2BAAqD+O,IACvDI,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,gDAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,qBAO7CiO,MAAK,SAACI,GACLd,EAAgBc,MAEjBF,OAAM,SAACtO,GACN8N,EAAe9N,EAAMyO,YAI3B,OAtCAC,qBAAU,WACR5O,EAASH,EAAU,KACnBG,EACEX,EAAc,CACZwP,OAAO,EACPnO,KAAM,CAAC,CAAEwK,KAAM,UAAW4D,KAAM,WAGnC,CAAC9O,IA+BF,iCACE,eAAC+O,GAAA,EAAD,UACE,iDAGF,gBAAC,IAAD,CAAOnJ,MAAO,CAAEoJ,YAAa,QAA7B,UACE,eAAC,KAAD,CACEzP,KAAK,UACL+F,QAAS,WACPtF,EAASP,GAAW,IACpBO,EAAS0C,MAEXkC,UAAU,iBACVkG,QAASA,EAPX,wBAWA,eAAC,KAAD,CACEvL,KAAK,UACL+F,QAAS,WACP2J,YAAS,sBAEXrK,UAAU,iBACVkG,QAASA,EANX,iCAYF,eAAC,IAAD,CAAOlF,MAAO,CAAEsJ,aAAc,OAAQC,MAAO,SAA7C,SACE,eAAC,KAAD,CACE5P,KAAK,QACL+F,QAAS,WACPtF,EAASL,GAAmB,IAC5BK,EAASD,KACT4O,KAAQS,QAAQ,6EAElBxK,UAAU,iBACVkG,QAAS0C,EARX,iDAcF,eAAC,KAAD,CAAK5H,MAAO,CAAEyJ,UAAW,QAAzB,SACE,eAAC,KAAD,CAAKxK,KAAM,GAAIe,MAAO,CAAEoJ,YAAa,OAAQE,aAAc,QAA3D,SACE,gBAAC,KAAD,CAAMnG,MAAM,iCAAZ,UACE,eAAC,KAAD,CACE/D,YAAY,kBACZE,SAAU,SAACC,GACT2I,EAAiC,KAAnB3I,EAAEC,OAAOH,OACvBgJ,EAAc9I,MAIjB0I,GACC,iCACE,eAAC,KAAD,IACA,eAAC,KAAD,CACE9B,QAAS,CACP,CACEhD,MAAO,OACP9E,UAAW,OACX8F,IAAK,OACLzC,OAAQ,SAACgI,EAAG5I,GACV,OAAIA,EAAO6I,YACF,WAEF,YAGX,CACExG,MAAO,MACP9E,UAAW,gBACX8F,IAAK,gBACLhE,MAAO,MACPuB,OAAQ,SAACgI,EAAG5I,GACV,OAAIA,EAAO6I,YACF,eAAC,IAAD,CAAM7H,GAAE,qBAAgBhB,EAAO6I,aAA/B,SAA+C7I,EAAOwE,OAExD,eAAC,IAAD,CAAMxD,GAAE,qBAAgBhB,EAAOyG,aAA/B,SAA+CzG,EAAOqC,WAInEiD,WAAY2B,EACZ6B,OAAQ,CACNC,UAAW1B,EACT,eAAC,KAAD,CAAO2B,MAAOC,KAAMC,uBAAwBC,YAAa9B,IAEzD,eAAC,KAAD,CAAO2B,MAAOC,KAAMC,uBAAwBC,YAAY,gDAUxE,gBAAC,KAAD,CAAKjK,MAAO,CAAEyJ,UAAW,QAAzB,UACE,eAAC,KAAD,CAAKS,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,OAAQE,aAAc,QAArF,SACE,eAAC,KAAD,CAAMnG,MAAM,uCAAZ,SACE,eAAC4D,GAAD,CACElM,UAAWA,EAAUC,KAAKsP,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUgF,SAAShF,EAAEkC,YAAa,IAAM8C,SAAShQ,EAAEkN,YAAa,OAAK+C,MAAM,EAAG,GAC7GpF,QAASA,EACTJ,KAAM,QAIZ,eAAC,KAAD,CAAKoF,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,OAAQE,aAAc,QAArF,SACE,eAAC,KAAD,CAAMnG,MAAM,uCAAZ,SACE,eAAC0B,GAAD,CACExI,UAAWA,EAAUvB,KAAKsP,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUA,EAAExC,KAAK0C,OAAOC,cAAcnL,EAAEwI,KAAK0C,WAAS+E,MAAM,EAAG,GAC9FpF,QAASA,EACTJ,KAAM,EACNpJ,eAAgBA,iB,2DCtKxB6O,GAAkB,SAACC,GACvB,OAAOA,EACJjF,OACAkF,cACAC,UAAU,OACVzE,QAAQ,mBAAoB,KAG3B0E,GAAiB,SAACC,EAAMnH,GAC5B,QAAImH,KACKnH,GAAqB,KAAXA,GAAgB8G,GAAgBK,GAAMvJ,SAASkJ,GAAgB9G,MAS9EoH,GAAsB,SAACC,EAAOrH,GAClC,IAAIK,GAAS,EAYb,OAXIL,GAAUA,EAAOG,OAAS,IACxBkH,EACFrH,EAAOvC,KAAI,SAAC6J,GACLD,EAAMzJ,SAAS0J,KAClBjH,GAAS,MAIbA,GAAS,GAGNA,GAGHkH,GAA2B,SAACnI,EAAMoI,GACtC,QAAOA,GAAcA,EAAWrH,OAAS,IAAI8B,KAAO7C,GAAMqI,UAAUD,EAAW,GAAIA,EAAW,GAAI,MAAO,OChC5F,SAASE,GAAT,GAA4G,IAA1FC,EAAyF,EAAzFA,WAAYC,EAA6E,EAA7EA,SAAUnG,EAAmE,EAAnEA,QAAS7J,EAA0D,EAA1DA,SAAU2E,EAAgD,EAAhDA,MAAOsL,EAAyC,EAAzCA,WAAY7H,EAA6B,EAA7BA,OAAQ8H,EAAqB,EAArBA,QAASjD,EAAY,EAAZA,SAAY,EAChGR,oBAAS,GADuF,mBACjH0D,EADiH,KAC3GC,EAD2G,OAEpF3D,wBAAoBnH,IAAX8C,GAF2E,mBAEjHiI,EAFiH,KAErGC,EAFqG,OAGhG7D,mBAAS,IAHuF,mBAGjH8D,EAHiH,KAG3GC,EAH2G,OAIzGC,KAAKC,UAAbC,EAJiH,sBAKhFlE,mBAAS,IALuE,mBAKjHxD,EALiH,KAKnG2H,EALmG,KAMhHC,EAAWC,KAAXD,OACAE,EAAgBC,KAAhBD,YACFE,EAAa7I,GAAU,GAkB7B,OAZAuF,qBAAU,WACR,GAAI3N,EAAU,CACZ,IAAMuJ,EAAO,GACbJ,OAAOC,KAAKpJ,GAAU6F,KAAI,SAACqL,GACR,mBAAbA,GACFlR,EAASkR,GAAUrL,KAAI,SAACwC,GAAD,OAAUkB,EAAKD,KAAKjB,SAG/CuI,EAAgBrH,EAAKwF,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUhL,EAAEgF,MAAMkG,OAAOC,cAAcH,EAAEhG,MAAMkG,eAE1E,CAAClK,IAGF,uBAAK2E,MAAOA,EAAZ,UACE,gBAAC,IAAD,WACE,eAAC,KAAD,CACErG,KAAK,UACLqF,UAAU,iBACVwN,MAAOhB,EACP7L,KAAM6L,EAAO,eAAClE,GAAA,EAAD,IAAqB,eAACD,GAAA,EAAD,IAClC3H,QAAS,WACP+L,GAASD,IAEXxL,MAAO,CAAEG,MAAO,SARlB,SAUGqL,EAAO,uBAAyB,uBAEnC,eAAC,KAAD,CACE7R,KAAK,UACLqF,UAAU,iBACVW,KAAM,eAAC8M,GAAA,EAAD,IACN/M,QAAS,WACP6L,IACAM,EAAQ,IACRF,GAAc,GACdN,OAAS1K,GACTa,YAAW,WACTwK,EAAKU,gBACJ,IAELC,UAAWjB,EAbb,8CAkBAF,GACA,uCACE,gBAAC,KAAD,CAAMrI,MAAO,uBAAMnD,MAAO,CAAEC,MAAO,kBAAmBmJ,YAAa,IAAtD,qBAAb,UACE,eAAC,KAAD,CACEwD,SAAU,CAAE3N,KAAM,IAClB4N,WAAY,CAAE5N,KAAM,IACpB6N,WAAW,OACXd,KAAMA,EACNe,SAzDK,SAACC,GAChB3B,EAAS,6BAAK2B,GAAN,IAAcpB,WAyDZqB,eAAgB,kBAAMtB,GAAc,IACpCuB,mBAAevM,EAPjB,SASGyK,EACC,qCACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAK+B,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,gBAAgB4B,MAAM,oBAAoBmG,aAAcf,EAAWgB,cAAnF,SACE,eAAC,KAAD,QAGJ,eAAC,KAAD,CAAKH,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,OAAO4B,MAAM,sBAAsBmG,aAAcf,EAAWhH,KAA5E,SACE,eAAC,KAAD,QAGJ,eAAC,KAAD,CAAK6H,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,SAAS4B,MAAM,cAAcmG,aAAcf,EAAWiB,OAAtE,SACE,gBAAC,KAAD,CAAQC,YAAU,EAACC,YAAU,EAA7B,UACE,eAACvB,EAAD,CAAQ7M,MAAM,IAAd,oBACA,eAAC6M,EAAD,CAAQ7M,MAAM,IAAd,yBACA,eAAC6M,EAAD,CAAQ7M,MAAM,IAAd,+BAIN,eAAC,KAAD,CAAK8N,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,OAAO4B,MAAM,uBAAuBmG,aAAcf,EAAW3S,KAA7E,SACE,eAAC,KAAD,CACE6T,YAAU,EACVC,YAAU,EACVC,aAAc,SAACC,EAAYC,GAAb,OACZrD,GACElP,EAASK,eAAeqI,MAAK,SAAC9C,GAAD,OAASA,EAAI0C,mBAAqBiK,EAAOvO,SAAOA,OAC7EgC,SAASkJ,GAAgBoD,KAN/B,SASGtS,GACCA,EAASK,gBACTL,EAASK,eAAewF,KAAI,SAACD,GAAD,OAAS,eAACiL,EAAD,CAAQ7M,MAAO4B,EAAI0C,iBAAnB,SAAsC1C,EAAI5B,iBAIvF,eAAC,KAAD,CAAK8N,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,OAAO4B,MAAM,uBAAuBmG,aAAcf,EAAWzJ,KAA7E,SACE,eAACuJ,EAAD,CAAazG,OAAQ1C,GAAYjD,MAAO,CAAEG,MAAO,cAGrD,eAAC,KAAD,CAAKgN,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,eAAe4B,MAAM,0BAAuBmG,aAAcf,EAAWuB,aAArF,SACE,eAACzB,EAAD,CAAazG,OAAQ1C,GAAYjD,MAAO,CAAEG,MAAO,cAGrD,eAAC,KAAD,CAAKgN,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,WAAW4B,MAAM,aAAamG,aAAcf,EAAWwB,SAAvE,SACE,eAAC,KAAD,QAGJ,eAAC,KAAD,CAAKX,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,YAAY4B,MAAM,gBAAgBmG,aAAcf,EAAWyB,UAA3E,SACE,gBAAC,KAAD,CAAQP,YAAU,EAACC,YAAU,EAA7B,UACE,eAACvB,EAAD,CAAQ7M,MAAM,OAAd,kBACA,eAAC6M,EAAD,CAAQ7M,MAAM,OAAd,kBACA,eAAC6M,EAAD,CAAQ7M,MAAM,OAAd,kBACA,eAAC6M,EAAD,CAAQ7M,MAAM,MAAd,wBAIN,eAAC,KAAD,CAAK8N,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,WAAW4B,MAAM,eAAemG,aAAcf,EAAWjR,SAAzE,SACE,eAAC,KAAD,CACE2S,KAAK,WACLN,aAAc,SAACC,EAAYC,GAAb,OACZrD,GAAgBjG,EAAaP,MAAK,SAAC9C,GAAD,OAASA,EAAIyD,cAAgBkJ,EAAOvO,SAAOA,OAAOgC,SAClFkJ,GAAgBoD,KAJtB,SAQGrJ,EAAapD,KAAI,SAACD,GAAD,OAChB,eAACiL,EAAD,CAAQ7M,MAAO4B,EAAIyD,YAAnB,SAAiCzD,EAAI5B,iBAK7C,eAAC,KAAD,CAAK8N,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,WAAW4B,MAAM,iBAAcmG,aAAcf,EAAWhE,SAAxE,SACE,eAAC,KAAD,CAAQ0F,KAAK,WAAWR,YAAU,EAACC,YAAU,EAA7C,SACGnF,EAASpH,KAAI,SAAC0J,GAAD,OACZ,eAACsB,EAAD,CAAQ7M,MAAO,CAACuL,GAAhB,SAAwBA,kBAQpC,qCACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAKuC,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,cAAc4B,MAAM,mBAAmBmG,aAAcf,EAAW/E,YAAhF,SACE,eAAC,KAAD,QAGJ,eAAC,KAAD,CAAK4F,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,UAAU4B,MAAM,iBAAiBmG,aAAcf,EAAW2B,QAA1E,SACE,eAAC,KAAD,CAAQT,YAAU,EAACC,YAAU,EAA7B,SACGnC,EAAW2C,QAAQ/M,KAAI,SAACD,GAAD,OACtB,eAACiL,EAAD,CAAQ7M,MAAO4B,EAAf,SAAqBA,aAK7B,eAAC,KAAD,CAAKkM,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,OAAO4B,MAAM,WAAWmG,aAAcf,EAAWzJ,KAAjE,SACE,eAACuJ,EAAD,CAAazG,OAAQ1C,GAAYjD,MAAO,CAAEG,MAAO,cAGrD,eAAC,KAAD,CAAKgN,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CACE9H,KAAK,uBACL4B,MAAM,8BACNmG,aAAcf,EAAW4B,qBAH3B,SAKE,eAAC,KAAD,CACEF,KAAK,WACLN,aAAc,SAACC,EAAYC,GAAb,OACZrD,GACEe,EAAW6C,YAAYpK,MAAK,SAAC9C,GAAD,OAASA,EAAImN,aAAeR,EAAOvO,SAAOgP,UACtEhN,SAASkJ,GAAgBoD,KAL/B,SAQGrC,EAAW6C,YAAYjN,KAAI,SAACD,GAAD,OAC1B,eAACiL,EAAD,CAAQ7M,MAAO4B,EAAImN,WAAnB,SAAgCnN,EAAIoN,oBAK5C,eAAC,KAAD,CAAKlB,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CACE9H,KAAK,4BACL4B,MAAM,kCACNmG,aAAcf,EAAWgC,0BAH3B,SAKE,eAAC,KAAD,CACEN,KAAK,WACLN,aAAc,SAACC,EAAYC,GAAb,OACZrD,GAAgBqD,EAAOvO,OAAOgC,SAASkJ,GAAgBoD,KAH3D,SAMGrC,EAAWiD,gBAAgBrN,KAAI,SAACD,GAAD,OAC9B,eAACiL,EAAD,CAAQ7M,MAAO4B,EAAIoN,SAAnB,SAA8BpN,EAAIoN,oBAK1C,eAAC,KAAD,CAAKlB,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,eAAC,KAAK8D,KAAN,CAAW9H,KAAK,UAAU4B,MAAM,kBAAemG,aAAcf,EAAWkC,QAAxE,SACE,eAAC,KAAD,CAAQhB,YAAU,EAACC,YAAU,EAA7B,SACGnC,EAAWkD,QAAQtN,KAAI,SAACD,GAAD,OACtB,eAACiL,EAAD,CAAQ7M,MAAO4B,EAAf,SAAqBA,oBASrC,eAAC,KAAD,CACEjB,MAAO,CAAEyO,WAAY,QACrBvJ,QAASA,EACTvL,KAAK,UACLgG,KAAM,eAAC0H,GAAA,EAAD,IACN3H,QAAS,WACPsM,EAAK0C,UAEP/B,UAAWjB,EARb,wBAaF,eAAC,KAAD,UC7PV,IA0DMiD,GAAsB,SAACtS,EAAW1C,EAAM0B,GAC5C,IAAIuT,EAAM,GACVA,GACE,mKACFvS,EAAU6E,KAAI,SAAC2N,GACbD,GAAG,WAAQC,EAAStH,YAAjB,MACHqH,GAAG,WAAQC,EAASvB,cAAjB,MACHsB,GAAG,WAAQC,EAASvJ,KAAjB,MACHsJ,GAAG,WAAQC,EAAStB,OAAjB,MACHqB,GAAG,WAAQ5K,GAAWrK,EAAMkV,EAASlV,MAAlC,MACHiV,GAAG,UAAOC,EAASrM,KAAhB,KACHoM,GAAG,WAAQC,EAAShM,KAAjB,MACH+L,GAAG,WAAQC,EAASC,QAAjB,MACHF,GAAG,UAAOC,EAASE,iBAAhB,KACHH,GAAG,WAAQC,EAASd,UAAjB,MACHa,GAAG,WAAQC,EAASG,YAAjB,MACHJ,GAAG,WAAQC,EAASL,QAAjB,MACHI,GAAG,WAAQC,EAAShB,aAAjB,MACHe,GAAG,WAAQC,EAASI,QAAjB,MACHL,GAAG,WPnCkB,SAACvK,EAAQC,GAChCL,QAAQC,IAAIG,EAAQC,GACpB,IAAMR,EAAS,GAUf,OATAU,OAAOC,KAAKH,GAAcpD,KAAI,SAACiD,GAAD,OAE5BG,EAAaH,GAAKjD,KAAI,SAAC7F,GACjBgJ,EAAOhD,SAAShG,EAASqJ,cAC3BZ,EAAOa,KAAKtJ,EAASgE,aAI3B4E,QAAQC,IAAIJ,GACLA,EOuBMoL,CAAiBL,EAASxT,SAAUA,GAA5C,MACHuT,GAAG,WAAQC,EAASvG,SAAjB,MACHsG,GAAG,WAAQC,EAASlF,YAAjB,UAGL,IAAMwF,EAAM,IAAIC,WAAW,CAAC,IAAM,IAAM,MAClCC,EAAO,IAAIC,KAAK,CAACH,EAAKP,GAAM,CAAEW,SAAU,QAAS5V,KAAM,2BAC7D,GAAI6V,UAAUC,WAEZD,UAAUC,WAAWJ,EAAM,qBACtB,CACL,IAAMK,EAAOb,SAASc,cAAc,KACpC,QAAsBhP,IAAlB+O,EAAKE,SAAwB,CAG/B,IAAMC,EAAMC,IAAIC,gBAAgBV,GAChCK,EAAKM,aAAa,OAAQH,GAC1BH,EAAKM,aAAa,WAAY,iBAC9BN,EAAK1P,MAAMiQ,WAAa,SACxBpB,SAASqB,KAAKC,YAAYT,GAC1BA,EAAKU,QACLvB,SAASqB,KAAKG,YAAYX,MCsDjBhI,oBAVf,SAAyBC,GACvB,MAAO,CACL9M,UAAW8M,EAAM9M,UACjBqK,QAASyC,EAAMzC,QACf0C,gBAAiBD,EAAMC,gBACvBnE,OAAQkE,EAAMlE,OAAO5F,SACrByK,SAAUX,EAAMW,YAIoB,CACtC7O,gBACAI,aACAI,YACAF,qBACAa,qBACA0C,wBANaoK,EA/Hf,YAAyE,IAAhDxC,EAA+C,EAA/CA,QAASrK,EAAsC,EAAtCA,UAAW+M,EAA2B,EAA3BA,gBAAiBnE,EAAU,EAAVA,OACtDrJ,EAAWyN,cADqD,EAEtBC,mBAAS,IAFa,mBAE/DwI,EAF+D,KAE7CC,EAF6C,KAiDtE,OA7CAvH,qBAAU,WACR5O,EAASH,EAAU,cACnBG,EACEX,EAAc,CACZwP,OAAO,EACPnO,KAAM,CAAC,CAAEwK,KAAM,WAAY4D,KAAM,oBAGpC,CAAC9O,IAEJ4O,qBAAU,WACR,GAAInO,EAAUC,MAAQ2I,EAAQ,CAC5B,IAAM+M,EAAuB,GACzB/M,EAAO6K,2BACT7K,EAAO6K,0BAA0BpN,KAAI,SAACsJ,GAAD,OACnCgG,EAAqB7L,KAArB,aAA8B9J,EAAU4I,OAAO8K,gBAAgBxK,MAAK,SAACL,GAAD,OAAUA,EAAK2K,WAAa7D,KAAK4D,gBAGzGmC,EACE1V,EAAUC,KAAK2I,QACb,SAAC5F,GAAD,OAEE8M,GAAezH,GAAgBrF,EAASsF,MAAO,IAAKM,EAAO8D,cAE3DoD,GAAe9M,EAASoQ,QAASxK,EAAOwK,UHNtB,SAACwC,EAAUhN,EAAQiN,GAC/C,IAAI5M,GAAS,EACPgH,EAAQ,GAgBd,OAfI2F,GACFA,EAASvP,KAAI,SAAC0J,GAAD,OAAUE,EAAMnG,KAAKiG,EAAK8F,OAGrCjN,GAAUA,EAAOG,OAAS,IACxBkH,EACFrH,EAAOvC,KAAI,SAAC6J,GACLD,EAAMzJ,SAAS0J,KAClBjH,GAAS,MAIbA,GAAS,GAGNA,EGVG6M,CAAsB9S,EAASqQ,qBAAsBzK,EAAOyK,qBAAsB,eHaxD,SAACuC,EAAUhN,EAAQiN,EAAQE,GAC/D,IAAI9M,GAAS,EACPgH,EAAQ,GAsBd,OArBI2F,GACFA,EAASvP,KAAI,SAAC0J,GAAD,OAAUE,EAAMnG,KAAKiG,EAAK8F,OAGrCjN,GAAUA,EAAOG,OAAS,IACxBkH,EACF8F,EAAS1P,KAAI,SAAC2P,GACZ,IAAIC,GAAO,EACXD,EAAO3P,KAAI,SAAC6J,GACND,EAAMzJ,SAAS0J,KACjB+F,GAAO,OAGE,IAATA,IACFhN,GAAS,MAIbA,GAAS,GAGNA,EGnCGiN,CACElT,EAASyQ,0BACT7K,EAAO6K,0BACP,aACAkC,IAGF7F,GAAe9M,EAAS2Q,QAAS/K,EAAO+K,WHxBfzD,EG0BGlN,EAASmT,WH1BPC,EG0BmBpT,EAASqT,YH1BvBjG,EG0BiCxH,EAAOZ,OHzBhEoI,EAAWrH,OAAS,IACrC8B,KAAOqF,GAAKG,UAAUD,EAAW,GAAIA,EAAW,GAAI,MAAO,OACzDvF,KAAOuL,GAAK/F,UAAUD,EAAW,GAAIA,EAAW,GAAI,MAAO,OAH/B,IAACF,EAAKkG,EAAKhG,WG8BzCsF,EAAoB1V,EAAUC,QAE/B,CAAC2I,EAAQ5I,IAGV,uBAAKmE,UAAU,iBAAf,UACE,eAACmK,GAAA,EAAD,UACE,gDAEF,eAAC,IAAD,CAAOnJ,MAAO,CAAEyO,WAAY,QAA5B,SACE,eAAC,KAAD,CACE9U,KAAK,UACL+F,QAAS,YDlFU,SAAC7E,GAC5B,IAAI+T,EAAM,GACVA,GACE,2IACF/T,EAAUqG,KAAI,SAACrD,GAKb,GAJA+Q,GAAG,WAAQ/Q,EAAS0J,YAAjB,MACHqH,GAAG,WAAQ/Q,EAASsF,MAAjB,MACHyL,GAAG,WAAQ/Q,EAASoJ,cAAjB,MAECpJ,EAASqQ,qBAAqBtK,OAAS,EAAG,CAC5C,IAAIuN,EAAsB,GAC1BtT,EAASqQ,qBAAqBhN,KAAI,SAACwC,GACjCyN,GAAmB,UAAOzN,EAAK2K,SAAZ,QAErBO,GAAG,WAAQuC,EAAoB7G,MAAM,GAAI,GAAtC,WAEHsE,GAAO,MAGT,GAA0C,MAAtC/Q,EAASyQ,2BAAqCzQ,EAASyQ,0BAA0B1K,OAAS,EAAG,CAC/F,IAAIwN,EAA0B,GAC9BvT,EAASyQ,0BAA0BpN,KAAI,SAACwC,GACtC0N,GAAuB,UAAO1N,EAAK2K,SAAZ,QAEzBO,GAAG,WAAQwC,EAAwB9G,MAAM,GAAI,GAA1C,WAEHsE,GAAO,MAGTA,GAAG,WAAQ/Q,EAASoQ,QAAjB,MACHW,GAAG,WAAQ/Q,EAASmT,WAAjB,MACHpC,GAAG,WAAQ/Q,EAASqT,SAAjB,MACHtC,GAAG,WAAQ/Q,EAASwT,aAAjB,MACHzC,GAAG,WAAQ/Q,EAAS5C,OAAjB,MACH2T,GAAG,WAAQ/Q,EAAS2Q,QAAjB,UAGL,IAAMW,EAAM,IAAIC,WAAW,CAAC,IAAM,IAAM,MAClCC,EAAO,IAAIC,KAAK,CAACH,EAAKP,GAAM,CAAEW,SAAU,QAAS5V,KAAM,2BAC7D,GAAI6V,UAAUC,WAEZD,UAAUC,WAAWJ,EAAM,oBACtB,CACL,IAAMK,EAAOb,SAASc,cAAc,KACpC,QAAsBhP,IAAlB+O,EAAKE,SAAwB,CAG/B,IAAMC,EAAMC,IAAIC,gBAAgBV,GAChCK,EAAKM,aAAa,OAAQH,GAC1BH,EAAKM,aAAa,WAAY,gBAC9BN,EAAK1P,MAAMiQ,WAAa,SACxBpB,SAASqB,KAAKC,YAAYT,GAC1BA,EAAKU,QACLvB,SAASqB,KAAKG,YAAYX,KC8BpB4B,CAAqBzW,EAAUC,OAEjCkE,UAAU,iBACVkG,QAASA,EANX,qCAWF,gBAAC,IAAD,CAAOlF,MAAO,CAAEsJ,aAAc,OAAQC,MAAO,SAA7C,UACE,eAAC,KAAD,CACE7J,QAAS,WACPtF,EAASP,GAAW,IACpBO,EAASQ,MAEXoE,UAAU,iBACVkG,QAASA,EANX,qCAUA,eAAC,KAAD,CACExF,QAAS,WACPtF,EAASL,GAAmB,IAC5BK,EAASD,KACT4O,KAAQS,QAAQ,6EAElBxK,UAAU,iBACVkG,QAAS0C,EAPX,kDAaF,eAAC,KAAD,IACA,eAACuD,GAAD,CACEE,SAAU,SAAC2B,GAAD,OAAY5S,EAASkD,EAAqB0P,KACpD9H,QAASA,EACTlF,MAAO,CAAEyO,WAAY,QACrBnD,WAAYzQ,EAAU4I,OACtBA,OAAQA,EACR8H,QAAS,kBAAMnR,EAASkD,OAAqBqD,OAG/C,eAAC,KAAD,CAAKX,MAAO,CAAEyO,WAAY,OAAQhF,UAAW,QAA7C,SACE,eAAC,KAAD,CAAKxK,KAAM,GAAX,SACE,eAAC8H,GAAD,CAAelM,UAAWyV,EAAkBpL,QAASA,EAASJ,KAAM,SAGnD,KAApBjK,EAAUP,OACT,eAAC,KAAD,CACE0F,MAAO,CAAEyJ,UAAW,QACpBV,QAAQ,sCACRkB,YAAapP,EAAUP,MACvBX,KAAK,gBCqCA+N,oBAZf,SAAyBC,GACvB,MAAO,CACLtL,UAAWsL,EAAMtL,UACjB6I,QAASyC,EAAMzC,QACf0C,gBAAiBD,EAAMC,gBACvBvM,SAAS,6BAAMsM,EAAMtM,SAASkW,QAAtB,IAA8B7V,eAAgBiM,EAAMtM,SAASK,iBACrE8V,cAAe7J,EAAMtM,SAASK,eAC9B+H,OAAQkE,EAAMlE,OAAOoL,SACrBvG,SAAUX,EAAMW,SAASxN,QAIW,CACtCrB,gBACAU,SACAN,aACA4C,iBACAxC,YACAF,qBACAqC,qBACAhB,oBACAoC,wBATakK,EAxJf,YAA2G,IAAlFrL,EAAiF,EAAjFA,UAAW6I,EAAsE,EAAtEA,QAAS0C,EAA6D,EAA7DA,gBAAiBvM,EAA4C,EAA5CA,SAAUoI,EAAkC,EAAlCA,OAAQ+N,EAA0B,EAA1BA,cAAelJ,EAAW,EAAXA,SACvFlO,EAAWyN,cADuF,EAGxDC,mBAAS,IAH+C,mBAGjG2J,EAHiG,KAG/EC,EAH+E,KAkDxG,OA7CA1I,qBAAU,WACR5O,EAASH,EAAU,cACnBG,EACEX,EAAc,CACZwP,OAAO,EACPnO,KAAM,CAAC,CAAEwK,KAAM,YAAa4D,KAAM,oBAGrC,CAAC9O,IAEJ4O,qBAAU,WACJ3M,EAAUvB,MAAQ2I,EACpBiO,EACErV,EAAUvB,KAAK2I,QAAO,SAACoL,GACrB,OAEElE,GAAekE,EAASvB,cAAe7J,EAAO6J,gBAE9C3C,GAAekE,EAASvJ,KAAM7B,EAAO6B,OAErCqF,GAAekE,EAAStB,OAAQ9J,EAAO8J,SAEvC5C,GAAekE,EAASlV,KAAM8J,EAAO9J,OAErCqR,GAAyB6D,EAAShM,KAAMY,EAAOZ,OAE/CmI,GAAyB6D,EAAShB,aAAcpK,EAAOoK,eAEvDlD,GAAekE,EAASd,UAAWtK,EAAOsK,YAE1ClD,GAAoBgE,EAASvG,SAAU7E,EAAO6E,WAE9CuC,GAAoBgE,EAASxT,SAAUoI,EAAOpI,WAE9CsP,GAAekE,EAASf,SAAUrK,EAAOqK,cAO/C4D,EAAoBrV,EAAUvB,QAE/B,CAAC2I,EAAQpH,IAGV,iCACE,eAAC8M,GAAA,EAAD,UACE,iDAEF,gBAAC,IAAD,CAAOnJ,MAAO,CAAEoJ,YAAa,IAA7B,UACE,eAAC,KAAD,CACEzP,KAAK,UACL+F,QAAS,WACPiP,GAAoBtS,EAAUvB,KAAM0W,EAAenW,IAErD2D,UAAU,iBACVkG,QAASA,EANX,oCAUA,eAAC,KAAD,CACEvL,KAAK,UACL+F,QAAS,WACP2J,YAAS,sBAEXrK,UAAU,iBACVkG,QAASA,EANX,wBAWF,gBAAC,IAAD,CAAOlF,MAAO,CAAEsJ,aAAc,OAAQC,MAAO,SAA7C,UACE,eAAC,KAAD,CACE7J,QAAS,WACPtF,EAASP,GAAW,IACpBO,EAASgC,MAEX4C,UAAU,iBACVkG,QAASA,EANX,sCAUA,eAAC,KAAD,CACExF,QAAS,WACPtF,EAASP,GAAW,IACpBO,EAASgB,MAEX4D,UAAU,iBACVkG,QAASA,EANX,qCAUA,eAAC,KAAD,CACExF,QAAS,WACPtF,EAASL,GAAmB,IAC5BK,EAASD,KACT4O,KAAQS,QAAQ,6EAElBxK,UAAU,iBACVkG,QAAS0C,EAPX,kDAaF,eAAC,KAAD,IACA,eAACuD,GAAD,CACEC,YAAU,EACVC,SAAU,SAAC2B,GAAD,OAAY5S,EAASoD,EAAqBwP,KACpD9H,QAASA,EACT7J,SAAUA,EACV2E,MAAO,CAAEyO,WAAY,QACrBhL,OAAQA,EACR8H,QAAS,kBAAMnR,EAASoD,OAAqBmD,KAC7C2H,SAAUA,IAEZ,eAAC,KAAD,CAAKtI,MAAO,CAAEyO,WAAY,OAAQhF,UAAW,QAA7C,SACE,eAAC,KAAD,CAAKxK,KAAM,GAAX,SACE,eAAC4F,GAAD,CAAexI,UAAWoV,EAAkB3M,KAAM,GAAII,QAASA,EAASxJ,eAAgB8V,QAIvE,KAApBnV,EAAU/B,OACT,eAAC,KAAD,CACE0F,MAAO,CAAEyJ,UAAW,QACpBV,QAAQ,sCACRkB,YAAa5N,EAAU/B,MACvBX,KAAK,gBC7IAgY,OAXf,WACE,OACE,iCACE,eAACxI,GAAA,EAAD,UACE,sDAEF,8D,2DCNS,SAASyI,GAAT,GAA4B,IAAT9W,EAAQ,EAARA,KAChC,OAAIA,GAAQA,EAAK8I,OAAS,EACjB9I,EAAKoG,KAAI,SAAC2Q,GAAD,OACd,eAAC,KAAD,UAMGA,GALI9L,KAAKC,SACPvL,SAAS,IACTwL,QAAQ,WAAY,IACpB7I,OAAO,EAAG,QAOjB,gCACE,uDClBS,WAA0B,wCCA1B,OAA0B,6CCI5B0U,GAAc,SAACpV,GAC1B,OAAO,IAAI6L,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,qBAA+CmD,IACjDgM,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,mCAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,qBA+HrCuB,GAAc,SAAClB,GAC1B,OAAO,IAAIyN,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,YAA8C,CACjDiB,OAAQ,OACR0V,KAAM6B,KAAKC,UAAUlX,KAEpB4N,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,gDAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,qBCkGnCiN,oBANf,SAAyBC,GACvB,MAAO,CAAEzC,QAASyC,EAAMzC,QACtBxJ,eAAgBiM,EAAMtM,SAASK,eAC/BL,SAAUsM,EAAMtM,SAASkW,UAGW,CAAE9X,gBAAeI,aAAYI,YAAW0D,6BAAjE+J,EAlPf,YAAuE,IAAzChL,EAAwC,EAAxCA,GAAIwI,EAAoC,EAApCA,QAASxJ,EAA2B,EAA3BA,eAAgBL,EAAW,EAAXA,SACnDjB,EAAWyN,cADmD,EAEpCC,mBAAS,MAF2B,mBAE7DjK,EAF6D,KAEnDoU,EAFmD,OAG1CnK,mBAAS,IAHiC,mBAG7DxN,EAH6D,KAGtD4X,EAHsD,OAIlCpK,mBAAS,IAJyB,mBAI7DzL,EAJ6D,KAIlD8V,EAJkD,KAM9DC,EAAiBhO,GAAgBvG,EAAWA,EAASxC,SAAW,GAAIA,GAgC1E,OA9BA2N,qBAAU,WACR5O,EAASH,EAAU,cACnBG,EAASP,GAAW,ID8Ec,SAAC6C,GACrC,OAAO,IAAI6L,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,gCAA0DmD,IAC5DgM,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,mCAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,oBC1F9C4X,CAAuB3V,GACpBgM,MAAK,SAAC3N,GAEL,OADAoX,EAAapX,GACN+W,GAAYpV,MAEpBgM,MAAK,SAAC3N,GACLkX,EAAYlX,GACZX,EACEX,EAAc,CACZwP,OAAO,EACPnO,KAAM,CACJ,CAAEwK,KAAM,WAAY4D,KAAM,cAC1B,CACE5D,KAAMvK,EAASoI,MAAME,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC9C6F,KAAK,cAAD,OAAgBnO,EAASwM,kBAKrCnN,EAASP,GAAW,OAErB+O,OAAM,SAACC,GACNqJ,EAASrJ,EAAIE,SACb3O,EAASP,GAAW,SAEvB,CAACO,EAAUsC,IAEVwI,EAEA,iCACE,eAACiE,GAAA,EAAD,UACE,kDAEF,eAACmJ,GAAA,EAAD,CACEC,MAAI,EACJvS,MAAO,CACLY,SAAU,aAMN,KAAVtG,GAAiBuD,EAyBnB,iCACE,eAACsL,GAAA,EAAD,UACE,iCAAQtL,EAASsF,UAEnB,uBAAKnE,UAAU,kBAAf,UACE,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAKwT,GAAI,GAAT,UACE,sBAAIxT,UAAU,QAAd,UACwB,WAArBnB,EAASoQ,QACR,sBAAKjP,UAAU,uBAAuByT,IAAKC,GAAOC,IAAI,gBAEtD,sBAAK3T,UAAU,uBAAuByT,IAAKG,GAAOD,IAAI,gBAEvD9U,EAASsF,SAEZ,eAAC,KAAD,OAEF,gBAAC,IAAD,CAAOnD,MAAO,CAAEoJ,YAAa,IAA7B,UACE,eAAC,KAAD,CACEzP,KAAK,UACL+F,QAAS,WACP2J,YAAS,eAEXrK,UAAU,iBACVkG,QAASA,EANX,oBAUA,eAAC,KAAD,CACEvL,KAAK,UACL+F,QAAS,WACP2J,YAAS,kCAAD,OAAmCxL,EAAS0J,eAEtDvI,UAAU,iBACVkG,QAASA,EANX,kCAWA,eAAC,KAAD,CACEvL,KAAK,UACL+F,QAAS,WACPtF,EAASuD,EAA0BE,EAAS0J,eAE9CvI,UAAU,iBACVkG,QAASA,EANX,6CAaJ,gBAAC,KAAD,WACE,eAAC,KAAD,CAAKsN,GAAI,CAAEvT,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEkC,QAAS,IAA3D,SACE,gBAAC,KAAD,CAAMiB,MAAM,+BAAZ,UACE,+BACE,yCADF,KACmBtF,EAASoJ,iBAE5B,+BACE,2CADF,KACqBpJ,EAAS2Q,WAE9B,+BACE,yCADF,KACmB3Q,EAAS5C,OAD5B,IACoC,eAACwL,GAAD,CAAYxL,OAAQ4C,EAAS5C,YAEjE,+BACE,qDADF,KAC4B4C,EAASgV,WAAahV,EAASgV,WAAa,KAExE,+BACE,+CADF,KACyBhV,EAASiV,cAAgBjV,EAASiV,cAAgB,UAI/E,eAAC,KAAD,CAAKN,GAAI,CAAEvT,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEkC,QAAS,IAA3D,SACE,eAAC,KAAD,CAAMiB,MAAM,oBAAZ,SACE,gBAAC,KAAD,WAC2B,OAAxBtF,EAASmT,WACR,eAAC,KAAS5D,KAAV,CAAe2F,IAAK,eAACC,GAAA,EAAD,CAAqBhT,MAAO,CAAEY,SAAU,WAAeX,MAAM,MAAjF,SACE,qDAGF,gBAAC,KAASmN,KAAV,CAAe2F,IAAK,eAACE,GAAA,EAAD,CAAqBjT,MAAO,CAAEY,SAAU,WAA5D,UACE,0CADF,MACkBgC,GAAQ/E,EAASmT,eAGd,OAAtBnT,EAASqT,SACR,eAAC,KAAS9D,KAAV,CAAe2F,IAAK,eAACC,GAAA,EAAD,CAAqBhT,MAAO,CAAEY,SAAU,WAAeX,MAAM,MAAjF,SACE,gDAGF,gBAAC,KAASmN,KAAV,CAAe2F,IAAK,eAACE,GAAA,EAAD,CAAqBjT,MAAO,CAAEY,SAAU,WAA5D,UACE,qCADF,MACgBgC,GAAQ/E,EAASqT,aAGR,OAA1BrT,EAASwT,aACR,eAAC,KAASjE,KAAV,CAAe2F,IAAK,eAACC,GAAA,EAAD,CAAqBhT,MAAO,CAAEY,SAAU,WAAeX,MAAM,MAAjF,SACE,qDAGF,gBAAC,KAASmN,KAAV,CAAe2F,IAAK,eAACE,GAAA,EAAD,CAAqBjT,MAAO,CAAEY,SAAU,WAA5D,UACE,0CADF,MACqBgC,GAAQ/E,EAASwT,wBAM9C,eAAC,KAAD,CAAKmB,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMe,MAAO,CAAEkC,QAAS,IAA3D,SACE,eAAC,KAAD,CACEgR,OAAQ,gDACRC,UAAQ,EACR/M,WACGvI,EAASqQ,sBAAiE,IAAzCrQ,EAASqQ,qBAAqBtK,OAE5D/F,EAASqQ,qBADT,CAAC,CAAEG,SAAU,iCAGnB+E,WAAY,SAAC1P,GAAD,OAAU,eAAC,KAAK0J,KAAN,UAAY1J,EAAK2K,gBAG3C,eAAC,KAAD,CAAKmE,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMe,MAAO,CAAEkC,QAAS,IAA3D,SACE,eAAC,KAAD,CACEgR,OAAQ,oDACRC,UAAQ,EACR/M,WACGvI,EAASyQ,2BAA2E,IAA9CzQ,EAASyQ,0BAA0B1K,OAEtE/F,EAASyQ,0BADT,CAAC,CAAED,SAAU,oCAGnB+E,WAAY,SAAC1P,GAAD,OAAU,eAAC,KAAK0J,KAAN,UAAY1J,EAAK2K,gBAG3C,eAAC,KAAD,CAAKpP,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACM,eAAC,KAAD,CAAMiB,MAAM,kCAAZ,SACE,eAAC,KAAD,UACGiP,GACC5N,OAAOC,KAAK2N,GAAgBlR,KAAI,SAACiD,GAAD,OAC9B,eAAC,KAAD,CAAKqO,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,+BACE,+BAAInF,EAAJ,OADF,KACiB,eAACyN,GAAD,CAAS9W,KAAMsX,EAAejO,GAAKS,qBAOpE,eAAC,KAAD,CAAK3F,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACE,eAAC2C,GAAD,CACExI,UAAWA,EACX8G,MAAM,wBACN2B,KAAM,GACNI,QAASA,EACTxJ,eAAgBA,eA5KxB,iCACE,eAACyN,GAAA,EAAD,UACE,8CAEF,eAAC,KAAD,CACEnJ,MAAO,CAAEyJ,UAAW,QACpBV,QAAQ,sCACRkB,YACE,iCACE,2EACA,wBACA,kCACE,qDACC3P,QAIPX,KAAK,gB,yFCxFA,OAA0B,iCCSjC0Z,GAA4BC,KAA5BD,OAAQE,GAAoBD,KAApBC,OAAQC,GAAYF,KAAZE,QA0LT9L,oBAVf,SAAyBC,GACvB,MAAO,CACL8L,WAAY9L,EAAM8L,WAClBvO,QAASyC,EAAMzC,QACf0C,gBAAiBD,EAAMC,gBACvB7K,WAAY4K,EAAM5K,WAClB2W,OAAQ/L,EAAM+L,UAIsB,CAAE7Z,aAAYI,YAAW6C,WAAlD4K,EAxLf,YAA2F,IAAvE+L,EAAsE,EAAtEA,WAAYvO,EAA0D,EAA1DA,QAAS0C,EAAiD,EAAjDA,gBAAiB+L,EAAgC,EAAhCA,SAAU5W,EAAsB,EAAtBA,WAAY2W,EAAU,EAAVA,OACxEtZ,EAAWyN,cADuE,EAElDC,oBAAS,GAFyC,mBAEjF8L,EAFiF,KAEpEC,EAFoE,KAiBxF,OAbA7K,qBAAU,YACHpB,GAAmBgM,IACtB7K,KAAQ+K,KAAK,mFACb1Z,EAASP,GAAW,IACpBO,EAAS0C,KACT+W,GAAe,IAGbjM,GACFiM,GAAe,KAEhB,CAACzZ,EAAUwN,EAAiBgM,IAG7B,iCACE,gBAAC,KAAD,CAAQ5U,UAAU,SAAlB,UACE,eAACqU,GAAD,CAAQrU,UAAU,kCAAlB,SACE,gBAAC,KAAD,CAAKrF,KAAK,OAAOoa,QAAQ,gBAAgBC,MAAM,SAA/C,UACE,eAAC,KAAD,CACExB,GAAI,CAAEvT,KAAM,GAAIgV,OAAQ,GACxBC,GAAI,CAAEjV,KAAM,EAAGgV,OAAQ,GACvB9G,GAAI,CAAElO,KAAM,EAAGgV,OAAQ,GACvB/J,GAAI,CAAEjL,KAAM,EAAGgV,OAAQ,GACvB9J,GAAI,CAAElL,KAAM,EAAGgV,OAAQ,GALzB,SAOE,sBAAKjV,UAAU,eAAf,SACE,gBAAC,IAAD,CACEA,UAAU,2BACV8C,GAAG,IACHpC,QAAS,WACPtF,EAASH,EAAU,MAJvB,iCAOuB,WAI3B,eAAC,KAAD,CAAKuY,GAAI,CAAEvT,KAAM,IAAMiV,GAAI,CAAEjV,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,IAAzF,SACE,eAAC,KAAD,CAAKtF,KAAK,OAAOoa,QAAQ,MAAzB,SACE,gBAAC,KAAD,CACE/F,KAAK,aACLmG,MAAM,OACNnV,UAAU,cACVb,aAAcuV,EACdU,SAAU,SAAC7U,GACTnF,EAASH,EAAUsF,EAAE4E,OANzB,UASE,eAAC,KAAKiJ,KAAN,UACE,gBAAC,IAAD,CAAMtL,GAAG,aAAT,UACE,eAACuS,GAAA,EAAD,CACErU,MAAO,CACLY,SAAU,OACV0T,OAAQ,MACRC,IAAK,MACLC,SAAU,cANhB,mBADa,aAaf,eAAC,KAAKpH,KAAN,UACE,gBAAC,IAAD,CAAMtL,GAAG,aAAT,UACE,eAAC2S,GAAA,EAAD,CACEzU,MAAO,CACLY,SAAU,OACV0T,OAAQ,MACRC,IAAK,MACLC,SAAU,cANhB,oBADa,aAaf,eAAC,KAAKpH,KAAN,UACE,gBAAC,IAAD,CAAMtL,GAAG,YAAT,UACE,eAAC4S,GAAA,EAAD,CACE1U,MAAO,CACLY,SAAU,OACV0T,OAAQ,MACRC,IAAK,MACLC,SAAU,cANhB,mBADa,wBAkBzB,gBAAChB,GAAD,WACE,gBAAC,KAAD,WACE,eAAC,KAAD,CACEhB,GAAI,CAAEvT,KAAM,GAAIgV,OAAQ,GACxBC,GAAI,CAAEjV,KAAM,GAAIgV,OAAQ,GACxB9G,GAAI,CAAElO,KAAM,GAAIgV,OAAQ,GACxB/J,GAAI,CAAEjL,KAAM,GAAIgV,OAAQ,GACxB9J,GAAI,CAAElL,KAAM,GAAIgV,OAAQ,GAL1B,SAOE,eAAC,KAAD,CACEjU,MAAO,CACLY,SAAU,OACV6I,UAAW,OACXkL,aAAc,QAJlB,SAOGlB,EAAWvS,KAAI,SAACwC,GAAD,OACd,eAAC,KAAW0J,KAAZ,UACE,eAAC,IAAD,CAAMtL,GAAI4B,EAAKwF,KAAf,SAAsBxF,EAAK4B,QADP5B,EAAK4B,aAMjC,eAAC,KAAD,CAAKrG,KAAM,EAAX,SACG2I,GAAoB1C,GAA0B,KAAfnI,EAC9B,sBACEiD,MAAO,CACLyJ,UAAW,OACXkL,aAAc,OACdC,YAAa,OACbC,UAAW,QACXC,QAAS,SANb,SASE,eAACxC,GAAA,EAAD,CAAcC,MAAI,MAGpB,wBACEvS,MAAO,CACLyJ,UAAW,OACXkL,aAAc,OACdC,YAAa,OACbC,UAAW,QACXC,QAAS,SANb,qBASQ/X,GAAc,mCAK5B,eAAC,KAAD,CAAgB6M,OAAQA,KAAxB,SACE,sBAAK5K,UAAU,sBAAf,SAAsC2U,SAG1C,eAACJ,GAAD,CACEvT,MAAO,CACL6U,UAAW,SACXE,WAAY,UACZnU,SAAU,QAJd,iCAUF,eAAC,IAAD,CACEkB,GAAG,IACHpC,QAAS,WACPtF,EAASH,EAAU,MAErB+F,MAAO,CAAEI,OAAQ,OALnB,SAOE,sBAAKpB,UAAU,OAAOyT,IAAKuC,GAAMrC,IAAI,qB,qECinB9BjL,oBAVf,SAAyBC,GACvB,MAAO,CACLtM,SAAUsM,EAAMtM,SAASkW,OACzB7V,eAAgBiM,EAAMtM,SAASK,eAC/BpB,MAAOqN,EAAMtM,SAASf,OAAS,GAC/BsN,gBAAiBD,EAAMC,gBACvB1C,QAASyC,EAAMzC,WAIqB,CACtCzL,gBACAI,aACAuB,oBACAnB,YACA2B,iBACAE,iBACAE,cACAjC,qBACAI,UATauN,EAtwBf,YAAsF,IAA9DrM,EAA6D,EAA7DA,SAAUK,EAAmD,EAAnDA,eAAgBpB,EAAmC,EAAnCA,MAAOsN,EAA4B,EAA5BA,gBAAiB1C,EAAW,EAAXA,QAClE9K,EAAWyN,cADkE,EAEjDC,wBAASnH,GAFwC,mBAE5EsU,EAF4E,KAEjEC,EAFiE,OAG/CpN,wBAASnH,GAHsC,mBAG5EwU,EAH4E,KAGhEC,EAHgE,OAInDtN,wBAASnH,GAJ0C,mBAI5E0U,EAJ4E,KAIlEC,EAJkE,OAKjDxN,mBAAS,MALwC,mBAK5EyN,EAL4E,KAKjEC,EALiE,OAMzD1N,wBAASnH,GANgD,mBAM5E8U,EAN4E,KAMrEC,EANqE,OAOnD5N,oBAAS,GAP0C,mBAO5E6N,EAP4E,KAOlEC,EAPkE,OAQ/B9N,oBAAS,GARsB,mBAQ5E+N,EAR4E,KAQxDC,EARwD,OASpEhK,KAAKC,UAAbC,EAT4E,sBAU/DF,KAAKC,UAAlBgK,EAV4E,uBAW5DjK,KAAKC,UAArBiK,GAX4E,qBAY3E9J,GAAWC,KAAXD,OAgBF+J,GAAc,SAACC,IJoJY,SAACC,EAAOD,GACzC,OAAO,IAAI3N,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,uCAAiE4c,EAAjE,qBAAmFD,GAAY,CAClG1b,OAAQ,QAEPkO,MAAK,SAAC3N,GACL,IAAKA,EAASC,GACZ,MAAM,IAAI2N,MAAM,2CAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,qBIlK9C2b,CAAoBX,EAAOS,GACxBxN,MAAK,WACJtO,EtBgEC,CAAET,KAAMsC,EAAYvC,QsBhEF,CAAEyc,MAAOV,EAAOS,cACnCV,EAAa,MACbzM,KAAQsN,QAAQ,2BAChBX,OAAS/U,MAEViI,OAAM,SAACC,GACN2M,EAAa3M,EAAIE,SACjB6M,GAAY,OAIZU,GAAgB,SAACH,IJ0JU,SAACA,GAClC,OAAO,IAAI5N,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,iCAA2D4c,GAAS,CACvE3b,OAAQ,WAEPkO,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,4CAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,qBIxK9C8b,CAAoBJ,GACjBzN,MAAK,WACJtO,EtBwDC,CAAET,KAAMuC,EAAcxC,QsBxDF,CAAEyc,WACvBX,EAAa,MACbzM,KAAQsN,QAAQ,0BAChBX,OAAS/U,MAEViI,OAAM,SAACC,GACN2M,EAAa3M,EAAIE,SACjB6M,GAAY,OAuDZY,GAAW,SAAC9Z,GACS,mBAArByY,EAAWgB,MJ0Je,SAACzZ,GACjC,OAAO,IAAI6L,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,0BAAoDmD,GAAM,CAC7DlC,OAAQ,WAEPkO,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,8CAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,oBIxK5Cgc,CAAmB/Z,GAChBgM,MAAK,WACJtO,EAAS0B,EAAe,CAAEY,QAC1B8Y,EAAa,MACbzM,KAAQsN,QAAQ,6BAEjBzN,OAAM,SAACC,GACN2M,EAAa3M,EAAIE,YJwCG,SAACrM,GAC7B,OAAO,IAAI6L,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,oBAA8CmD,GAAM,CACvDlC,OAAQ,WAEPkO,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,8CAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,oBIpD5Cic,CAAqBha,GAClBgM,MAAK,WACJtO,EAAS0B,EAAe,CAAEqa,MAAOhB,EAAWgB,MAAOzZ,QACnD8Y,EAAa,MACbzM,KAAQsN,QAAQ,6BAEjBzN,OAAM,SAACC,GACN2M,EAAa3M,EAAIE,YAGvBqM,OAAczU,IAyMhB,OAtMAqI,qBAAU,WACR5O,EAASH,EAAU,aACnBG,EACEX,EAAc,CACZwP,OAAO,EACPnO,KAAM,CAAC,CAAEwK,KAAM,WAAY4D,KAAM,mBAGpC,CAAC9O,IA+LF,uBAAK4E,UAAU,WAAf,UACE,eAACmK,GAAA,EAAD,UACE,gDAEF,eAAC,KAAD,CACEhG,MAAK,0BAAkBsS,GACvBlU,aAAmBZ,IAAV8U,EACTkB,SAAU,kBAAMjB,OAAS/U,IACzBiW,OAAQ,CACN,eAAC,KAAD,CAAmBlX,QAAS,kBAAMgW,OAAS/U,IAA3C,oBAAY,QAGZ,eAAC,KAAD,CAAmBhH,KAAK,UAAUuL,QAASA,EAASxF,QAAS,kBAAMqW,EAAUrH,UAA7E,wBAAY,QAGZ,eAAC,KAAD,CACEmI,QACE,gBAAC,IAAD,CAAO7W,MAAO,CAAEI,OAAQ,OAAQD,MAAO,OAAQ2W,cAAe,OAA9D,UACE,eAAC,KAAD,CAAQpX,QAAS,kBAAMoW,GAAsB,IAA7C,qBACA,gBAAC,KAAD,CACEnc,KAAK,UACL+F,QAAS,WACP4W,GAAcb,GACdK,GAAsB,IAJ1B,uBAOY,eAACiB,GAAA,EAAD,UAIhB5T,MAAM,mCACN6T,QAAQ,QACRzV,QAASsU,EACToB,gBAAiB,SAAC1V,GACXA,GACHuU,GAAsB,IApB5B,SAwBE,eAAC,KAAD,CAAqBnc,KAAK,UAAU+F,QAAS,kBAAMoW,GAAsB,IAAzE,sBAAY,aAnClB,SAyCE,eAAC,KAAD,CACE/I,SAAU,SAACC,GACTiJ,GAAYjJ,EAAOkK,OAErBlL,KAAM+J,EACNjJ,WAAW,OALb,SAOE,eAAC,KAAKM,KAAN,CACElG,MAAM,cACN5B,KAAK,OACL+H,aAAcoI,EACd0B,MAAO,CAAC,CAAEC,UAAU,EAAMrO,QAAS,sBAJrC,SAME,eAAC,KAAD,UAKN,eAAC,KAAD,CACE5F,MAAM,0BACN5B,QAASoU,EACTgB,SAAU,kBAAMf,GAAY,IAC5BgB,OAAQ,CACN,eAAC,KAAD,CAAmBlX,QAAS,kBAAMkW,GAAY,IAA9C,oBAAY,QAGZ,eAAC,KAAD,CAAmBjc,KAAK,UAAUuL,QAASA,EAASxF,QAAS,kBAAMsW,GAAatH,UAAhF,wBAAY,SARhB,SAaE,eAAC,KAAD,CACE3B,SAAU,SAACC,GA1YA,IAACmJ,IA2YCnJ,EAAOqK,IA1Y1BC,GAAkB,CAAEnB,QAAO9W,MAAO,YAC/BqJ,MAAK,SAAC3N,GACLX,EAAS4B,EAAYjB,IACrBya,EAAa,MACbzM,KAAQsN,QAAQ,oBAChBT,GAAY,MAEbhN,OAAM,SAACC,GACN2M,EAAa3M,EAAIE,SACjB6M,GAAY,OAmYV5J,KAAMgK,GACNlJ,WAAW,OALb,SAOE,eAAC,KAAKM,KAAN,CACElG,MAAM,cACN5B,KAAK,MACL+H,aAAcoI,EACd0B,MAAO,CAAC,CAAEC,UAAU,EAAMrO,QAAS,sBAJrC,SAME,eAAC,KAAD,UAIN,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAK9J,KAAM,GAAIe,MAAO,CAAEoJ,YAAa,OAAQE,aAAc,QAA3D,UACE,eAAC,IAAD,UACE,eAAC,KAAD,CACE3P,KAAK,UACL+F,QAAS,WACPkW,GAAY,IAEd5W,UAAU,iBACVkG,QAASA,EANX,uCAWF,gBAAC,IAAD,CAAOlF,MAAO,CAAEuJ,MAAO,SAAvB,UACE,eAAC,KAAD,CACE7J,QAAS,WACPtF,EAASP,GAAW,IACpBO,EAASgB,MAEX4D,UAAU,iBACVkG,QAASA,EANX,qCAUA,eAAC,KAAD,CACEvL,KAAK,QACL+F,QAAS,WACPtF,EAASL,GAAmB,IAC5BK,EAASD,KACT4O,KAAQS,QAAQ,6EAElBxK,UAAU,iBACVkG,QAAS0C,EARX,qDAcJ,eAAC,KAAD,CAAK3I,KAAM,GAAX,SACE,eAAC,KAAD,CAAM+M,KAAMA,EAAMe,SAxZT,SAACjS,GACZua,EACe,mBAAbA,EJkKqB,SAACva,GAC9B,OAAO,IAAIyN,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,kBAAoD,CACvDiB,OAAQ,OACR0V,KAAM6B,KAAKC,UAAUlX,KAEpB4N,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,gDAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,oBIjL1C8c,CAAgB,6BAAKzc,GAAN,IAAYyI,YAAkC,YAArBzI,EAAKyI,eAC1CmF,MAAK,SAAC3N,GACLX,EAAS4B,EAAYjB,IACrBya,EAAa,MACbzM,KAAQsN,QAAQ,uBAEjBzN,OAAM,SAACC,GACN2M,EAAa3M,EAAIE,YAGrBuO,GAAkB,cAAEnB,MAAOd,GAAava,IACrC4N,MAAK,SAAC3N,GACLX,EAAS4B,EAAYjB,IACrBya,EAAa,MACbzM,KAAQsN,QAAQ,uBAEjBzN,OAAM,SAACC,GACN2M,EAAa3M,EAAIE,YAGM,mBAApBkM,EAAUkB,MJkKS,SAACzZ,EAAI5B,GACrC,OAAO,IAAIyN,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,0BAAoDmD,GAAM,CAC7DlC,OAAQ,MACR0V,KAAM6B,KAAKC,UAAUlX,KAEpB4N,MAAK,SAAC3N,GACL,IAAKA,EAASC,GACZ,MAAM,IAAI2N,MAAM,6CAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,oBIjL5C+c,CAAmBvC,EAAUtR,iBAAX,aAAC,gBAAiC7I,GAAlC,IAAwCyI,YAAkC,YAArBzI,EAAKyI,eACzEmF,MAAK,SAAC3N,GACLX,EAASwB,EAAeb,IACxBya,EAAa,MACbzM,KAAQsN,QAAQ,8BAEjBzN,OAAM,SAACC,GACN2M,EAAa3M,EAAIE,YJgDG,SAACrM,EAAI5B,GACjC,OAAO,IAAIyN,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,oBAA8CmD,GAAM,CACvDlC,OAAQ,MACR0V,KAAM6B,KAAKC,UAAUlX,KAEpB4N,MAAK,SAAC3N,GACL,IAAKA,EAASC,GACZ,MAAM,IAAI2N,MAAM,6CAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,oBI7D5Cgd,CAAqBxC,EAAUvQ,YAAX,aAAC,gBAChB5J,GADe,IAElBqb,MAAOlB,EAAUkB,SAEhBzN,MAAK,SAAC3N,GACLX,EAASwB,EAAeb,IACxBya,EAAa,MACbzM,KAAQsN,QAAQ,8BAEjBzN,OAAM,SAACC,GACN2M,EAAa3M,EAAIE,YAGvBmM,OAAavU,GACb2U,OAAY3U,IAwWN,SACE,gBAAC,KAAD,WACa,KAAVrG,GACC,eAAC,KAAD,CAAK2E,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACE,eAAC,KAAD,CACElC,MAAO,CAAEyJ,UAAW,QACpBV,QAAQ,+CACRkB,YAAa3P,EACbX,KAAK,YAII,OAAd4b,GACC,eAAC,KAAD,CAAKtW,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACE,eAAC,KAAD,CAAOlC,MAAO,CAAEyJ,UAAW,QAAUV,QAAQ,SAASkB,YAAasL,EAAW5b,KAAK,YAGvF,eAAC,KAAD,CAAK6Y,GAAI,CAAEvT,KAAM,IAAMkL,GAAI,CAAElL,KAAM,IAAMe,MAAO,CAAEkC,QAAS,IAA3D,SACE,gBAAC,KAAD,CAAMiB,MAAM,oBAAZ,UACGkS,GAAyB,mBAAbA,GACX,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAKpW,KAAM,GAAX,UACE,eAAC,KAAKmO,KAAN,CACElG,MAAM,SACN5B,KAAK,MACL6R,MAAO,CAAC,CAAEC,UAAU,IACpB/J,aAAa,MACbrN,MAAO,CAAEsU,OAAQ,QACjB1H,SAAU,CAAE3N,KAAM,GAClB4N,WAAY,CAAE5N,KAAM,IAPtB,SASE,eAAC,KAAD,MAEF,eAAC,KAAKmO,KAAN,CACElG,MAAM,SACN5B,KAAK,QACL6R,MAAO,CAAC,CAAEC,UAAU,IACpB/J,aAAa,UACbrN,MAAO,CAAEsU,OAAQ,QACjB1H,SAAU,CAAE3N,KAAM,GAClB4N,WAAY,CAAE5N,KAAM,IAPtB,SASE,eAAC,KAAD,MAEF,eAAC,KAAKmO,KAAN,CACElG,MAAM,OACN5B,KAAK,cACL6R,MAAO,CAAC,CAAEC,UAAU,IACpB/J,aAAa,UACbrN,MAAO,CAAEsU,OAAQ,QACjB1H,SAAU,CAAE3N,KAAM,GAClB4N,WAAY,CAAE5N,KAAM,IAPtB,SASE,gBAAC,KAAD,CAAQe,MAAO,CAAEG,MAAO,QAAxB,UACE,eAAC+L,GAAD,CAAQ7M,MAAM,UAAd,qBACA,eAAC6M,GAAD,CAAQ7M,MAAM,gBAAd,mCAIN,eAAC,KAAD,CAAKJ,KAAM,EAAX,SACE,sBAAKe,MAAO,CAAEuJ,MAAO,QAASD,aAAc,QAA5C,SACE,gBAAC,IAAD,CAAOxE,KAAM,GAAb,UACE,eAAC,KAAD,CACEnL,KAAK,UACL+F,QAAS,WACPsM,EAAK0C,UAEPgJ,MAAM,SALR,SAOE,eAACxR,GAAA,EAAD,MAGF,eAAC,KAAD,CACEvM,KAAK,UACL+F,QAAS,WACP4V,OAAY3U,IAEd+W,MAAM,SALR,SAOE,eAACC,GAAA,EAAD,gBAOZ,eAAC,KAAD,CACEzS,QAASA,EACTqB,OAAO,mBACPJ,QAAS,CAAC,2BAENhD,MAAO,SACP9E,UAAW,MACX8F,IAAK,MACLiB,OAAQ,CACNK,QAAS,SAACpL,EAAGgL,GAAJ,OAAUhL,EAAE8J,IAAIqB,cAAcH,EAAElB,QAExC1F,GAAqB,MAAO,WAR1B,IASLiD,OAAQ,SAACyC,EAAKrD,GAAN,OACN,+BACGmU,GACmB,mBAApBA,EAAUkB,OACVlB,EAAUtR,mBAAqB7C,EAAO6C,iBACpC,eAAC,KAAKyJ,KAAN,CAAW9H,KAAK,MAAM6R,MAAO,CAAC,CAAEC,UAAU,IAAS/J,aAAclJ,EAAKnE,MAAO,CAAEsU,OAAQ,QAAvF,SACE,eAAC,KAAD,MAGF,gCAAOnQ,SAlBR,2BAwBLhB,MAAO,SACP9E,UAAW,QACX8F,IAAK,QACLiB,OAAQ,CACNK,QAAS,SAACpL,EAAGgL,GAAJ,OAAUhL,EAAEgF,MAAMmG,cAAcH,EAAEhG,UAE1CZ,GAAqB,QAAS,WA9B5B,IA+BLiD,OAAQ,SAACrC,EAAOyB,GAAR,OACN,+BACGmU,GACmB,mBAApBA,EAAUkB,OACVlB,EAAUtR,mBAAqB7C,EAAO6C,iBACpC,eAAC,KAAKyJ,KAAN,CACE9H,KAAK,QACL6R,MAAO,CAAC,CAAEC,UAAU,IACpB/J,aAAchO,EACdW,MAAO,CAAEsU,OAAQ,QAJnB,SAME,eAAC,KAAD,MAGF,gCAAOjV,SAKf,CACE8D,MAAO,OACP9E,UAAW,cACX8F,IAAK,cACLiB,OAAQ,CACNK,QAAS,SAACpL,EAAGgL,GAAJ,OAAUhL,EAAEkJ,YAAYiC,cAAcH,EAAE9B,eAEnD7B,OAAQ,SAAC6B,EAAazC,GAAd,OACN,+BACGmU,GACmB,mBAApBA,EAAUkB,OACVlB,EAAUtR,mBAAqB7C,EAAO6C,iBACpC,eAAC,KAAKyJ,KAAN,CACE9H,KAAK,cACL6R,MAAO,CAAC,CAAEC,UAAU,IACpB/J,aAAc9J,EACdvD,MAAO,CAAEsU,OAAQ,QAJnB,SAME,gBAAC,KAAD,CAAQtU,MAAO,CAAEG,MAAO,KAAxB,UACE,eAAC+L,GAAD,CAAQ7M,MAAM,UAAd,qBACA,eAAC6M,GAAD,CAAQ7M,MAAM,gBAAd,gCAIJ,gCAAOkE,EAAc,UAAY,sBAKzC,CACEpD,MAAO,KACP9B,UAAW,MACX8F,IAAK,MACLzC,OAAQ,SAACyC,EAAKrD,GAAN,OACN,+BACGmU,GACmB,mBAApBA,EAAUkB,OACVlB,EAAUtR,mBAAqB7C,EAAO6C,iBACpC,eAAC,KAAD,CACEhK,KAAK,UACL+F,QAAS,WACPsM,EAAK0C,UAEPgJ,MAAM,SALR,SAOE,eAACxR,GAAA,EAAD,MAGF,eAAC,KAAD,CACEvM,KAAK,UACL+F,QAAS,WACPsM,EAAK4L,eAAe,CAClBzT,IAAKrD,EAAOqD,IACZ9E,MAAOyB,EAAOzB,MACdkE,YAAazC,EAAOyC,YAAc,UAAY,kBAEhD2R,EAAapU,IAEf4W,MAAM,SACN/K,SAAUsI,GAAaI,EAXzB,SAaE,eAACwC,GAAA,EAAD,UAMV,CACE1U,MACE,eAAC,KAAD,CACExJ,KAAK,UACLqF,UAAU,uBACVU,QAAS,WACPsM,EAAK4L,eAAe,CAClBzT,IAAK,MACL9E,MAAO,UACPkE,YAAa,YAEf+R,EAAY,mBAEdoC,MAAM,SACN/K,SAAUsI,GAAaI,EAZzB,SAcE,eAACyC,GAAA,EAAD,MAGJ3X,MAAO,KACP9B,UAAW,MACX8F,IAAK,MACLzC,OAAQ,SAACyC,EAAKrD,GAAN,OACN,+BACGmU,GACmB,mBAApBA,EAAUkB,OACVlB,EAAUtR,mBAAqB7C,EAAO6C,iBACpC,eAAC,KAAD,CACEhK,KAAK,UACL+F,QAAS,WACPwV,OAAavU,IAEf+W,MAAM,SALR,SAOE,eAACC,GAAA,EAAD,MAGF,eAAC,KAAD,CACEd,QACE,gBAAC,IAAD,CAAO7W,MAAO,CAAEI,OAAQ,OAAQD,MAAO,OAAQ2W,cAAe,OAA9D,UACE,eAAC,KAAD,CAAQpX,QAAS,kBAAM0V,OAAczU,IAArC,qBACA,gBAAC,KAAD,CAAQhH,KAAK,UAAU+F,QAAS,kBAAM8W,GAAS1V,EAAO6C,mBAAtD,uBACY,eAACoT,GAAA,EAAD,UAIhB5T,MAAM,mCACN6T,QAAQ,QACRzV,WAEI4T,GACqB,mBAArBA,EAAWgB,OACXhB,EAAWxR,mBAAqB7C,EAAO6C,kBAG3CsT,gBAAiB,SAAC1V,GACXA,GACH6T,OAAczU,IApBpB,SAwBE,eAAC,KAAD,CACEhH,KAAK,UACL+F,QAAS,WACP0V,EAActU,IAEhB4W,MAAM,SACN/K,SAAUsI,GAAaI,EANzB,SAQE,eAAC0B,GAAA,EAAD,aAQd3Q,WAAY1K,SAIjB8I,OAAOC,KAAKpJ,GAAU6F,KAAI,SAACiD,GAAD,OACzB,eAAC,KAAD,CAAKqO,GAAI,CAAEvT,KAAM,IAAMkL,GAAI,CAAElL,KAAM,IAAMe,MAAO,CAAEkC,QAAS,IAA3D,UAlmBOkE,EAmmBQ/K,EAAS8I,GAnmBLmB,EAmmBWnB,EAnmBLhB,EAmmBUgB,EAjmB7C,gBAAC,KAAD,CACEhB,MAAOA,EACP4U,MACE,qCACE,eAAC,KAAD,CACEpe,KAAK,UACLqF,UAAU,uBACVU,QAAS,WACPgW,EAASvS,IAEXuU,MAAM,SANR,SAQE,eAACM,GAAA,EAAD,QAZR,UAiBG3C,GAAYA,IAAa/P,GACxB,gBAAC,KAAD,WACE,eAAC,KAAD,CAAKrG,KAAM,GAAX,SACE,eAAC,KAAKmO,KAAN,CAAW9H,KAAK,QAAQ6R,MAAO,CAAC,CAAEC,UAAU,IAAS/J,aAAa,UAAUrN,MAAO,CAAEsU,OAAQ,QAA7F,SACE,eAAC,KAAD,QAGJ,eAAC,KAAD,CAAKrV,KAAM,EAAX,SACE,sBAAKe,MAAO,CAAEuJ,MAAO,QAASD,aAAc,QAA5C,SACE,gBAAC,IAAD,CAAOxE,KAAM,GAAb,UACE,eAAC,KAAD,CACEnL,KAAK,UACL+F,QAAS,WACPsM,EAAK0C,UAEPgJ,MAAM,SALR,SAOE,eAACxR,GAAA,EAAD,MAGF,eAAC,KAAD,CACEvM,KAAK,UACL+F,QAAS,WACP4V,OAAY3U,IAEd+W,MAAM,SALR,SAOE,eAACC,GAAA,EAAD,gBAOZ,eAAC,KAAD,CACEzS,QAASA,EACTqB,OAAO,cACPJ,QAAS,CAAC,2BAEN9H,UAAW,QACX8F,IAAK,QACLiB,OAAQ,CACNK,QAAS,SAACpL,EAAGgL,GAAJ,OAAUhL,EAAEgF,MAAMmG,cAAcH,EAAEhG,UAE1CZ,GAAqB,QAAS0E,IAP5B,IAQLhD,MAAO,OACPuB,OAAQ,SAACrC,EAAOyB,GAAR,OACN,+BACGmU,GAAaA,EAAUkB,QAAU7Q,GAAQ2P,EAAUvQ,cAAgB5D,EAAO4D,YACzE,eAAC,KAAK0I,KAAN,CAAW9H,KAAK,QAAQ6R,MAAO,CAAC,CAAEC,UAAU,IAAS/J,aAAchO,EAAOW,MAAO,CAAEsU,OAAQ,QAA3F,SACE,eAAC,KAAD,MAGF,gCAAOjV,SAKf,CACEc,MAAO,KACP9B,UAAW,QACX8F,IAAK,QACLzC,OAAQ,SAACrC,EAAOyB,GAAR,OACN,+BACGmU,GAAaA,EAAUkB,QAAU7Q,GAAQ2P,EAAUvQ,cAAgB5D,EAAO4D,YACzE,eAAC,KAAD,CACE/K,KAAK,UACL+F,QAAS,WACPsM,EAAK0C,UAEPgJ,MAAM,SALR,SAOE,eAACxR,GAAA,EAAD,MAGF,eAAC,KAAD,CACEvM,KAAK,UACL+F,QAAS,WACPsM,EAAK4L,eAAe,CAClBzT,SAAKxD,EACLtB,MAAOyB,EAAOzB,MACdkE,iBAAa5C,IAEfuU,EAAapU,IAEf4W,MAAM,SACN/K,SAAUsI,GAAaI,EAXzB,SAaE,eAACwC,GAAA,EAAD,UAMV,CACE1U,MACE,eAAC,KAAD,CACExJ,KAAK,UACLqF,UAAU,uBACVU,QAAS,WACPsM,EAAK4L,eAAe,CAClBzT,SAAKxD,EACLtB,MAAO,UACPkE,iBAAa5C,IAEf2U,EAAYhQ,IAEdoS,MAAM,SACN/K,SAAUsI,GAAaI,EAZzB,SAcE,eAACyC,GAAA,EAAD,MAGJ3X,MAAO,KACP9B,UAAW,QACX8F,IAAK,QACLzC,OAAQ,SAACrC,EAAOyB,GAAR,OACN,+BACGmU,GAAaA,EAAUkB,QAAU7Q,GAAQ2P,EAAUvQ,cAAgB5D,EAAO4D,YACzE,eAAC,KAAD,CACE/K,KAAK,UACL+F,QAAS,WACPwV,OAAavU,IAEf+W,MAAM,SALR,SAOE,eAACC,GAAA,EAAD,MAGF,eAAC,KAAD,CACEd,QACE,gBAAC,IAAD,CAAO7W,MAAO,CAAEI,OAAQ,OAAQD,MAAO,OAAQ2W,cAAe,OAA9D,UACE,eAAC,KAAD,CAAQpX,QAAS,kBAAM0V,OAAczU,IAArC,qBACA,gBAAC,KAAD,CAAQhH,KAAK,UAAU+F,QAAS,kBAAM8W,GAAS1V,EAAO4D,cAAtD,uBACY,eAACqS,GAAA,EAAD,UAIhB5T,MAAM,mCACN6T,QAAQ,QACRzV,WAAY4T,GAAcA,EAAWgB,QAAU7Q,GAAQ6P,EAAWzQ,cAAgB5D,EAAO4D,aACzFuS,gBAAiB,SAAC1V,GACXA,GACH6T,OAAczU,IAdpB,SAkBE,eAAC,KAAD,CACEhH,KAAK,UACL+F,QAAS,WACP0V,EAActU,IAEhB4W,MAAM,SACN/K,SAAUsI,GAAaI,EANzB,SAQE,eAAC0B,GAAA,EAAD,aAQd3Q,WAAYA,UAtLA,IAACA,EAAYd,EAAMnC,qB,OCtK1B,SAAS8U,GAAT,GAAkD,IAAvBnd,EAAsB,EAAtBA,KAAMod,EAAgB,EAAhBA,aAAgB,EAC1BpQ,oBAAS,GADiB,mBACvDmI,EADuD,KAC3CkI,EAD2C,OAEtCrQ,mBAAS,IAF6B,mBAEvDlG,EAFuD,KAEjDwW,EAFiD,KAI9D,OACE,uBAAKpZ,UAAU,oBAAf,UACGlE,EAAKoG,KAAI,SAAC2Q,GAAD,OACR,gBAAC,KAAD,WACE,uBACEnS,QAAS,WACP0Y,EAAQvG,GACRqG,EAAa,aAAIpd,GAAM2I,QAAO,SAAClD,GAAD,OAAOA,IAAMsR,MAC3CsG,GAAc,IAJlB,SAOGtG,IAEH,eAAC8F,GAAA,EAAD,CAAejY,QAAS,kBAAMwY,EAAapd,EAAK2I,QAAO,SAAClD,GAAD,OAAOA,IAAMsR,WAV5DA,MAaZ,gBAAC,KAAD,CAEE7R,MAAO,CAAEiC,gBAAiB,kBAAmBoW,YAAa,kBAAmBpY,MAAO,SACpFP,QAAS,WACP0Y,EAAQ,IACRD,GAAc,IALlB,UAQE,4CACA,eAACL,GAAA,EAAD,MARI,WAUU,IAAf7H,GACC,eAAC,KAAD,CACEqI,aAAc1W,EACdtC,SAAU,SAACC,GAAD,OAAO6Y,EAAQ7Y,EAAEC,OAAOH,QAClCI,aAAc,WACC,KAATmC,GACFsW,EAAa,GAAD,oBAAKpd,GAAL,CAAW8G,KAEzBuW,GAAc,IAEhBI,OAAQ,WACO,KAAT3W,GACFsW,EAAa,GAAD,oBAAKpd,GAAL,CAAW8G,KAEzBuW,GAAc,IAEhBjZ,IAAK,SAACsZ,GAAD,OAAWA,GAASA,EAAMxa,SAC/Bya,WACE,gBAAC,KAAD,CAAQ9e,KAAK,UAAUqG,MAAO,CAAEG,MAAO,OAAQ+B,QAAS,KAAxD,UACG,MACD,eAACgE,GAAA,EAAD,IACC,cCnBfR,KAAOkE,OAAO,MA0fClC,oBARf,SAAyBC,GACvB,MAAO,CACLzC,QAASyC,EAAMzC,QACfxJ,eAAgBiM,EAAMtM,SAASK,eAC/BL,SAAUsM,EAAMtM,SAASkW,UAIW,CAAE9X,gBAAeI,aAAYM,SAAQF,YAAW2C,kBAAzE8K,EAxff,YAAsE,IAA1ChL,EAAyC,EAAzCA,GAAIwI,EAAqC,EAArCA,QAASxJ,EAA4B,EAA5BA,eAAgBL,EAAY,EAAZA,SACjDjB,EAAWyN,cADkD,EAErCC,oBAAS,GAF4B,mBAE5D4Q,EAF4D,KAEnDC,EAFmD,OAGnC7Q,mBAAS,MAH0B,mBAG5DjK,EAH4D,KAGlDoU,EAHkD,OAInCnK,mBAAS,MAJ0B,mBAI5D+G,EAJ4D,KAIlD+J,EAJkD,OAK7B9Q,mBAAS,MALoB,mBAK5D+Q,EAL4D,KAK/CC,EAL+C,OAMzChR,mBAAS,IANgC,mBAM5DxN,EAN4D,KAMrD4X,EANqD,OAO7BpK,mBAAS,IAPoB,mBAO5DiR,EAP4D,KAO/CC,EAP+C,OAQflR,mBAAS,IARM,mBAQ5DmR,EAR4D,KAQxCC,EARwC,OASnCpR,oBAAS,GAT0B,mBAS5DqR,EAT4D,KASlDC,EATkD,OAUpDtN,KAAKC,UAAbC,EAV4D,sBAW3ClE,mBAAS,IAXkC,mBAW5D8D,EAX4D,KAWtDC,EAXsD,KAY3DK,GAAWC,KAAXD,OACAmN,GAAaC,KAAbD,SACFjH,GAAiBhO,GAAgByK,EAAWA,EAASxT,SAAW,GAAIA,GA0F1E,OAtDA2N,qBAAU,WACR5O,EAASH,EAAU,cACnBG,EACEX,EAAc,CACZwP,OAAO,EACPnO,KAAM,CACJ,CAAEwK,KAAM,YAAa4D,KAAM,cAC3B,CACE5D,KAAM,WACN4D,KAAM,yBAMiC,WAA3CtD,OAAO2T,SAASC,SAASnW,MAAM,KAAK,IACtC+V,GAAY,GAGdhf,EAASP,GAAW,INlEc,SAAC6C,GACrC,OAAO,IAAI6L,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,gCAA0DmD,IAC5DgM,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,oCAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,oBMsD9Cgf,CAAuB/c,GACpBgM,MAAK,SAAC3N,GAEL,OADAme,EAAsBne,GNvFH,SAAC2B,GAC1B,OAAO,IAAI6L,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,qBAA+CmD,IACjDgM,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,oCAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,oBM2EnCif,CAAYhd,MAEpBgM,MAAK,SAAC3N,GAeL,OAdA6d,EAAY7d,GACZ8Q,EAAQ9Q,EAASuN,UACjBlO,EACEX,EAAc,CACZwP,OAAO,EACPnO,KAAM,CACJ,CAAEwK,KAAM,YAAa4D,KAAM,cAC3B,CACE5D,KAAMvK,EAASuK,KACf4D,KAAK,cAAD,OAAgBnO,EAAS4O,kBAK9BmI,GAAY/W,EAASwM,gBAE7BmB,MAAK,SAAC3N,GACLkX,EAAYlX,GACZ4d,GAAW,GACXve,EAASP,GAAW,OAErB+O,OAAM,SAACC,GACNqJ,EAASrJ,EAAIE,SACb4P,GAAW,GACXve,EAASP,GAAW,SAEvB,CAACO,EAAUsC,KAEE,IAAZwI,IAAgC,IAAZwT,EAEpB,iCACE,eAACvP,GAAA,EAAD,UACE,kDAEF,eAACmJ,GAAA,EAAD,CACEC,MAAI,EACJvS,MAAO,CACLY,SAAU,aAON,KAAVtG,GAAiBuU,GAAahR,EA0BhC,iCACE,eAACsL,GAAA,EAAD,UACE,iCAAQ0F,EAASvJ,SAEnB,uBAAKtG,UAAU,kBAAf,UACE,gBAAC,IAAD,CAAOgB,MAAO,CAAEoJ,YAAa,IAA7B,UACG+P,EACC,eAAC,KAAD,CACExf,KAAK,UACL+F,QAAS,WACP2J,YAAS,cAAD,OAAewF,EAASlF,eAElC3K,UAAU,iBACVkG,QAASA,EANX,qBAWA,uCACE,eAAC,KAAD,CACEvL,KAAK,UACL+F,QAAS,WACP2J,YAAS,eAEXrK,UAAU,iBACVkG,QAASA,EANX,oBAUA,eAAC,KAAD,CACEvL,KAAK,UACL+F,QAAS,WACP2J,YAAS,qBAAD,OAAsBwF,EAASlF,eAEzC3K,UAAU,iBACVkG,QAASA,EANX,yBAaJ,eAAC,KAAD,CACEvL,KAAK,UACL+F,QAAS,WACPoZ,GAAe,IAEjB9Z,UAAU,iBACVkG,QAASA,EANX,uBAUA,eAAC,KAAD,CACMvL,KAAK,UACL+F,QAAS,WACP2J,YAAS,kCAAD,OAAmCwF,EAAStH,eAEtDvI,UAAU,iBACVkG,QAASA,EANf,iDAWF,gBAAC,KAAD,WACE,eAAC,KAAD,CAAKiI,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,GAAKe,MAAO,CAAEkC,QAAS,IAA1D,SACE,eAAC,KAAD,CAAMiB,MAAM,2CAAZ,SACE,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAKqP,GAAI,CAAEvT,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAjF,UACE,+BACE,wCADF,KACiB,eAAC,IAAD,CAAMxH,GAAE,qBAAgBjE,EAAS0J,aAAjC,SAAiD1J,EAASsF,WAE3E,+BACE,yCADF,KACmBtF,EAASoJ,oBAG9B,gBAAC,KAAD,CAAKuL,GAAI,CAAEvT,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAjF,UACE,+BACE,6CADF,MACqBzL,EAAS2Q,WAE9B,+BACE,0CADF,KACoB3Q,EAAS5C,OAD7B,IACqC,eAACwL,GAAD,CAAYxL,OAAQ4C,EAAS5C,sBAM1E,qCACE,eAAC,KAAD,CAAKkS,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEkC,QAAS,IAA3D,SACE,eAAC,KAAD,CAAMiB,MAAM,gCAAZ,SACE,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAKqP,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAnG,UACE,+BACE,yCADF,MACoBuF,EAAStB,UAE7B,+BACE,kDADF,MAC6B1J,GAAenI,EAAgBmT,EAASlV,SAGrE,+BACE,0CADF,MACkBkV,EAASrM,QAG3B,+BACE,sCADF,MACiBI,GAAQiM,EAAShM,SAElC,+BACE,qCADF,MACgBgM,EAASgB,UAG3B,gBAAC,KAAD,CAAK2C,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAnG,UACE,+BACE,gDADF,MAC2BuF,EAASG,eAEpC,6BAAIH,EAAS8K,MAAQ,iCAAmC,mCAExD,+BACE,6BAAIpW,GAAY7H,EAAgBmT,EAASlV,MAAQ,6BAAyB,4BACzE4J,GAAY7H,EAAgBmT,EAASlV,MAAQkV,EAASE,iBAAmBF,EAASC,WAErF,+BACE,uDADF,MACkCD,EAASd,yBAOrD,eAAC,KAAD,CAAK9O,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACE,eAAC,KAAD,CAAMiB,MAAM,iCAAZ,SACE,8BAAK0L,EAASvJ,WAGlB,eAAC,KAAD,CACEnC,MAAM,cACN5B,QAASsX,EACTe,KAzQO,YNiEiB,SAACld,GACnC,OAAO,IAAI6L,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,qBAA+CmD,IACjDgM,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,8CAElB,OAAO5N,EAASG,UAEjBwN,MAAK,WACJF,EAAQ9L,MAETkM,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,qBM7E9Cof,CAAqBhL,EAASlF,aAC3BjB,MAAK,WACJtO,EAASqC,EAAeoS,EAASlF,cACjCN,YAAS,iBAEVT,OAAM,SAACC,GACNmQ,EAAenQ,EAAIE,YAEvB+P,EAAe,OAiQPnC,SA9PW,WACnBmC,EAAe,OA8PPgB,OAAO,cACPC,WAAW,UANb,SAQE,8EAEAZ,EAqDA,uBAAKna,UAAU,QAAf,UACE,eAAC,KAAD,CAAKC,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACE,eAAC,KAAD,CAAMiB,MAAM,4CAAmCnD,MAAO,CAAEG,MAAO,QAA/D,SACE,eAAC,KAAD,CAAgByJ,OAAQA,KAAxB,SACE,eAAC,KAAD,CACEgD,SAAU,CAAE4F,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,GAAKkL,GAAI,CAAElL,KAAM,IAC7E4N,WAAY,CAAE2F,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMkL,GAAI,CAAElL,KAAM,KAChF+M,KAAMA,EACNe,SA7TH,SAACC,GAChB,IAAMgN,EAAkB,GACxBxV,OAAOC,KAAKuI,EAAO6B,SAASxT,UAAU6F,KACpC,SAACiD,GAAD,OAAS6I,EAAO6B,SAASxT,SAAS8I,IAAQ6V,EAAgBrV,KAAhB,MAAAqV,EAAe,aAAShN,EAAO6B,SAASxT,SAAS8I,QAG7F,IAAM8V,EAAG,0CAAQpL,GAAa7B,EAAO6B,UAA5B,IAAsCvG,SAAUsD,EAAMvQ,SAAU2e,KNIzC,SAACC,GACnC,OAAO,IAAI1R,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,qBAA+C0gB,EAAItQ,aAAe,CACrEnP,OAAQ,MACR0V,KAAM6B,KAAKC,UAAUiI,KAEpBvR,MAAK,SAAC3N,GACL,IAAKA,EAASC,GACZ,MAAM,IAAI2N,MAAM,6CAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,qBMnB9Cyf,CAAqBD,GAClBvR,MAAK,WACJtO,EAASwC,EAAeqd,IACxBlR,KAAQsN,QAAQ,2BAChBhN,YAAS,cAAD,OAAewF,EAASlF,iBAEjCf,OAAM,SAACC,GACNmQ,EAAenQ,EAAIE,aA2SP,SAME,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAKyJ,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAjF,UAGE,eAAC,KAAK8D,KAAN,CACElG,MAAM,WACN5B,KAAM,CAAC,WAAY,WACnB6R,MAAO,CACL,CACEC,UAAU,EACVrO,QAAS,4BAEX,iBAAO,CACLoR,UADK,SACKzQ,EAAGrK,GACX,OAAIA,EAAMiE,MAAM,cACPiF,QAAQC,UAEVD,QAAQE,OAAO,IAAIE,MAAM,gCAItC0E,aAAcwB,EAASL,QAjBzB,SAmBE,eAAC,KAAD,MAEF,eAAC,KAAKpB,KAAN,CACElG,MAAM,MACN5B,KAAM,CAAC,WAAY,OACnB6R,MAAO,CACL,CACEC,UAAU,EACVrO,QAAS,6BAGbsE,aAAcwB,EAASgB,IATzB,SAWE,eAAC,KAAD,SAGJ,eAAC,KAAD,CAAK2C,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAjF,SACE,eAAC,KAAK8D,KAAN,CACElG,MAAM,sBACN5B,KAAM,CAAC,WAAY,gBACnB+H,aAAc3H,KAAOmJ,EAAShB,cAHhC,SAKE,eAAC,KAAD,CAAY7N,MAAO,CAAEG,MAAO,QAAUwF,OAAQ,SAACtG,GAAD,OAAWqG,KAAOrG,GAAOsG,OAAO,4BAIjFtK,GACCmJ,OAAOC,KAAKpJ,GAAU6F,KAAI,SAACiD,GAAD,OACxB,eAAC,KAAD,CAAKqO,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAjF,SACE,eAAC,KAAK8D,KAAN,CACElG,MAAO/C,EACPmB,KAAM,CAAC,WAAY,WAAYnB,GAC/BkJ,aAAc+E,IAAkBA,GAAejO,GAAOiO,GAAejO,GAAKE,YAAS1D,EAHrF,SAKE,eAAC,KAAD,CAAQqN,KAAK,WAAWtR,GAAIyH,EAA5B,SACG9I,EAAS8I,GAAKjD,KAAI,SAACD,GAAD,OACjB,eAACiL,GAAD,CAAQ7M,MAAO4B,EAAIyD,YAAnB,SAAiCzD,EAAI5B,oBAOjD,gBAAC,KAAD,CAAKJ,KAAM,GAAIe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAvD,UACE,eAAC,KAAD,IAEA,sBAAKtK,UAAU,YAAf,SACE,eAAC,KAAKoO,KAAN,CACElG,MAAM,cACN5B,KAAM,CAAC,WAAY,YACnBsH,SAAU,GACVC,WAAY,GACZQ,aAAcwB,EAASvG,SALzB,SAOE,eAAC2P,GAAD,CACEnd,KAAM8Q,EACNsM,aAAc,SAAC3Y,GACbsM,EAAQtM,aAMlB,eAAC,KAAD,CAAKN,KAAM,GAAIe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAvD,SACE,sBAAKtK,UAAU,YAAf,SACE,eAAC,KAAKoO,KAAN,CACElG,MAAM,iBACN5B,KAAM,CAAC,WAAY,WACnBsH,SAAU,GACVC,WAAY,GACZQ,aAAcwB,EAASI,QALzB,SAOE,eAACoK,GAAD,UAIN,gBAAC,IAAD,CAAOrZ,MAAO,CAAEsU,OAAQ,QAAxB,UACE,eAAC,KAAD,CACE5U,QAAS,WACP2J,YAAS,cAAD,OAAewF,EAASlF,eAElC3K,UAAU,iBACVkG,QAASA,EALX,qBASA,eAAC,KAAD,CAAQvL,KAAK,UAAUqF,UAAU,iBAAiBU,QAAS,kBAAMsM,EAAK0C,UAAtE,uCASK,KAAhBqK,GACC,eAAC,KAAD,CAAK9Z,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACE,eAAC,KAAD,CACElC,MAAO,CAAEyJ,UAAW,QACpBV,QAAQ,yBACRkB,YACE,iCACE,wEACA,wBACA,kCACE,qDACC8O,QAIPpf,KAAK,eAnMb,uCACE,eAAC,KAAD,CAAKsF,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACE,eAAC,KAAD,CAAMiB,MAAM,4CAAZ,SACE,gBAAC,KAAD,WACA,eAAC,KAAD,CAAKqP,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACI,+BACE,sCADF,KACgBuF,EAASgB,SAG3B,eAAC,KAAD,CAAK2C,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,+BACE,8CADF,KACqBuF,EAASL,aAGhC,eAAC,KAAD,CAAKgE,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,+BACE,sDADF,KAC6B1G,GAAQiM,EAAShB,mBAG/CuE,IACC5N,OAAOC,KAAK2N,IAAgBlR,KAAI,SAACiD,GAAD,OAC9B,eAAC,KAAD,CAAKqO,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMkL,GAAI,CAAElL,KAAM,GAAKe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAlG,SACE,+BACE,+BAAInF,EAAJ,OADF,KACiB,eAACyN,GAAD,CAAS9W,KAAMsX,GAAejO,GAAKS,eAI1D,eAAC,KAAD,CAAK3F,KAAM,GAAIe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAvD,SACE,kCACE,+CACA,6BACE,eAACsI,GAAD,CAAS9W,KAAM+T,EAASvG,kBAI9B,gBAAC,KAAD,CAAKkK,GAAI,CAAEvT,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAA/D,UACE,iDACA,oBAAGtJ,MAAO,CAAEoa,WAAY,YAAxB,SAAuCvL,EAASI,SAAW,+EAKnE,eAAC,KAAD,CAAKhQ,KAAM,GAAIe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,GAAI+Q,WAAY,IAAvE,SACE,eAACxV,GAAD,CACExI,UAAW4c,EACX9V,MAAM,2BACN2B,KAAM,GACNpJ,eAAgBA,kBAtN5B,iCACE,eAACyN,GAAA,EAAD,UACE,8CAEF,eAAC,KAAD,CACEnJ,MAAO,CAAEyJ,UAAW,QACpBV,QAAQ,sCACRkB,YACE,iCACE,4EACA,wBACA,kCACE,qDACC3P,QAIPX,KAAK,gB,oBC2WA+N,oBATf,SAAyBC,GACvB,MAAO,CACLzC,QAASyC,EAAMzC,QACf7I,UAAWsL,EAAMtL,UACjBX,eAAgBiM,EAAMtM,SAASK,eAC/Bb,UAAW8M,EAAM9M,aAImB,CAAEpB,gBAAeI,aAAY0C,cAAapC,SAAQF,aAA3EyN,EA/gBf,YAAoF,IAAtDhL,EAAqD,EAArDA,GAAIwI,EAAiD,EAAjDA,QAAS7I,EAAwC,EAAxCA,UAAWX,EAA6B,EAA7BA,eAAgBb,EAAa,EAAbA,UAC5DqR,EAAWC,KAAXD,OACF9R,EAAWyN,cAFgE,EAGnDC,oBAAS,GAH0C,mBAG1E4Q,EAH0E,KAGjEC,EAHiE,OAIjD7Q,mBAAS,MAJwC,mBAI1EjK,EAJ0E,KAIhEoU,EAJgE,OAKjDnK,mBAAS,MALwC,mBAK1E+G,EAL0E,KAKhE+J,EALgE,OAMvD9Q,mBAAS,IAN8C,mBAM1ExN,EAN0E,KAMnE4X,EANmE,OAOnDpK,oBAAS,GAP0C,mBAO1EwS,EAP0E,KAOjEC,EAPiE,OAQnDzS,oBAAS,GAR0C,mBAQ1E0S,EAR0E,KAQjEC,EARiE,OASzD3S,mBAAS,GATgD,mBAS1E4S,EAT0E,KASpEC,EAToE,OAUlE7O,KAAKC,UAAbC,EAV0E,sBAWvDlE,mBAAS,OAX8C,mBAW1E6R,EAX0E,KAWnEiB,EAXmE,OAY/C9S,oBAAS,GAZsC,mBAY1E+S,EAZ0E,KAY/DC,GAZ+D,QAavChT,mBAAS,MAb8B,qBAa1EiT,GAb0E,MAa3DC,GAb2D,SAc/ClT,mBAAS,MAdsC,qBAc1EmT,GAd0E,MAc/DC,GAd+D,SAe3CpT,mBAAS,MAfkC,qBAe1EqT,GAf0E,MAe7DC,GAf6D,MAmF3EC,GAAkB,WACtB,IAAMpB,EAAG,0CtBvFJ,CACLvd,GAAI,KACJ6K,YAAa,KACb+F,cAAe,KACfhI,KAAM,KACNiI,OAAQ,KACR5T,KAAM,KACN6I,KAAM,KACNK,KAAM,KACNiM,QAAS,KACTC,iBAAkB,KAClBhB,UAAW,KACXiB,YAAa,KACbR,QAAS,GACTX,aAAc,4BACdoB,QAAS,GACT5T,SAAU,GACViN,SAAU,GACVqR,OAAO,IsBqEE,IAEPrU,KAAMyV,IACHlM,GAHI,IAIPtH,YAAa1J,EAAS0J,YACtB+F,cAAezP,EAASsF,MACxBN,KAAK,GAAD,OAAKgM,EAAShM,KAAK8C,OAAO,cAA1B,0BACJkI,aAAcnI,OAASC,OAAO,oCAC9BnD,KAAM6H,SAASwE,EAASrM,KAAM,OP9CH,SAACyX,GAChC,OAAO,IAAI1R,SAAQ,SAACC,EAASC,GAC3BlO,MAAM,GAAD,OAAIhB,iCAAJ,aAA+C,CAClDiB,OAAQ,OACR0V,KAAM+J,IAELvR,MAAK,SAAC3N,GACL,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAI0N,MAAM,+CAElB,OAAO5N,EAASG,UAEjBwN,MAAK,SAAC3N,GACLyN,EAAQzN,MAET6N,OAAM,SAACC,GACNJ,EAAOE,MAAM,yBAAD,OAA0BE,EAAIpO,qBOiC9C6gB,CAAkBvJ,KAAKC,UAAUiI,IAC9BvR,MAAK,SAAC3N,GACLX,EAASmC,EAAYxB,IACrBgO,KAAQsN,QAAQ,oBAChBhN,YAAS,qBAAD,OAAsBtO,EAAS4O,iBAExCf,OAAM,SAACC,GACNqS,GAAarS,EAAIE,aAkDvB,OA9CAC,qBAAU,WACR5O,EAASH,EAAU,cAC4B,WAA3C2L,OAAO2T,SAASC,SAASnW,MAAM,KAAK,IACtCsX,EAAQ,GACRhC,GAAW,IACyC,wBAA3C/S,OAAO2T,SAASC,SAASnW,MAAM,KAAK,KAC7CsX,EAAQ,GACR7I,GAAYpV,GACTgM,MAAK,SAAC3N,GACLkX,EAAYlX,GAEZ,IAAMwgB,EAAiBrY,GAAgBnI,EAASoI,MAAO,MAEvDiY,GAAeG,GACfvP,EAAK4L,eAAe,CAClB/I,SAAS,6BACJ7C,EAAKwP,cAAc3M,UADhB,IAENG,YAAajU,EAASoI,MAAME,MAAM,KAAKiH,MAAM,GAAGmR,KAAK,MAAQ1gB,EAASoI,MAAME,MAAM,KAAKiH,MAAM,GAAGmR,KAAK,OAEvGN,YAAaI,IAGf5C,GAAW,GACXve,EAASP,GAAW,OAErB+O,OAAM,SAACC,GACNqJ,EAASrJ,EAAIE,SACb4P,GAAW,GACXve,EAASP,GAAW,OAGxBO,EACEX,EAAc,CACZwP,OAAO,EACPnO,KAAM,CACJ,CAAEwK,KAAM,YAAa4D,KAAM,cAC3B,CACE5D,KAAM,WACN4D,KAAM,4BAMf,CAAC9O,EAAU4R,EAAMtP,KAEJ,IAAZwI,IAAgC,IAAZwT,EAEpB,iCACE,eAACvP,GAAA,EAAD,UACE,kDAEF,eAACmJ,GAAA,EAAD,CACEC,MAAI,EACJvS,MAAO,CACLY,SAAU,aAON,KAAVtG,EAEA,iCACE,eAAC6O,GAAA,EAAD,UACE,8CAEF,eAAC,KAAD,CACEnJ,MAAO,CAAEyJ,UAAW,QACpBV,QAAQ,sCACRkB,YACE,iCACE,4EACA,wBACA,kCACE,qDACC3P,QAIPX,KAAK,aAOX,iCACE,eAACwP,GAAA,EAAD,UACE,gDAEF,uBAAKnK,UAAU,kBAAf,UACE,eAAC,IAAD,CAAOgB,MAAO,CAAEoJ,YAAa,IAA7B,SACE,eAAC,KAAD,CACEzP,KAAK,UACL+F,QAAS,WACP2J,aAAU,IAEZrK,UAAU,iBACVkG,QAASA,EANX,uBAWF,eAAC,KAAD,CACE0H,SAAU,CAAE4F,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,KAC5D4N,WAAY,CAAE2F,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,KAC9D+M,KAAMA,EACNe,SAlJS,SAACC,GAChBgO,GtBnDiB,SAACnd,EAAUgR,EAAUgM,EAAW1W,EAAKuX,GACxD,IAAMlZ,EAAOqM,EAASrM,KAAK/H,WAAWkhB,UAAU,EAAG,GAC7CC,EAA4B,WAArB/d,EAASoQ,QAAuB,IAAM,IAC7CpL,EAAOgM,EAAShM,KAAK8C,OAAO,YAClC,OAAKkV,EAKC,GAAN,OAAUhM,EAAStB,OAAS/K,EAA5B,YAAoC3E,EAASoJ,cAA7C,YAA8DyU,GAA9D,OAAoFE,EAApF,YAA4FzX,EAA5F,YAAmG0K,EAASG,YAA5G,aACEH,EAASC,QADX,YAEID,EAASd,WANL,GAAN,OAAUc,EAAStB,OAAS/K,EAA5B,YAAoC3E,EAASoJ,cAA7C,YAA8DyU,GAA9D,OAAoFE,EAApF,YAA4FzX,EAA5F,YACE0K,EAASG,YADX,YAEInM,EAFJ,YAEYgM,EAASE,iBAFrB,YAEyCF,EAASd,WsB6ChD8N,CACEhe,EACAmP,EAAO6B,SACPtL,GAAY7H,EAAgBsR,EAAO6B,SAASlV,MAC5CqK,GAAWtI,EAAgBsR,EAAO6B,SAASlV,MAC3CwhB,GAAY5V,SAGhBqT,EAAY,6BAAK5L,EAAO6B,UAAb,IAAuBf,SAAUjQ,EAASoJ,iBACrD0T,EAAQ,IAmIJ,SAME,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAKxN,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,GAAKe,MAAO,CAAEkC,QAAS,IAA1D,UACE,eAAC,KAAD,CACEiB,MAAM,2CACN4U,MACE,eAAC,KAAD,CACEpe,KAAK,UACLqF,UAAU,uBACVU,QAAS,WACP6a,GAAW,IAEb7C,MAAM,SACNxS,QAASA,EAPX,SASgB,OAAbrH,EAAoB,eAACia,GAAA,EAAD,IAAmB,eAACD,GAAA,EAAD,MAZ9C,SAgBgB,OAAbha,EACC,6DAEA,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAK2U,GAAI,CAAEvT,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAjF,UACE,+BACE,wCADF,KACiB,eAAC,IAAD,CAAMxH,GAAE,qBAAgBjE,EAAS0J,aAAjC,SAAiD1J,EAASsF,WAE3E,+BACE,yCADF,KACmBtF,EAASoJ,oBAG9B,gBAAC,KAAD,CAAKuL,GAAI,CAAEvT,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAjF,UACE,+BACE,6CADF,MACqBzL,EAAS2Q,WAE9B,+BACE,0CADF,KACoB3Q,EAAS5C,OAD7B,IACqC,eAACwL,GAAD,CAAYxL,OAAQ4C,EAAS5C,YAElE,+BACE,wDADF,IAEE,eAAC,KAAKmS,KAAN,CACE9H,KAAK,cACLsH,SAAU,CAAE3N,KAAM,GAClB4N,WAAY,CAAE5N,KAAM,IACpBkY,MAAO,CACL,CACEC,UAAU,EACVrO,QAAS,uCAEX,iBAAO,CACLoR,UADK,SACKzQ,EAAGrK,GACX,OAAIA,EAAMkG,OAAOjC,MAAM,UAA6B,QAAjBjE,EAAMkG,OAChCgD,QAAQC,UAEVD,QAAQE,OACb,IAAIE,MAAM,0FAfpB,SAqBE,eAAC,KAAD,CAAOrJ,SAAU,SAACD,GAAD,OAAW+b,GAAe/b,EAAMG,OAAOH,uBAOpE,eAAC,KAAD,CAAO8D,MAAM,0BAA0B5B,QAAS+Y,EAAS3D,SA1PhD,WACnB4D,GAAW,IAyPgF3D,OAAQ,GAAIzW,MAAO,IAApG,SACE,eAAC4G,GAAD,CACElM,UAAWA,EAAUC,KACrBoK,QAASA,EACTJ,KAAM,EACNC,UAAQ,EACRE,WAAS,EACTD,cAAe,SAACzF,GAAD,OAlRd,SAACuc,GAChB7J,EAAY6J,GACZ,IAAMP,EAAiBrY,GAAgB4Y,EAAe3Y,MAAO,MAC7DiY,GAAeG,GACfvP,EAAK4L,eAAe,CAClB/I,SAAS,6BACJ7C,EAAKwP,cAAc3M,UADhB,IAENG,YAAa8M,EAAe3Y,MAAME,MAAM,KAAKiH,MAAM,GAAGmR,KAAK,MAAQK,EAAe3Y,MAAME,MAAM,KAAKiH,MAAM,GAAGmR,KAAK,OAEnHN,YAAaI,IAEF,IAATb,GACFC,EAAQ,GAEVJ,GAAW,GAoQyBwB,CAASxc,WAIpCmb,GAAQ,GACP,qCACE,eAAC,KAAD,CAAKvN,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEkC,QAAS,IAA3D,SACE,eAAC,KAAD,CAAMiB,MAAM,gCAAZ,SACE,gBAAC,KAAD,WACE,gBAAC,KAAD,CAAKqP,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAnG,UACE,eAAC,KAAK8D,KAAN,CAAWlG,MAAM,UAAU5B,KAAM,CAAC,WAAY,UAAW+H,aAAa,IAAtE,SACE,gBAAC,KAAD,WACE,eAACnB,EAAD,CAAQ7M,MAAM,IAAd,oBACA,eAAC6M,EAAD,CAAQ7M,MAAM,IAAd,yBACA,eAAC6M,EAAD,CAAQ7M,MAAM,IAAd,6BAGJ,eAAC,KAAK+N,KAAN,CACElG,MAAM,OACN5B,KAAM,CAAC,WAAY,QACnB6R,MAAO,CACL,CACEC,UAAU,EACVrO,QAAS,mCANf,SAUE,eAAC,KAAD,CAAQzJ,SAAU,SAACC,GAAD,OAxRjB,SAACA,GACxBub,GAAavX,GAAY7H,EAAgB6D,IAuRMyc,CAAiBzc,IAA1C,SACG7D,EAAewF,KAAI,SAACvH,GAAD,OAClB,eAACuS,EAAD,CAAQ7M,MAAO1F,EAAKgK,iBAApB,SAAuChK,EAAK0F,eAIlD,eAAC,KAAK+N,KAAN,CAAWlG,MAAM,WAAQ5B,KAAM,CAAC,WAAY,QAAS+H,aAAcrK,GAAQ0C,QAA3E,SACE,gBAAC,KAAD,WACE,eAACwG,EAAD,CAAQ7M,MAAO2D,GAAQ0C,OAASuW,IAAI,EAAG,UAAvC,SAAmDjZ,GAAQ0C,OAASuW,IAAI,EAAG,YAC3E,eAAC/P,EAAD,CAAQ7M,MAAO2D,GAAQ0C,QAAvB,SAAmC1C,GAAQ0C,UAC3C,eAACwG,EAAD,CAAQ7M,MAAO2D,GAAQ0C,OAASwW,SAAS,EAAG,UAA5C,SACGlZ,GAAQ0C,OAASwW,SAAS,EAAG,iBAIpC,eAAC,KAAK9O,KAAN,CACElG,MAAM,OACN5B,KAAM,CAAC,WAAY,QACnB+H,aAAc3H,OACdyR,MAAO,CACL,CACEC,UAAU,EACVrO,QAAS,yBAPf,SAWE,eAAC,KAAD,CAAYpD,OAAQ1C,GAAYjD,MAAO,CAAEG,MAAO,YAElD,eAAC,KAAKiN,KAAN,CACElG,MAAM,gBACN5B,KAAM,CAAC,WAAY,eACnB6R,MAAO,CACL,CACEC,UAAU,EACVrO,QAAS,gCANf,SAUE,eAAC,KAAD,SAIJ,gBAAC,KAAD,CAAKyJ,GAAI,CAAEvT,KAAM,IAAMkO,GAAI,CAAElO,KAAM,IAAMiL,GAAI,CAAEjL,KAAM,IAAMe,MAAO,CAAEoJ,YAAa,GAAIE,aAAc,IAAnG,UACE,eAAC,KAAK8D,KAAN,CAAWlG,MAAM,MAAM5B,KAAM,CAAC,WAAY,SAAU+H,aAAa,MAAjE,SACE,gBAAC,KAAD,CAAQ/N,SAAU,SAACC,GAAD,OAAOqb,EAASrb,IAAlC,UACE,eAAC2M,EAAD,CAAQ7M,MAAM,MAAd,0CACA,eAAC6M,EAAD,CAAQ7M,MAAM,MAAd,gDAGJ,eAAC,KAAK+N,KAAN,CAAWlG,MAAM,YAAY5B,KAAM,CAAC,WAAY,eAAhD,SACE,eAAC,KAAD,CACEqH,SAAoB,QAAVgN,EACVja,QAAS,kBAAM+a,GAAW,IAC1Bza,MAAO,CAAEG,MAAO,QAChBgc,OACE,eAACC,GAAA,EAAD,CACE1c,QAAS,WACO,QAAVia,GACFc,GAAW,UAOvB,eAAC,KAAD,CACEtX,MAAM,0CACN5B,QAASiZ,EACT7D,SAjUI,WAC1B8D,GAAW,IAiUW7D,OAAQ,GACRzW,MAAO,IALT,SAOE,eAAC0E,GAAD,CACExI,UAAWA,EAAUvB,KACrBoK,QAASA,EACTJ,KAAM,EACNC,UAAQ,EACRC,cAAe,SAACzF,GAAD,OAjWjB,SAAC8c,GACvB,IAAMC,EAAeD,EAAe/W,KAChCyJ,EAAmB,EACgB,MAAnCsN,EAAetN,mBACjBA,EAAmBsN,EAAetN,iBAAmB,GAEvD,IAAID,EAAU,MACd,GAA+B,OAA3BuN,EAAevN,QAAkB,CACnC,IAAMyN,EAAeF,EAAevN,QAAQzL,MAAM,KAClDyL,EAAO,UAAMyN,EAAa,GAAnB,aAA0BlS,SAASkS,EAAa,GAAI,KAAO,GAAK,GAGzEvQ,EAAK4L,eAAe,CAClB/I,SAAS,6BACJ7C,EAAKwP,cAAc3M,UADhB,IAEN2N,YAAaF,EACbvN,mBACAD,cAGJ2L,GAAW,GA6UmCgC,CAAgBld,IACtC0F,WAAS,EACTvJ,eAAgBA,MAGnBmf,EACC,eAAC,KAAKzN,KAAN,CACElG,MAAM,uBACN5B,KAAM,CAAC,WAAY,WACnB6R,MAAO,CACL,CACEC,UAAU,EACVrO,QAAS,sCAEX,iBAAO,CACLoR,UADK,SACKzQ,EAAGrK,GACX,OAAIA,GAASA,EAAMiE,MAAM,kBAChBiF,QAAQC,UAEVD,QAAQE,OAAO,IAAIE,MAAM,+CAbxC,SAkBE,eAAC,KAAD,MAGF,eAAC,KAAKyE,KAAN,CACElG,MAAM,0BACN5B,KAAM,CAAC,WAAY,oBACnB6R,MAAO,CACL,CACEC,UAAU,EACVrO,QAAS,0CANf,SAUE,eAAC,KAAD,MAGJ,eAAC,KAAKqE,KAAN,CACElG,MAAM,YACN5B,KAAM,CAAC,WAAY,aACnB6R,MAAO,CACL,CACEC,UAAU,EACVrO,QAAS,8BANf,SAUE,gBAAC,KAAD,WACE,eAACmD,EAAD,CAAQ7M,MAAM,OAAd,kBACA,eAAC6M,EAAD,CAAQ7M,MAAM,OAAd,kBACA,eAAC6M,EAAD,CAAQ7M,MAAM,OAAd,kBACA,eAAC6M,EAAD,CAAQ7M,MAAM,MAAd,sBAGJ,eAAC,KAAK+N,KAAN,CACElG,MAAM,WACN5B,KAAM,CAAC,WAAY,WACnB6R,MAAO,CACL,iBAAO,CACLgD,UADK,SACKzQ,EAAGrK,GACX,OAAIA,GAASA,EAAMiE,MAAM,cAChBiF,QAAQC,UAEVD,QAAQE,OAAO,IAAIE,MAAM,gCATxC,SAcE,eAAC,KAAD,SAGJ,uCACE,eAAC,KAAD,IACA,eAAC,KAAD,CACEhP,KAAK,UACLqF,UAAU,uBACVgB,MAAO,CAAEsU,OAAQ,SAAUQ,QAAS,SACpCpV,QAAS,kBAAMsM,EAAK0C,UAJtB,mDAcXgM,GAAQ,GACP,eAAC,KAAD,CAAKzb,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACE,eAAC,KAAD,CACEiB,MAAM,iCACN4U,MACE,eAAC,KAAD,CACEpe,KAAK,UACLqF,UAAU,iBACVU,QAAS,WACP2b,MAEFnW,QAASA,EANX,yBAHJ,SAeE,8BAAK6V,SAII,OAAdE,IACC,eAAC,KAAD,CAAKhc,KAAM,GAAIe,MAAO,CAAEkC,QAAS,IAAjC,SACE,eAAC,KAAD,CAAOlC,MAAO,CAAEyJ,UAAW,QAAUV,QAAQ,uBAAuBkB,YAAagR,GAAWthB,KAAK,0BCtelG+N,mBAAQ,KAAM,CAAE7N,aAAYiD,WAA5B4K,EAvBf,WACE,IAAMtN,EAAWyN,cAIjB,OAHAzN,EAASP,GAAW,IACpBO,EAAS0C,KACT1C,E1BiO4B,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,6DAC5BiO,EAAW,CAAEhO,MAAO,GAAIQ,KAAM,IADF,kBAGTP,MAAM,GAAD,OAAIjB,EAAJ,wBAHI,WAG1ByB,EAH0B,QAIlBC,GAJkB,gBAK9BsN,EAAShO,MAAT,gCAA0CS,EAASE,QALrB,wCAORF,EAASG,OAPD,QAO9BoN,EAASxN,KAPqB,iEAUhCwN,EAAShO,MAAT,gCAA0C,KAAMG,YAVhB,QAYlCL,EAAS,CACPT,KAAM8D,EACN/D,QAAS4O,IAduB,0DAAN,uD0B/N1B,eAAC,GAAD,UACE,gBAAC,IAAD,WACE,eAAC,GAAD,CAAUvG,KAAK,MACf,eAAC,GAAD,CAAeA,KAAK,eACpB,eAAC,GAAD,CAAoBA,KAAK,mBACzB,eAAC,GAAD,CAAeA,KAAK,eACpB,eAAC2a,GAAD,CAAwB3a,KAAK,mBAC7B,eAAC2a,GAAD,CAAwB3a,KAAK,0BAC7B,eAAC,GAAD,CAAoBA,KAAK,sBACzB,eAAC,GAAD,CAAoBA,KAAK,uCACzB,eAAC,GAAD,CAAcA,KAAK,cACnB,eAAC,GAAD,CAAc4a,SAAO,YCjBTC,QACW,cAA7BhX,OAAO2T,SAASsD,UAEe,UAA7BjX,OAAO2T,SAASsD,UAEhBjX,OAAO2T,SAASsD,SAASvZ,MACvB,2D,wBCKAwZ,GAAe,CACnBpJ,OAAQ,GACRD,WAAY,GACZvO,SAAS,EACT0C,iBAAiB,EACjB/M,UAAW,CACTP,MAAO,GACPQ,KAAM,GACN2I,OAAQ,CAAE0K,YAAa,GAAII,gBAAiB,GAAIC,QAAS,GAAIP,QAAS,KAExE5S,SAAU,CACRK,eAAgB,GAChB6V,OAAQ,GACRjX,MAAO,IAET+B,UAAW,CACT/B,MAAO,GACPQ,KAAM,IAERiC,WAAY,GACZ0G,OAAQ,CACNoL,cAAUlO,EACV9C,cAAU8C,GAEZ2H,SAAU,CACRhO,MAAO,GACPQ,KAAM,KAIJiiB,GAA2B,SAACrjB,GAEhC,IAAMyU,EAAc,GACdI,EAAkB,GAClBC,EAAU,GACVP,EAAU,GACZvU,EAAQoB,MACVpB,EAAQoB,KAAKoG,KAAI,SAACpG,GACZA,EAAKoT,sBACPpT,EAAKoT,qBAAqBhN,KACxB,SAACwC,GAAD,OAAUA,IAAS,KAAOyK,EAAYpK,MAAK,SAACiZ,GAAD,OAAUA,EAAK5O,aAAe1K,EAAK0K,eAAeD,EAAYxJ,KAAKjB,MAG9G5I,EAAKwT,2BACPxT,EAAKwT,0BAA0BpN,KAC7B,SAACwC,GAAD,OACEA,IAAS,KACR6K,EAAgBxK,MAAK,SAACiZ,GAAD,OAAUA,EAAK5O,aAAe1K,EAAK0K,eACzDG,EAAgB5J,KAAhB,6BAA0BjB,GAA1B,IAAgCuK,QAASnT,EAAKmT,cAGhDnT,EAAK0T,UAAYA,EAAQzK,MAAK,SAACiZ,GAAD,OAAUzS,GAAgBzP,EAAK0T,WAAajE,GAAgByS,OAC5FxO,EAAQ7J,KAAK7J,EAAK0T,QAAQjJ,QAExBzK,EAAKmT,UAAYA,EAAQlK,MAAK,SAACiZ,GAAD,OAAUzS,GAAgBzP,EAAKmT,WAAa1D,GAAgByS,OAC5F/O,EAAQtJ,KAAK7J,EAAKmT,QAAQ1I,WAKhC,IAAM0X,EAAqB,GAU3B,OATA1O,EAAgBrN,KAAI,SAACgc,GACnB,IAAMC,EAAQF,EAAmBlZ,MAAK,SAACiZ,GAAD,OAAUzS,GAAgByS,EAAK3O,YAAc9D,GAAgB2S,EAAI7O,aAClG8O,EAGHA,EAAM/O,WAAWzJ,KAAKuY,EAAI9O,YAF1B6O,EAAmBtY,KAAK,CAAE0J,SAAU6O,EAAI7O,SAAUD,WAAY,CAAC8O,EAAI9O,iBAMhE,CACLD,YAAaA,EAAY/D,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUhL,EAAEgU,SAAS9I,OAAOC,cAAcH,EAAEgJ,SAAS9I,WACnFgJ,gBAAiB0O,EAAmB7S,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUhL,EAAEgU,SAAS9I,OAAOC,cAAcH,EAAEgJ,SAAS9I,WAC9FiJ,QAASA,EAAQpE,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUhL,EAAEkL,OAAOC,cAAcH,EAAEE,WACzD0I,QAASA,EAAQ7D,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUhL,EAAEkL,OAAOC,cAAcH,EAAEE,aAIvD6X,GAAgB,SAACtiB,GACrB,IAAMgJ,EAAS,GACfhJ,EAAKoG,KAAI,SAACwC,GACQI,EAAOJ,EAAKyS,OAE1BrS,EAAOJ,EAAKyS,OAAOxR,KAAKjB,GAExBI,EAAOJ,EAAKyS,OAAS,CAACzS,MAK1Bc,OAAOC,KAAKX,GAAQ5C,KAAI,SAACiD,GAAD,OAASL,EAAOK,GAAKiG,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUhL,EAAEgF,MAAMkG,OAAOC,cAAcH,EAAEhG,MAAMkG,cAEjG,IAAM8X,EAAe,GAQrB,OANA7Y,OAAOC,KAAKX,GACTsG,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUhL,EAAEkL,OAAOC,cAAcH,EAAEE,WACxCrE,KAAI,SAACiD,GACJkZ,EAAalZ,GAAOL,EAAOK,MAGxBkZ,GAuSMC,GApSA,WAAmC,IAAlC3V,EAAiC,uDAAzBmV,GAAcS,EAAW,uCAE/C,OADAtZ,QAAQC,IAAIqZ,GACJA,EAAO5jB,MAEb,KAAKH,EACH,OAAI+jB,EAAO7jB,QAAQuP,MACV,6BACFtB,GADL,IAEE8L,WAAW,aAAK8J,EAAO7jB,QAAQoB,QAG5B,6BACF6M,GADL,IAEE8L,WAAW,GAAD,oBAAM9L,EAAM8L,YAAZ,aAA2B8J,EAAO7jB,QAAQoB,SAExD,KAAKlB,EACH,OAAO,6BACF+N,GADL,IAEEzC,QAASqY,EAAO7jB,UAEpB,KAAKI,EACH,OAAO,6BACF6N,GADL,IAEEC,gBAAiB2V,EAAO7jB,UAE5B,KAAKM,EACH,OAAO,6BACF2N,GADL,IAEE+L,OAAQ6J,EAAO7jB,UAGnB,KAAKQ,EACH,OAAO,6BACFyN,GADL,IAEEC,iBAAiB,IAErB,KAAKlN,EACH,OAAO,6BACFiN,GADL,IAEE5K,WAAYwgB,EAAO7jB,QACnBwL,SAAS,IAIb,KAAKvK,EACH,OAAO,6BACFgN,GADL,IAEE9M,UAAW,CACTP,MAAOijB,EAAO7jB,QAAQY,MACtBQ,KAAMyiB,EAAO7jB,QAAQoB,KACrB2I,OAAQsZ,GAAyBQ,EAAO7jB,UAE1CwL,SAAS,IAIb,KAAK/J,EACH,IAAIE,EAAW,GACf,GAA6B,KAAzBkiB,EAAO7jB,QAAQY,MACjBe,EAAW,CACTK,eAAgB,GAChB6V,OAAQ,GACRjX,MAAOijB,EAAO7jB,QAAQY,WAEnB,CACL,IAAMoB,EAAiB,GACvB6hB,EAAO7jB,QAAQoB,KAAKY,eAAewF,KAAI,SAACD,GACtCvF,EAAeiJ,KAAf,cAAsBwR,MAAO,kBAAqBlV,OAEpD5F,EAAW,CACTK,eAAgBA,EAAe0O,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUhL,EAAE8J,IAAIoB,OAAOC,cAAcH,EAAElB,IAAIoB,WAC/EgM,OAAQ6L,GAAcG,EAAO7jB,QAAQoB,KAAKO,UAC1Cf,MAAO,IAIX,OAAO,6BACFqN,GADL,IAEEtM,WACA6J,SAAS,IAGb,KAAKvJ,EACH,IAAK4hB,EAAO7jB,QAAQyc,MAAO,CACzB,IAAMqH,EAAQ7V,EAAMtM,SAASK,eAAe+hB,WAAU,SAAC9jB,GAAD,OAAUA,EAAKgK,mBAAqB4Z,EAAO7jB,QAAQiK,oBACnG+Z,EAAK,aAAO/V,EAAMtM,SAASK,gBAEjC,OADAgiB,EAAMF,GAAN,cAAiBrH,MAAO,kBAAqBoH,EAAO7jB,SAC7C,6BACFiO,GADL,IAEEtM,SAAS,6BAAMsM,EAAMtM,UAAb,IAAuBK,eAAgBgiB,MAGnD,IAAMF,EAAQ7V,EAAMtM,SAASkW,OAAOgM,EAAO7jB,QAAQyc,OAAOsH,WACxD,SAAC9jB,GAAD,OAAUA,EAAK+K,cAAgB6Y,EAAO7jB,QAAQgL,eAE1CgZ,EAAK,aAAO/V,EAAMtM,SAASkW,OAAOgM,EAAO7jB,QAAQyc,QACvDuH,EAAMF,GAASD,EAAO7jB,QACtB,IAAM6X,EAAM,gBAAQ5J,EAAMtM,SAASkW,QAEnC,OADAA,EAAOgM,EAAO7jB,QAAQyc,OAASuH,EACxB,6BACF/V,GADL,IAEEtM,SAAS,6BAAMsM,EAAMtM,UAAb,IAAuBkW,aAGnC,KAAKxV,EACH,IAAKwhB,EAAO7jB,QAAQyc,MAClB,OAAO,6BACFxO,GADL,IAEEtM,SAAS,6BACJsM,EAAMtM,UADH,IAENK,eAAe,CAAD,cAAKya,MAAO,kBAAqBoH,EAAO7jB,UAAxC,oBAAsDiO,EAAMtM,SAASK,qBAIzF,IAAM6V,EAAM,gBAAQ5J,EAAMtM,SAASkW,QAMnC,OALIA,EAAOgM,EAAO7jB,QAAQyc,OACxB5E,EAAOgM,EAAO7jB,QAAQyc,OAAtB,CAAgCoH,EAAO7jB,SAAvC,oBAAmD6X,EAAOgM,EAAO7jB,QAAQyc,SAEzE5E,EAAOgM,EAAO7jB,QAAQyc,OAAS,CAACoH,EAAO7jB,SAElC,6BACFiO,GADL,IAEEtM,SAAS,6BAAMsM,EAAMtM,UAAb,IAAuBkW,aAGnC,KAAK1V,EACH,IAAK0hB,EAAO7jB,QAAQyc,MAClB,OAAO,6BACFxO,GADL,IAEEtM,SAAS,6BACJsM,EAAMtM,UADH,IAENK,eAAe,aAAKiM,EAAMtM,SAASK,eAAe+H,QAAO,SAACC,GAAD,OAAUA,EAAKC,mBAAqB4Z,EAAO7jB,QAAQgD,WAIlH,IAAM6U,EAAM,gBAAQ5J,EAAMtM,SAASkW,QAEnC,OADAA,EAAOgM,EAAO7jB,QAAQyc,OAAtB,aAAmC5E,EAAOgM,EAAO7jB,QAAQyc,OAAO1S,QAAO,SAACC,GAAD,OAAUA,EAAKgB,cAAgB6Y,EAAO7jB,QAAQgD,OAC9G,6BACFiL,GADL,IAEEtM,SAAS,6BAAMsM,EAAMtM,UAAb,IAAuBkW,aAGnC,KAAKtV,EACH,IAAMsV,EAAM,gBAAQ5J,EAAMtM,SAASkW,QAC7BoM,EAAS,GAQf,OAPAnZ,OAAOC,KAAK8M,GAAQrQ,KAAI,SAACiD,GACnBA,IAAQoZ,EAAO7jB,QAAQyc,MACzBwH,EAAOxZ,GAAOoN,EAAOpN,GAErBwZ,EAAOJ,EAAO7jB,QAAQwc,UAAY3E,EAAOpN,MAGtC,6BACFwD,GADL,IAEEtM,SAAS,6BAAMsM,EAAMtM,UAAb,IAAuBkW,OAAQoM,MAG3C,KAAKzhB,EACH,IAAMqV,EAAM,gBAAQ5J,EAAMtM,SAASkW,QAC7BoM,EAAS,GAMf,OALAnZ,OAAOC,KAAK8M,GAAQrQ,KAAI,SAACiD,GACnBA,IAAQoZ,EAAO7jB,QAAQyc,QACzBwH,EAAOxZ,GAAOoN,EAAOpN,OAGlB,6BACFwD,GADL,IAEEtM,SAAS,6BAAMsM,EAAMtM,UAAb,IAAuBkW,OAAQoM,MAK3C,KAAKxhB,EACH,OAAO,6BACFwL,GADL,IAEEtL,UAAW,CACT/B,MAAOijB,EAAO7jB,QAAQY,MACtBQ,KAAMyiB,EAAO7jB,QAAQoB,MAEvBoK,SAAS,IAEb,KAAK1I,EACH,OAAO,6BACFmL,GADL,IAEEtL,UAAW,CACT/B,MAAOijB,EAAO7jB,QAAQY,MACtBQ,KAAM6M,EAAMtL,UAAUvB,KAAK2I,QAAO,SAACC,GAAD,OAAUA,EAAKiG,cAAgB4T,EAAO7jB,QAAQgD,OAElFwI,SAAS,IAEb,KAAKvI,EACH,OAAO,6BACFgL,GADL,IAEEtL,UAAW,CACT/B,MAAOqN,EAAMtL,UAAU/B,MACvBQ,KAAK,GAAD,oBAAM6M,EAAMtL,UAAUvB,KAAK2I,QAAO,SAACC,GAAD,OAAUA,EAAKiG,cAAgB4T,EAAO7jB,QAAQiQ,gBAAhF,CAA8F4T,EAAO7jB,WAE3GwL,SAAS,IAEb,KAAK5I,EACH,OAAO,6BACFqL,GADL,IAEEtL,UAAU,6BACLsL,EAAMtL,WADF,IAEPvB,KAAK,GAAD,oBAAM6M,EAAMtL,UAAUvB,MAAtB,CAA4ByiB,EAAO7jB,cAK7C,KAAKmD,EACH,IAAIxB,EAAW,GACf,GAAsC,KAAlCkiB,EAAO7jB,QAAQ2B,SAASf,MAC1Be,EAAW,CACTK,eAAgB,GAChB6V,OAAQ,GACRjX,MAAOijB,EAAO7jB,QAAQY,WAEnB,CACL,IAAMoB,EAAiB,GACvB6hB,EAAO7jB,QAAQ2B,SAASP,KAAKY,eAAewF,KAAI,SAACD,GAC/CvF,EAAeiJ,KAAf,cAAsBwR,MAAO,kBAAqBlV,OAEpD5F,EAAW,CACTK,eAAgBA,EAAe0O,MAAK,SAAC/P,EAAGgL,GAAJ,OAAUhL,EAAE8J,IAAIoB,OAAOC,cAAcH,EAAElB,IAAIoB,WAC/EgM,OAAQ6L,GAAcG,EAAO7jB,QAAQ2B,SAASP,KAAKO,UACnDf,MAAOijB,EAAO7jB,QAAQY,OAI1B,OAAO,6BACFqN,GADL,IAEEtM,WACAgB,UAAW,CACT/B,MAAOijB,EAAO7jB,QAAQ2C,UAAU/B,MAChCQ,KAAMyiB,EAAO7jB,QAAQ2C,UAAUvB,MAEjCD,UAAW,CACTP,MAAOijB,EAAO7jB,QAAQmB,UAAUP,MAChCQ,KAAMyiB,EAAO7jB,QAAQmB,UAAUC,KAC/B2I,OAAQsZ,GAAyBQ,EAAO7jB,QAAQmB,YAElDkC,WAAYwgB,EAAO7jB,QAAQqD,WAC3BmI,SAAS,IAIb,KAAK3H,EACH,OAAO,6BACFoK,GADL,IAEElE,OAAO,6BACFkE,EAAMlE,QADL,IAEJoL,SAAU0O,EAAO7jB,YAIvB,KAAK2D,EACH,OAAO,6BACFsK,GADL,IAEElE,OAAO,6BACFkE,EAAMlE,QADL,IAEJ5F,SAAU0f,EAAO7jB,YAKvB,KAAK+D,EACH,OAAO,6BACFkK,GADL,IAEEW,SAAUiV,EAAO7jB,UAGrB,KAAKgE,EACH,IAAMkgB,EAAmBL,EAAO7jB,QAAQoB,KAClCD,EAAY8M,EAAM9M,UAAUC,KAAKoG,KAAI,SAASwC,GAClD,OAAOA,EAAK6D,cAAgBqW,EAAiBrW,YAAcqW,EAAmBla,KAGhF,OAAO,6BACFiE,GADL,IAEE9M,UAAU,6BACL8M,EAAM9M,WADF,IAEPC,KAAMD,MAMZ,QACE,OAAO8M,IC1ZEkW,GAFDC,aAAYC,GAAaC,aAAgBC,OCGvDC,IAASxc,OACP,eAAC,IAAD,CAAUmc,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFhP,SAASsP,eAAe,SH0HpB,kBAAmB3O,WACrBA,UAAU4O,cAAcC,MACrB3V,MAAK,SAAC4V,GACLA,EAAaC,gBAEd3V,OAAM,SAACtO,GACN2J,QAAQ3J,MAAMA,EAAMyO,c","file":"static/js/main.a7c1c9ad.chunk.js","sourcesContent":["const ApiPath = process.env.REACT_APP_API_PATH\n\n//* ******************** Skeleton ************************* //\n\nexport const ADD_BREADCRUMB = \"ADD_BREADCRUMB\"\nexport const addBreadcrumb = (payload) => {\n  return { type: ADD_BREADCRUMB, payload }\n}\n\nexport const SET_LOADING = \"SET_LOADING\"\nexport const setLoading = (payload) => {\n  return { type: SET_LOADING, payload }\n}\n\nexport const SET_LOADING_DATABASE = \"SET_LOADING_DATABASE\"\nexport const setLoadingDatabase = (payload) => {\n  return { type: SET_LOADING_DATABASE, payload }\n}\n\nexport const SET_NAVBAR = \"SET_NAVBAR\"\nexport const setNavbar = (payload) => {\n  return { type: SET_NAVBAR, payload }\n}\n\n//* ******************** database ************************* //\nexport const UPDATE = \"UPDATE\"\nexport const update = () => async (dispatch) => {\n  let error = null\n  try {\n    await fetch(`${ApiPath}update`, {\n      method: \"POST\",\n    })\n  } catch (err) {\n    error = `An error has occured: ${err.toString()}`\n  }\n  dispatch({\n    type: UPDATE,\n    payload: error,\n  })\n  return { type: SET_LOADING, payload: true }\n}\n\nexport const GET_UPDATE_TIME = \"GET_UPDATE_TIME\"\nexport const getUpdateTime = () => async (dispatch) => {\n  let payload = null\n  try {\n    const response = await fetch(`${ApiPath}update/datetime`)\n    payload = await response.json()\n    payload = payload.update_datetime.substr(0, 16)\n  } catch (error) {\n    payload = `An error has occured: ${error.toString()}`\n  }\n  dispatch({\n    type: GET_UPDATE_TIME,\n    payload,\n  })\n  return { type: SET_LOADING, payload: true }\n}\n\n//* ******************** Contract ************************* //\n\nexport const UPDATE_ALL_CONTRACTS = \"UPDATE_ALL_CONTRACTS\"\nexport const updateAllContracts = () => async (dispatch) => {\n  const contracts = { error: \"\", data: [] }\n  try {\n    const response = await fetch(`${ApiPath}contracts`)\n    if (!response.ok) {\n      contracts.error = `An error has occured: ${response.status}`\n    } else {\n      contracts.data = await response.json()\n    }\n  } catch (error) {\n    contracts.error = `An error has occured: ${error.toString()}`\n  }\n  dispatch({\n    type: UPDATE_ALL_CONTRACTS,\n    payload: contracts,\n  })\n}\n\n//* ******************** Metadata ************************* //\nexport const UPDATE_ALL_METADATA = \"UPDATE_ALL_METADATA\"\nexport const updateAllMetadata = () => async (dispatch) => {\n  const metadata = { error: \"\", data: [] }\n  try {\n    const metadataResponse = await fetch(`${ApiPath}metadata`)\n    if (!metadataResponse.ok) {\n      metadata.error = `An error has occured: ${metadataResponse.status}`\n    } else {\n      const metadataJson = await metadataResponse.json()\n      const metadataDocumentsTypes = await fetch(`${ApiPath}documentsTypes`)\n      if (!metadataDocumentsTypes.ok) {\n        metadata.error = `An error has occured: ${metadataDocumentsTypes.status}`\n      } else {\n        const documentsTypesJson = await metadataDocumentsTypes.json()\n        metadata.data = { metadata: metadataJson, documentsTypes: documentsTypesJson }\n      }\n    }\n  } catch (error) {\n    metadata.error = `An error has occured: ${error.toString()}`\n  }\n  dispatch({ type: UPDATE_ALL_METADATA, payload: metadata })\n}\n\nexport const UPDATE_METADATA = \"UPDATE_METADATA\"\nexport const updateMetadata = (payload) => {\n  // L'appel à l'API ce fait avant\n  return { type: UPDATE_METADATA, payload }\n}\n\nexport const DELETE_METADATA = \"DELETE_METADATA\"\nexport const deleteMetadata = (payload) => {\n  // L'appel à l'API ce fait avant\n  return { type: DELETE_METADATA, payload }\n}\n\nexport const ADD_METADATA = \"ADD_METADATA\"\nexport const addMetadata = (payload) => {\n  // L'appel à l'API ce fait avant\n  return { type: ADD_METADATA, payload }\n}\n\nexport const EDIT_GROUP = \"EDIT_GROUP\"\nexport const editGroup = (payload) => {\n  // L'appel à l'API ce fait avant\n  return { type: EDIT_GROUP, payload }\n}\n\nexport const DELETE_GROUP = \"DELETE_GROUP\"\nexport const deleteGroup = (payload) => {\n  // L'appel à l'API ce fait avant\n  return { type: DELETE_GROUP, payload }\n}\n\n//* ******************** Documents ************************* //\nexport const UPDATE_ALL_DOCUMENTS = \"UPDATE_ALL_DOCUMENTS\"\nexport const updateAllDocuments = () => async (dispatch) => {\n  const documents = { error: \"\", data: [] }\n  try {\n    const response = await fetch(`${ApiPath}documents`)\n    if (!response.ok) {\n      documents.error = `An error has occured: ${response.status}`\n    } else {\n      documents.data = await response.json()\n    }\n  } catch (error) {\n    documents.error = `An error has occured: ${error.toString()}`\n  }\n  dispatch({\n    type: UPDATE_ALL_DOCUMENTS,\n    payload: documents,\n  })\n}\n\nexport const ADD_DOCUMENT = \"ADD_DOCUMENT\"\nexport const addDocument = (payload) => {\n  // L'appel à l'API ce fait avant\n  return { type: ADD_DOCUMENT, payload }\n}\n\nexport const DELETE_DOCUMENT = \"DELETE_DOCUMENT\"\nexport const deleteDocument = (id) => async (dispatch) => {\n  let error = \"\"\n  try {\n    const response = await fetch(`${ApiPath}documents/${id}`, {\n      method: \"DELETE\",\n    })\n    if (!response.ok) {\n      error = `An error has occured: ${response.error}`\n    }\n  } catch (err) {\n    error = `An error has occured: ${err.toString()}`\n  }\n  dispatch({\n    type: DELETE_DOCUMENT,\n    payload: { error, id },\n  })\n  return { type: SET_LOADING, payload: true }\n}\n\nexport const UPDATE_DOCUMENT = \"UPDATE_DOCUMENT\"\nexport const updateDocument = (payload) => {\n  return { type: UPDATE_DOCUMENT, payload }\n}\n\n//* ******************** Init ************************ //\nexport const INIT_ALL = \"INIT_ALL\"\nexport const initAll = () => async (dispatch) => {\n  const metadata = { error: \"\", data: [] }\n  const documents = { error: \"\", data: [] }\n  const contracts = { error: \"\", data: [] }\n  let updateTime = null\n  try {\n    const metadataResponse = await fetch(`${ApiPath}metadata`)\n    if (!metadataResponse.ok) {\n      metadata.error = `An error has occured: ${metadataResponse.status}`\n    } else {\n      const metadataJson = await metadataResponse.json()\n      const metadataDocumentsTypes = await fetch(`${ApiPath}documentsTypes`)\n      if (!metadataDocumentsTypes.ok) {\n        metadata.error = `An error has occured: ${metadataDocumentsTypes.status}`\n      } else {\n        const documentsTypesJson = await metadataDocumentsTypes.json()\n        metadata.data = { metadata: metadataJson, documentsTypes: documentsTypesJson }\n        const documentResponse = await fetch(`${ApiPath}documents`)\n        if (!documentResponse.ok) {\n          documents.error = `An error has occured: ${documentResponse.status}`\n        } else {\n          documents.data = await documentResponse.json()\n          const contractResponse = await fetch(`${ApiPath}contracts`)\n          if (!contractResponse.ok) {\n            contracts.error = `An error has occured: ${contractResponse.status}`\n          } else {\n            contracts.data = await contractResponse.json()\n            const UpdateTimeResponse = await fetch(`${ApiPath}update/datetime`)\n            updateTime = await UpdateTimeResponse.json()\n            updateTime = updateTime.update_datetime.substr(0, 16)\n          }\n        }\n      }\n    }\n  } catch (error) {\n    metadata.error = `An error has occured: ${error.toString()}`\n    documents.error = `An error has occured: ${error.toString()}`\n    contracts.error = `An error has occured: ${error.toString()}`\n    updateTime = `An error has occured: ${error.toString()}`\n  }\n  dispatch({ type: INIT_ALL, payload: { metadata, documents, contracts, updateTime } })\n}\n\nexport const UPDATE_FILTER_CONTRACT = \"UPDATE_FILTER_CONTRACT\"\nexport const updateFilterContract = (payload) => {\n  return { type: UPDATE_FILTER_CONTRACT, payload }\n}\n\nexport const UPDATE_FILTER_DOCUMENT = \"UPDATE_FILTER_DOCUMENT\"\nexport const updateFilterDocument = (payload) => {\n  return { type: UPDATE_FILTER_DOCUMENT, payload }\n}\n\n\n//* ******************** Keywords ************************* //\n\nexport const GET_ALL_KEYWORDS = \"GET_ALL_KEYWORDS\"\nexport const getAllKeywords = () => async (dispatch) => {\n  const keywords = { error: \"\", data: [] }\n  try {\n    const response = await fetch(`${ApiPath}documents/keywords/`)\n    if (!response.ok) {\n      keywords.error = `An error has occured: ${response.status}`\n    } else {\n      keywords.data = await response.json()\n    }\n  } catch (error) {\n    keywords.error = `An error has occured: ${error.toString()}`\n  }\n  dispatch({\n    type: GET_ALL_KEYWORDS,\n    payload: keywords,\n  })\n}\n\n//* ******************** Contract metadata ************************* //\n\nexport const SET_METADATA_FROM_DOCUMENTS = \"SET_METADATA_FROM_DOCUMENTS\"\nexport const setMetadatasFromDocuments = (contractId) => async (dispatch) => {\n  const contract = { error: \"\", data: [], \"contractId\": contractId}\n  try {\n    const response = await fetch(`${ApiPath}contracts/metadatas/${contractId}`, {\n      method: \"POST\",\n    })\n    if (!response.ok) {\n      contract.error = `An error has occured: ${response.status}`\n    } else {\n      contract.data = await response.json()\n    }\n  } catch (error) {\n    contract.error = `An error has occured: ${error.toString()}`\n  }\n  dispatch({\n    type: SET_METADATA_FROM_DOCUMENTS,\n    payload: contract,\n  })\n}\n\n","export default __webpack_public_path__ + \"static/media/searchFilled.1c5bfba7.svg\";","/* eslint-disable max-len */\nimport React from \"react\"\nimport Highlighter from \"react-highlight-words\"\nimport { Input, Button, Row, Col, Checkbox } from \"antd\"\nimport { Link } from \"@reach/router\"\nimport Icon, { FilterFilled, FilterOutlined, SearchOutlined } from \"@ant-design/icons\"\nimport searchFilled from \"../assets/searchFilled.svg\"\n\nlet searchText = \"\"\nlet searchedColumn = \"\"\nlet focus = null\nlet checkedList = []\n\nconst handleSearch = (selectedKeys, confirm, dataIndex) => {\n  confirm()\n  const [currentSearchText] = selectedKeys\n  searchText = currentSearchText\n  searchedColumn = dataIndex\n}\n\nconst handleReset = (clearFilters) => {\n  clearFilters()\n  searchText = \"\"\n}\n\nconst getColumnSearchProps = (dataIndex, dataSurname, arrayPath, linkData, isDate) => ({\n  filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    <div className=\"list_utils\">\n      <Row>\n        <Col span={24}>\n          <Input\n            ref={(node) => {\n              focus = node\n            }}\n            placeholder={`Rechercher ${dataSurname}`}\n            value={selectedKeys[0]}\n            onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          />\n        </Col>\n        <Col span={12}>\n          <Button type=\"primary\" onClick={() => handleSearch(selectedKeys, confirm, dataIndex)} icon={<SearchOutlined />}>\n            Rechercher\n          </Button>\n        </Col>\n        <Col span={12}>\n          <Button\n            onClick={() => {\n              handleReset(clearFilters)\n            }}\n          >\n            Réinitialiser\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  ),\n  filterIcon: (filtered) =>\n    filtered ? (\n      <Icon\n        style={{ color: \"#5EC2D7\" }}\n        component={() => (\n          <svg width=\"2em\" height=\"2em\" fill=\"#5EC2D7\" viewBox=\"0 0 1024 1024\">\n            <image x=\"0\" y=\"0\" height=\"1000.7\" width=\"100%\" xlinkHref={searchFilled} />\n          </svg>\n        )}\n      />\n    ) : (\n      <SearchOutlined style={{ color: undefined, fontSize: \"1.9em\" }} />\n    ),\n  onFilter: (value, record) => {\n    if (Array.isArray(arrayPath)) {\n      let obj = record\n      arrayPath.map((child) => {\n        obj = obj[child]\n      })\n      return obj ? obj.toString().toLowerCase().includes(value.toLowerCase()) : \"\"\n    }\n    return record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\"\n  },\n  onFilterDropdownVisibleChange: (visible) => {\n    if (visible) {\n      setTimeout(() => focus.select(), 100)\n    }\n  },\n  render: (textRaw, record) => {\n    let text = textRaw\n    if (isDate) {\n      text = textRaw.substr(0, 10)\n    }\n    if (linkData) {\n      let obj = record\n      linkData.var.map((child) => {\n        obj = obj[child]\n      })\n      if (searchedColumn === dataIndex) {\n        return (\n          <Link to={linkData.path + obj}>\n            <Highlighter\n              highlightStyle={{ backgroundColor: \"#C2E8F0\", padding: 0 }}\n              searchWords={[searchText]}\n              autoEscape\n              textToHighlight={text ? text.toString() : \"\"}\n            />\n          </Link>\n        )\n      }\n      return <Link to={linkData.path + obj}>{text}</Link>\n    }\n    if (searchedColumn === dataIndex) {\n      return (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#C2E8F0\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      )\n    }\n    return text\n  },\n})\n\nconst getColumnFilterProps = (dataIndex, filterArray) => ({\n  filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    <div className=\"list_utils\">\n      <Row>\n        <Col span={24}>\n          <Checkbox.Group\n            options={filterArray}\n            onChange={(e) => {\n              setSelectedKeys(e)\n              checkedList = e\n            }}\n            value={checkedList}\n          />\n        </Col>\n        <Col span={12}>\n          <Button type=\"primary\" onClick={() => handleSearch(selectedKeys, confirm, dataIndex)} icon={<SearchOutlined />}>\n            Filtrer\n          </Button>\n        </Col>\n        <Col span={12}>\n          <Button\n            onClick={() => {\n              handleReset(clearFilters)\n              checkedList = []\n            }}\n          >\n            Réinitialiser\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  ),\n  onFilter: (value, record) =>\n    record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\",\n  filterIcon: (filtered) =>\n    filtered ? (\n      <FilterFilled style={{ color: \"#5EC2D7\", fontSize: \"1.7em\" }} />\n    ) : (\n      <FilterOutlined style={{ color: undefined, fontSize: \"1.7em\" }} />\n    ),\n})\nexport { getColumnSearchProps, getColumnFilterProps }\n","/* eslint-disable no-nested-ternary */\nconst optionsDate = { weekday: \"long\", year: \"numeric\", month: \"long\", day: \"numeric\" }\nconst optionsDateYear = { year: \"numeric\" }\n\nconst getDate = (date) => {\n  return new Date(date).toLocaleDateString(\"fr-FR\", optionsDate)\n}\n\nconst getYear = (date) => {\n  return new Date(date).toLocaleDateString(\"fr-FR\", optionsDateYear)\n}\n\nconst getEmptyDoc = () => {\n  return {\n    id: null,\n    contract_id: null,\n    contract_name: null,\n    name: null,\n    domain: null,\n    type: null,\n    year: null,\n    date: null,\n    version: null,\n    sequentialNumber: null,\n    extension: null,\n    projectName: null,\n    creator: \"\",\n    creationDate: \"2008-09-15T15:53:00+05:00\",\n    summary: \"\",\n    metadata: [],\n    keywords: [],\n    isNew: true,\n  }\n}\n\nconst generateName = (contract, document, isVersion, key, numeroAffaireFitnet) => {\n  const year = document.year.toString().substring(2, 4)\n  const XorR = contract.company === \"BIAL-X\" ? \"X\" : \"R\"\n  const date = document.date.format(\"YYYYMMDD\")\n  if (!isVersion) {\n    return `${document.domain + year}-${contract.customer_name}-${numeroAffaireFitnet}${XorR}-${key}-${\n      document.projectName\n    }-${date}-${document.sequentialNumber}.${document.extension}`\n  }\n  return `${document.domain + year}-${contract.customer_name}-${numeroAffaireFitnet}${XorR}-${key}-${document.projectName}-v${\n    document.version\n  }.${document.extension}`\n}\n\nconst dateFormat = \"dddd Do MMMM YYYY\"\n\nconst getIdByContract = (title, ifFailed) => {\n  return title && title.split(\"-\")[1]\n    ? title.split(\"-\")[1].match(/^\\d+$/)\n      ? title.split(\"-\")[1]\n      : title.split(\"-\")[0]\n    : ifFailed\n}\n\nexport { getDate, getYear, getEmptyDoc, generateName, dateFormat, getIdByContract }\n","const isInVersion = (documentsType, id) => {\n  return !documentsType.filter((item) => item.isInVersion === true && item.document_type_id === id).length > 0\n}\n\nconst getLibeleByKey = (documentsType, id) => {\n  const result = documentsType.find((item) => item.document_type_id === id)\n  if (result) return result.value\n  return \"inconnu\"\n}\n\nconst getKeyById = (documentsType, id) => {\n  console.log(documentsType, id)\n  const result = documentsType.find((item) => item.document_type_id === id)\n  if (result) return result.key\n  return \"???\"\n}\n\nconst getMetadataByID = (idList, metadataList) => {\n  console.log(idList, metadataList)\n  console.log(\"ICI\")\n  let testList = []\n\n  if (idList){\n    testList = idList\n  }\n  const result = []\n  Object.keys(metadataList).map((key) =>\n    // eslint-disable-next-line consistent-return\n    metadataList[key].map((metadata) => {\n      if (testList.includes(metadata.metadata_id)) {\n        if (result[key]) {\n          result[key].obj.push(metadata)\n          result[key].list.push(metadata.value)\n          result[key].idList.push(metadata.metadata_id)\n        } else {\n          result[key] = { obj: [metadata], list: [metadata.value], idList: [metadata.metadata_id] }\n        }\n      }\n    })\n  )\n  console.log(result)\n  return result\n}\n\nconst getListValueByID = (idList, metadataList) => {\n  console.log(idList, metadataList)\n  const result = []\n  Object.keys(metadataList).map((key) =>\n    // eslint-disable-next-line consistent-return\n    metadataList[key].map((metadata) => {\n      if (idList.includes(metadata.metadata_id)) {\n        result.push(metadata.value)\n      }\n    })\n  )\n  console.log(result)\n  return result\n}\n\nexport { isInVersion, getLibeleByKey, getMetadataByID, getKeyById, getListValueByID }\n","import React from \"react\"\nimport { Col, Card, Table, Row, Button } from \"antd\"\nimport moment from \"moment\"\nimport { CheckOutlined, EyeOutlined } from \"@ant-design/icons\"\nimport { getColumnSearchProps } from \"../utils/tableUtils\"\nimport { dateFormat } from \"../utils/formatUtils\"\nimport { getLibeleByKey } from \"../utils/metadata\"\n\nexport default function ListDocuments({ documents, title, size, isButton, onClickButton, isPreview, loading, documentsTypes }) {\n  const columnsData = []\n  if (isPreview) {\n    columnsData.push({\n      title: \"Nom\",\n      dataIndex: \"name\",\n      key: \"name\",\n      sorter: (a, b) => a.name.trim().localeCompare(b.name.trim()),\n      ...getColumnSearchProps(\"name\", \"nom\"),\n      width: \"50%\",\n    })\n  } else {\n    columnsData.push({\n      title: \"Nom\",\n      dataIndex: \"name\",\n      key: \"name\",\n      sorter: (a, b) => a.name.trim().localeCompare(b.name.trim()),\n      ...getColumnSearchProps(\"name\", \"nom\", null, {\n        path: \"/documents/\",\n        var: [\"document_id\"],\n      }),\n      width: \"50%\",\n    })\n  }\n\n  columnsData.push(\n    ...[\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        key: \"date\",\n        sorter: {\n          compare: (a, b) => a.date.trim().localeCompare(b.date.trim()),\n        },\n        ...getColumnSearchProps(\"date\", \"date\", null, null, true),\n        width: \"20%\",\n        render: (date) => moment(date).format(dateFormat),\n      },\n      {\n        title: \"Type\",\n        dataIndex: \"type\",\n        key: \"type\",\n        sorter: (a, b) => a.type.trim().localeCompare(b.type.trim()),\n        ...getColumnSearchProps(\"type\", \"type\"),\n        width: \"15%\",\n        render: (type) => getLibeleByKey(documentsTypes, type),\n      },\n    ]\n  )\n\n  if (isButton || isPreview) {\n    columnsData.push({\n      dataIndex: \"document_id\",\n      key: \"document_id\",\n      width: \"5%\",\n      render: (id, payload) => (\n        <>\n          {isPreview && (\n            <Button\n              key={Math.random()\n                .toString(36)\n                .replace(/[^a-z]+/g, \"\")\n                .substr(0, 5)}\n              onClick={() => window.open(`/documents/${id}`, \"_blank\").focus}\n            >\n              <EyeOutlined />\n            </Button>\n          )}\n          {isButton && (\n            <Button\n              key={Math.random()\n                .toString(36)\n                .replace(/[^a-z]+/g, \"\")\n                .substr(0, 5)}\n              onClick={() => onClickButton(payload)}\n            >\n              <CheckOutlined />\n            </Button>\n          )}\n        </>\n      ),\n    })\n  }\n  return (\n    <div className=\"list-documents\">\n      <Row>\n        <Col span={24}>\n          {title ? (\n            <Card title={title}>\n              <Table\n                loading={loading}\n                columns={columnsData}\n                dataSource={documents}\n                pagination={{\n                  pageSize: size,\n                }}\n                rowKey=\"document_id\"\n              />\n            </Card>\n          ) : (\n            <Table\n              loading={loading}\n              columns={columnsData}\n              dataSource={documents}\n              pagination={{\n                pageSize: size || 10,\n                hideOnSinglePage: true,\n              }}\n              rowKey=\"document_id\"\n            />\n          )}\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { PlusCircleFilled, ClockCircleFilled, CheckCircleFilled, CloseCircleFilled } from \"@ant-design/icons\"\n\nexport default function StatusIcon(props) {\n  const { status, style } = props\n  if (status === \"Opportunity\") {\n    return <PlusCircleFilled style={style} />\n  }\n  if (status === \"In-progress\") {\n    return <ClockCircleFilled style={style} />\n  }\n  if (status === \"Closed\") {\n    return <CheckCircleFilled style={style} />\n  }\n  return <CloseCircleFilled style={style} />\n}\n","/* eslint-disable camelcase */\nimport React from \"react\"\nimport { Table, Button, Row, Col } from \"antd\"\nimport { CheckOutlined, EyeOutlined } from \"@ant-design/icons\"\nimport { getColumnSearchProps, getColumnFilterProps } from \"../utils/tableUtils\"\nimport StatusIcon from \"./StatusIcon\"\n\nexport default function ListContracts({ contracts, loading, size, isButton, onClickButton, isPreview }) {\n  const columnsData = []\n  if (isPreview) {\n    columnsData.push({\n      title: \"Titre\",\n      dataIndex: \"title\",\n      key: \"title\",\n      sorter: {\n        compare: (a, b) => a.title.trim().localeCompare(b.title.trim()),\n      },\n      ...getColumnSearchProps(\"title\", \"titre\"),\n      width: \"40%\",\n    })\n  } else {\n    columnsData.push({\n      title: \"Titre\",\n      dataIndex: \"title\",\n      key: \"title\",\n      sorter: {\n        compare: (a, b) => a.title.trim().localeCompare(b.title.trim()),\n      },\n      ...getColumnSearchProps(\"title\", \"titre\", null, {\n        path: \"/contracts/\",\n        var: [\"contract_id\"],\n      }),\n      width: \"40%\",\n    })\n  }\n\n  columnsData.push(\n    ...[\n      {\n        title: \"Client\",\n        dataIndex: \"customer_name\",\n        key: \"customer_name\",\n        sorter: {\n          compare: (a, b) => a.customer_name.trim().localeCompare(b.customer_name.trim()),\n        },\n        ...getColumnSearchProps(\"customer_name\", \"client\"),\n        width: \"40%\",\n      },\n      {\n        title: \"Status\",\n        dataIndex: \"status\",\n        key: \"status\",\n        sorter: {\n          compare: (a, b) => a.status.localeCompare(b.status),\n        },\n        ...getColumnFilterProps(\"status\", [\n          { label: \"Opportunity\", value: \"Opportunity\" },\n          { label: \"In-progress\", value: \"In-progress\" },\n          { label: \"Closed\", value: \"Closed\" },\n          { label: \"Canceled\", value: \"Canceled\" },\n        ]),\n\n        width: \"20%\",\n        render: (status) => (\n          <span>\n            <StatusIcon status={status} />\n            &nbsp;&nbsp; {status}\n          </span>\n        ),\n      },\n    ]\n  )\n  if (isButton || isPreview) {\n    columnsData.push({\n      dataIndex: \"contract_id\",\n      key: \"contract_id\",\n      width: \"5%\",\n      render: (contract_id, payload) => (\n        <>\n          {isPreview && (\n            <Button\n              key={Math.random()\n                .toString(36)\n                .replace(/[^a-z]+/g, \"\")\n                .substr(0, 5)}\n              onClick={() => window.open(`/contracts/${contract_id}`, \"_blank\").focus}\n            >\n              <EyeOutlined />\n            </Button>\n          )}\n          {isButton && (\n            <Button\n              key={Math.random()\n                .toString(36)\n                .replace(/[^a-z]+/g, \"\")\n                .substr(0, 5)}\n              onClick={() => onClickButton(payload)}\n            >\n              <CheckOutlined />\n            </Button>\n          )}\n        </>\n      ),\n    })\n  }\n  return (\n    <Row>\n      <Col span={24}>\n        <Table\n          rowKey=\"contract_id\"\n          columns={columnsData}\n          dataSource={contracts}\n          pagination={{\n            showSizeChanger: false,\n            showQuickJumper: true,\n            pageSize: size || 10,\n            hideOnSinglePage: true,\n          }}\n          loading={loading}\n        />\n      </Col>\n    </Row>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Input, Divider, Button, Space, message, Card, Table, Empty, Row, Col } from \"antd\"\nimport { Helmet } from \"react-helmet\"\nimport { Link, navigate } from \"@reach/router\"\nimport { connect, useDispatch } from \"react-redux\"\nimport { addBreadcrumb, update, setLoading, setNavbar, setLoadingDatabase, initAll } from \"../redux/actions\"\nimport ListDocuments from \"../components/ListDocuments\"\nimport ListContracts from \"../components/ListContracts\"\n\nfunction HomePage({ loading, documents, contracts, loadingDatabase, documentsTypes }) {\n  const dispatch = useDispatch()\n  const [searchResult, setSearchResult] = useState([])\n  const [inResearch, setInResearch] = useState(false)\n  const [errorSearch, setErrorSearch] = useState(undefined)\n\n  useEffect(() => {\n    dispatch(setNavbar(\"\"))\n    dispatch(\n      addBreadcrumb({\n        reset: true,\n        data: [{ name: \"Accueil\", href: \"/\" }],\n      })\n    )\n  }, [dispatch])\n\n  function search(keywords) {\n    return new Promise((resolve, reject) => {\n      fetch(`${process.env.REACT_APP_API_PATH}search?keywords=${keywords}`)\n        .then((response) => {\n          if (response.status !== 200) {\n            throw new Error(\"Erreur lors de la récupération en base\")\n          }\n          return response.json()\n        })\n        .then((response) => {\n          resolve(response)\n        })\n        .catch((err) => {\n          reject(Error(`An error has occured: ${err.toString()}`))\n        })\n    })\n  }\n\n  function findDocuments(e) {\n    search(e.target.value)\n      .then((res) => {\n        setSearchResult(res)\n      })\n      .catch((error) => {\n        setErrorSearch(error.message)\n      })\n  }\n\n  return (\n    <div>\n      <Helmet>\n        <title>Home Page</title>\n      </Helmet>\n\n      <Space style={{ paddingLeft: \"10px\" }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            dispatch(setLoading(true))\n            dispatch(initAll())\n          }}\n          className=\"classic-button\"\n          loading={loading}\n        >\n          Actualiser\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            navigate(\"/documents/create\")\n          }}\n          className=\"classic-button\"\n          loading={loading}\n        >\n          Nouveau document\n        </Button>\n      </Space>\n\n      <Space style={{ paddingRight: \"10px\", float: \"right\" }}>\n        <Button\n          type=\"ghost\"\n          onClick={() => {\n            dispatch(setLoadingDatabase(true))\n            dispatch(update())\n            message.warning(\"L'actualisation de la base de données peut prendre plusieurs minutes.\")\n          }}\n          className=\"classic-button\"\n          loading={loadingDatabase}\n        >\n          Actualiser les données en base\n        </Button>\n      </Space>\n\n      <Row style={{ marginTop: \"10px\" }}>\n        <Col span={24} style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n          <Card title=\"Rechercher document ou affaire\">\n            <Input\n              placeholder=\"Exemple : Orsys\"\n              onChange={(e) => {\n                setInResearch(e.target.value !== \"\")\n                findDocuments(e)\n              }}\n            />\n\n            {inResearch && (\n              <div>\n                <Divider />\n                <Table\n                  columns={[\n                    {\n                      title: \"Type\",\n                      dataIndex: \"name\",\n                      key: \"name\",\n                      render: (_, record) => {\n                        if (record.document_id) {\n                          return \"Document\"\n                        }\n                        return \"Affaire\"\n                      },\n                    },\n                    {\n                      title: \"Nom\",\n                      dataIndex: \"contract_name\",\n                      key: \"contract_name\",\n                      width: \"75%\",\n                      render: (_, record) => {\n                        if (record.document_id) {\n                          return <Link to={`/documents/${record.document_id}`}>{record.name}</Link>\n                        }\n                        return <Link to={`/contracts/${record.contract_id}`}>{record.title}</Link>\n                      },\n                    },\n                  ]}\n                  dataSource={searchResult}\n                  locale={{\n                    emptyText: errorSearch ? (\n                      <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description={errorSearch} />\n                    ) : (\n                      <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"la recherche n'a rien donné\" />\n                    ),\n                  }}\n                />\n              </div>\n            )}\n          </Card>\n        </Col>\n      </Row>\n\n      <Row style={{ marginTop: \"20px\" }}>\n        <Col lg={{ span: 24 }} xl={{ span: 12 }} style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n          <Card title=\"Les 5 dernieres affaires dans Fitnet\">\n            <ListContracts\n              contracts={contracts.data.sort((a, b) => parseInt(b.contract_id, 10) - parseInt(a.contract_id, 10)).slice(0, 5)}\n              loading={loading}\n              size={5}\n            />\n          </Card>\n        </Col>\n        <Col lg={{ span: 24 }} xl={{ span: 12 }} style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n          <Card title=\"Les 5 derniers documents créés\">\n            <ListDocuments\n              documents={documents.data.sort((a, b) => b.date.trim().localeCompare(a.date.trim())).slice(0, 5)}\n              loading={loading}\n              size={5}\n              documentsTypes={documentsTypes}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    documents: state.documents,\n    contracts: state.contracts,\n    loadingDatabase: state.loadingDatabase,\n    documentsTypes: state.metadata.documentsTypes,\n  }\n}\nexport default connect(mapStateToProps, { addBreadcrumb, update, setLoading, setNavbar, setLoadingDatabase })(HomePage)\n","/* eslint-disable no-nested-ternary */\nimport moment from \"moment\"\n\nconst stringSimplfier = (str) => {\n  return str\n    .trim()\n    .toUpperCase()\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n}\n\nconst getStrByFilter = (word, filter) => {\n  if (word) {\n    return filter && filter !== \"\" ? stringSimplfier(word).includes(stringSimplfier(filter)) : true\n  }\n  return false\n}\n\nconst getOneByFilterMany = (word, filter) => {\n  return filter && filter.length > 0 ? filter.includes(word) : true\n}\n\nconst getManyByFilterMany = (words, filter) => {\n  let result = true\n  if (filter && filter.length > 0) {\n    if (words) {\n      filter.map((one) => {\n        if (!words.includes(one)) {\n          result = false\n        }\n      })\n    } else {\n      result = false\n    }\n  }\n  return result\n}\n\nconst getDateBeetweenTwoFilter = (date, filterDate) => {\n  return filterDate && filterDate.length > 0 ? moment(date).isBetween(filterDate[0], filterDate[1], \"day\", \"[]\") : true\n}\n\nconst getTwoDateBeetweenTwoFilter = (one, two, filterDate) => {\n  return filterDate && filterDate.length > 0\n    ? moment(one).isBetween(filterDate[0], filterDate[1], \"day\", \"[]\") ||\n        moment(two).isBetween(filterDate[0], filterDate[1], \"day\", \"[]\")\n    : true\n}\n\nconst specialFilterByNested = (wordsObj, filter, nested) => {\n  let result = true\n  const words = []\n  if (wordsObj) {\n    wordsObj.map((word) => words.push(word[nested]))\n  }\n\n  if (filter && filter.length > 0) {\n    if (words) {\n      filter.map((one) => {\n        if (!words.includes(one)) {\n          result = false\n        }\n      })\n    } else {\n      result = false\n    }\n  }\n  return result\n}\n\nconst specialFilterByNestedExternal = (wordsObj, filter, nested, external) => {\n  let result = true\n  const words = []\n  if (wordsObj) {\n    wordsObj.map((word) => words.push(word[nested]))\n  }\n\n  if (filter && filter.length > 0) {\n    if (words) {\n      external.map((couple) => {\n        let flag = false\n        couple.map((one) => {\n          if (words.includes(one)) {\n            flag = true\n          }\n        })\n        if (flag === false) {\n          result = false\n        }\n      })\n    } else {\n      result = false\n    }\n  }\n  return result\n}\n\nexport {\n  stringSimplfier,\n  getStrByFilter,\n  getOneByFilterMany,\n  getDateBeetweenTwoFilter,\n  getManyByFilterMany,\n  specialFilterByNested,\n  specialFilterByNestedExternal,\n  getTwoDateBeetweenTwoFilter,\n}\n","import React, { useState, useEffect } from \"react\"\nimport { Card, Divider, Button, Space, Form, Input, Col, Row, DatePicker, Select } from \"antd\"\nimport { FilterFilled, FilterOutlined, UndoOutlined } from \"@ant-design/icons\"\nimport { stringSimplfier } from \"../utils/fitler\"\nimport { dateFormat } from \"../utils/formatUtils\"\n\n// eslint-disable-next-line no-unused-vars\nexport default function Filter({ isDocument, OnFilter, loading, metadata, style, dataFilter, filter, OnReset, keywords }) {\n  const [hide, setHide] = useState(true)\n  const [isFiltered, setIsFiltered] = useState(filter !== undefined)\n  const [tags, setTags] = useState([])\n  const [form] = Form.useForm()\n  const [metadataList, setMetadataList] = useState([])\n  const { Option } = Select\n  const { RangePicker } = DatePicker\n  const safeFilter = filter || {}\n\n  const onFinish = (values) => {\n    OnFilter({ ...values, tags })\n  }\n\n  useEffect(() => {\n    if (metadata) {\n      const list = []\n      Object.keys(metadata).map((category) => {\n        if (category !== \"documentsTypes\") {\n          metadata[category].map((item) => list.push(item))\n        }\n      })\n      setMetadataList(list.sort((a, b) => a.value.trim().localeCompare(b.value.trim())))\n    }\n  }, [metadata])\n\n  return (\n    <div style={style}>\n      <Space>\n        <Button\n          type=\"primary\"\n          className=\"classic-button\"\n          ghost={hide}\n          icon={hide ? <FilterOutlined /> : <FilterFilled />}\n          onClick={() => {\n            setHide(!hide)\n          }}\n          style={{ width: \"180px\" }}\n        >\n          {hide ? \" Montrer les filtres\" : \"Cacher les filtres\"}\n        </Button>\n        <Button\n          type=\"primary\"\n          className=\"classic-button\"\n          icon={<UndoOutlined />}\n          onClick={() => {\n            OnReset()\n            setTags([])\n            setIsFiltered(false)\n            OnFilter(undefined)\n            setTimeout(() => {\n              form.resetFields()\n            }, 5)\n          }}\n          disabled={!isFiltered}\n        >\n          Réinitialiser les filtres\n        </Button>\n      </Space>\n      {!hide && (\n        <>\n          <Card title={<span style={{ color: \"var(--dia-blue)\", paddingLeft: 10 }}>Filtres</span>}>\n            <Form\n              labelCol={{ span: 24 }}\n              wrapperCol={{ span: 24 }}\n              labelAlign=\"left\"\n              form={form}\n              onFinish={onFinish}\n              onValuesChange={() => setIsFiltered(true)}\n              initialValues={undefined}\n            >\n              {isDocument ? (\n                <>\n                  <Row>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"contract_name\" label=\"Par nom d'affaire\" initialValue={safeFilter.contract_name}>\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"name\" label=\"Par nom de document\" initialValue={safeFilter.name}>\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"domain\" label=\"Par domaine\" initialValue={safeFilter.domain}>\n                        <Select showSearch allowClear>\n                          <Option value=\"C\">Client</Option>\n                          <Option value=\"F\">Fournisseur</Option>\n                          <Option value=\"P\">Partenaire</Option>\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"type\" label=\"Par type de document\" initialValue={safeFilter.type}>\n                        <Select\n                          showSearch\n                          allowClear\n                          filterOption={(inputValue, option) =>\n                            stringSimplfier(\n                              metadata.documentsTypes.find((obj) => obj.document_type_id === option.value).value\n                            ).includes(stringSimplfier(inputValue))\n                          }\n                        >\n                          {metadata &&\n                            metadata.documentsTypes &&\n                            metadata.documentsTypes.map((obj) => <Option value={obj.document_type_id}>{obj.value}</Option>)}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"date\" label=\"Par date du document\" initialValue={safeFilter.date}>\n                        <RangePicker format={dateFormat} style={{ width: \"100%\" }} />\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"creationDate\" label=\"Par date de création\" initialValue={safeFilter.creationDate}>\n                        <RangePicker format={dateFormat} style={{ width: \"100%\" }} />\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"customer\" label=\"Par client\" initialValue={safeFilter.customer}>\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"extension\" label=\"Par extension\" initialValue={safeFilter.extension}>\n                        <Select showSearch allowClear>\n                          <Option value=\"docx\">docx</Option>\n                          <Option value=\"xlsx\">xlsx</Option>\n                          <Option value=\"pptx\">pptx</Option>\n                          <Option value=\"pdf\">pdf</Option>\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"metadata\" label=\"Par metadata\" initialValue={safeFilter.metadata}>\n                        <Select\n                          mode=\"multiple\"\n                          filterOption={(inputValue, option) =>\n                            stringSimplfier(metadataList.find((obj) => obj.metadata_id === option.value).value).includes(\n                              stringSimplfier(inputValue)\n                            )\n                          }\n                        >\n                          {metadataList.map((obj) => (\n                            <Option value={obj.metadata_id}>{obj.value}</Option>\n                          ))}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"keywords\" label=\"Par mot clé\" initialValue={safeFilter.keywords}>\n                        <Select mode=\"mutliple\" showSearch allowClear>\n                          {keywords.map((word) => (\n                            <Option value={[word]}>{word}</Option>\n                          ))}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </>\n              ) : (\n                <>\n                  <Row>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"contract_id\" label=\"Par ID d'affaire\" initialValue={safeFilter.contract_id}>\n                        <Input />\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"company\" label=\"Par entreprise\" initialValue={safeFilter.company}>\n                        <Select showSearch allowClear>\n                          {dataFilter.company.map((obj) => (\n                            <Option value={obj}>{obj}</Option>\n                          ))}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"date\" label=\"Par date\" initialValue={safeFilter.date}>\n                        <RangePicker format={dateFormat} style={{ width: \"100%\" }} />\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item\n                        name=\"affected_commercials\"\n                        label=\"Par commerciaux affectés\"\n                        initialValue={safeFilter.affected_commercials}\n                      >\n                        <Select\n                          mode=\"multiple\"\n                          filterOption={(inputValue, option) =>\n                            stringSimplfier(\n                              dataFilter.commercials.find((obj) => obj.employeeId === option.value).fullName\n                            ).includes(stringSimplfier(inputValue))\n                          }\n                        >\n                          {dataFilter.commercials.map((obj) => (\n                            <Option value={obj.employeeId}>{obj.fullName}</Option>\n                          ))}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item\n                        name=\"affected_project_managers\"\n                        label=\"Par chefs de projet affectés\"\n                        initialValue={safeFilter.affected_project_managers}\n                      >\n                        <Select\n                          mode=\"multiple\"\n                          filterOption={(inputValue, option) =>\n                            stringSimplfier(option.value).includes(stringSimplfier(inputValue))\n                          }\n                        >\n                          {dataFilter.projectManagers.map((obj) => (\n                            <Option value={obj.fullName}>{obj.fullName}</Option>\n                          ))}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                    <Col md={{ span: 24 }} lg={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <Form.Item name=\"creator\" label=\"Par créateur\" initialValue={safeFilter.creator}>\n                        <Select showSearch allowClear>\n                          {dataFilter.creator.map((obj) => (\n                            <Option value={obj}>{obj}</Option>\n                          ))}\n                        </Select>\n                      </Form.Item>\n                    </Col>\n                  </Row>\n                </>\n              )}\n            </Form>\n            <Button\n              style={{ marginLeft: \"10px\" }}\n              loading={loading}\n              type=\"primary\"\n              icon={<FilterFilled />}\n              onClick={() => {\n                form.submit()\n              }}\n              disabled={!isFiltered}\n            >\n              Filtrer\n            </Button>\n          </Card>\n          <Divider />\n        </>\n      )}\n    </div>\n  )\n}\n","import { getKeyById, getListValueByID } from \"./metadata\"\n\nconst exportToCSVContracts = (contracts) => {\n  let csv = \"\"\n  csv +=\n    \"contract_id;title;customer_name;affected_commercials;affected_project_managers;company;begin_date;end_date;billing_date;status;creator\\n\"\n  contracts.map((contract) => {\n    csv += `\"${contract.contract_id}\";`\n    csv += `\"${contract.title}\";`\n    csv += `\"${contract.customer_name}\";`\n\n    if (contract.affected_commercials.length > 0) {\n      let affectedCommercials = \"\"\n      contract.affected_commercials.map((item) => {\n        affectedCommercials += `${item.fullName},`\n      })\n      csv += `[${affectedCommercials.slice(0, -1)}];`\n    } else {\n      csv += \"[];\"\n    }\n\n    if (contract.affected_project_managers != null && contract.affected_project_managers.length > 0) {\n      let affectedProjectManagers = \"\"\n      contract.affected_project_managers.map((item) => {\n        affectedProjectManagers += `${item.fullName},`\n      })\n      csv += `[${affectedProjectManagers.slice(0, -1)}];`\n    } else {\n      csv += \"[];\"\n    }\n\n    csv += `\"${contract.company}\";`\n    csv += `\"${contract.begin_date}\";`\n    csv += `\"${contract.end_date}\";`\n    csv += `\"${contract.billing_date}\";`\n    csv += `\"${contract.status}\";`\n    csv += `\"${contract.creator}\"\\n`\n  })\n\n  const BOM = new Uint8Array([0xef, 0xbb, 0xbf])\n  const blob = new Blob([BOM, csv], { encoding: \"UTF-8\", type: \"text/csv;charset=UTF-8\" })\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, \"affaires.csv\")\n  } else {\n    const link = document.createElement(\"a\")\n    if (link.download !== undefined) {\n      // feature detection\n      // Browsers that support HTML5 download attribute\n      const url = URL.createObjectURL(blob)\n      link.setAttribute(\"href\", url)\n      link.setAttribute(\"download\", \"affaires.csv\")\n      link.style.visibility = \"hidden\"\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    }\n  }\n}\n\nconst exportToCSVDocument = (documents, type, metadata) => {\n  let csv = \"\"\n  csv +=\n    \"contract_id;contract_name;name;domain;type;year;date;version;sequentialNumber;extension;projectName;creator;creationDate;summary;metadata;keywords;document_id\\n\"\n  documents.map((document) => {\n    csv += `\"${document.contract_id}\";`\n    csv += `\"${document.contract_name}\";`\n    csv += `\"${document.name}\";`\n    csv += `\"${document.domain}\";`\n    csv += `\"${getKeyById(type, document.type)}\";`\n    csv += `${document.year};`\n    csv += `\"${document.date}\";`\n    csv += `\"${document.version}\";`\n    csv += `${document.sequentialNumber};`\n    csv += `\"${document.extension}\";`\n    csv += `\"${document.projectName}\";`\n    csv += `\"${document.creator}\";`\n    csv += `\"${document.creationDate}\";`\n    csv += `\"${document.summary}\";`\n    csv += `[${getListValueByID(document.metadata, metadata)}];`\n    csv += `[${document.keywords}];`\n    csv += `\"${document.document_id}\"\\n`\n  })\n\n  const BOM = new Uint8Array([0xef, 0xbb, 0xbf])\n  const blob = new Blob([BOM, csv], { encoding: \"UTF-8\", type: \"text/csv;charset=UTF-8\" })\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, \"documents.csv\")\n  } else {\n    const link = document.createElement(\"a\")\n    if (link.download !== undefined) {\n      // feature detection\n      // Browsers that support HTML5 download attribute\n      const url = URL.createObjectURL(blob)\n      link.setAttribute(\"href\", url)\n      link.setAttribute(\"download\", \"documents.csv\")\n      link.style.visibility = \"hidden\"\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    }\n  }\n}\n\nexport { exportToCSVDocument, exportToCSVContracts }\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { connect, useDispatch } from \"react-redux\"\nimport { Button, Alert, message, Space, Row, Col, Divider } from \"antd\"\nimport ListContracts from \"../components/ListContracts\"\nimport Filter from \"../components/Filter\"\nimport {\n  addBreadcrumb,\n  update,\n  setLoading,\n  setNavbar,\n  setLoadingDatabase,\n  updateAllContracts,\n  updateFilterContract,\n} from \"../redux/actions\"\nimport { exportToCSVContracts } from \"../utils/exportUtils\"\nimport {\n  getStrByFilter,\n  specialFilterByNested,\n  specialFilterByNestedExternal,\n  getTwoDateBeetweenTwoFilter,\n} from \"../utils/fitler\"\n\nimport { getIdByContract } from \"../utils/formatUtils\"\n\nfunction ContractsPage({ loading, contracts, loadingDatabase, filter }) {\n  const dispatch = useDispatch()\n  const [contractFiltered, setContractFiltered] = useState([])\n\n  useEffect(() => {\n    dispatch(setNavbar(\"contracts\"))\n    dispatch(\n      addBreadcrumb({\n        reset: true,\n        data: [{ name: \"Affaires\", href: \"/contracts\" }],\n      })\n    )\n  }, [dispatch])\n\n  useEffect(() => {\n    if (contracts.data && filter) {\n      const listIdProjectManager = []\n      if (filter.affected_project_managers) {\n        filter.affected_project_managers.map((str) =>\n          listIdProjectManager.push([...contracts.filter.projectManagers.find((item) => item.fullName === str).employeeId])\n        )\n      }\n      setContractFiltered(\n        contracts.data.filter(\n          (contract) =>\n            // contract_id\n            getStrByFilter(getIdByContract(contract.title, \"\"), filter.contract_id) &&\n            // company\n            getStrByFilter(contract.company, filter.company) &&\n            // affected_commercials > spéciale\n            specialFilterByNested(contract.affected_commercials, filter.affected_commercials, \"employeeId\") &&\n            // affected_project_managers > spéciale\n            specialFilterByNestedExternal(\n              contract.affected_project_managers,\n              filter.affected_project_managers,\n              \"employeeId\",\n              listIdProjectManager\n            ) &&\n            // creator\n            getStrByFilter(contract.creator, filter.creator) &&\n            // date > spéciale\n            getTwoDateBeetweenTwoFilter(contract.begin_date, contract.end_date, filter.date)\n        )\n      )\n    } else {\n      setContractFiltered(contracts.data)\n    }\n  }, [filter, contracts])\n\n  return (\n    <div className=\"contracts-page\">\n      <Helmet>\n        <title>Affaires</title>\n      </Helmet>\n      <Space style={{ marginLeft: \"10px\" }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            exportToCSVContracts(contracts.data)\n          }}\n          className=\"classic-button\"\n          loading={loading}\n        >\n          Exporter les affaires\n        </Button>\n      </Space>\n      <Space style={{ paddingRight: \"10px\", float: \"right\" }}>\n        <Button\n          onClick={() => {\n            dispatch(setLoading(true))\n            dispatch(updateAllContracts())\n          }}\n          className=\"classic-button\"\n          loading={loading}\n        >\n          Actualiser les affaires\n        </Button>\n        <Button\n          onClick={() => {\n            dispatch(setLoadingDatabase(true))\n            dispatch(update())\n            message.warning(\"L'actualisation de la base de données peut prendre plusieurs minutes.\")\n          }}\n          className=\"classic-button\"\n          loading={loadingDatabase}\n        >\n          Actualiser les données en base\n        </Button>\n      </Space>\n\n      <Divider />\n      <Filter\n        OnFilter={(values) => dispatch(updateFilterContract(values))}\n        loading={loading}\n        style={{ marginLeft: \"10px\" }}\n        dataFilter={contracts.filter}\n        filter={filter}\n        OnReset={() => dispatch(updateFilterContract(undefined))}\n      />\n\n      <Row style={{ marginLeft: \"10px\", marginTop: \"10px\" }}>\n        <Col span={24}>\n          <ListContracts contracts={contractFiltered} loading={loading} size={12} />\n        </Col>\n      </Row>\n      {contracts.error !== \"\" && (\n        <Alert\n          style={{ marginTop: \"10px\" }}\n          message=\"Erreur de chargement des données\"\n          description={contracts.error}\n          type=\"error\"\n        />\n      )}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contracts: state.contracts,\n    loading: state.loading,\n    loadingDatabase: state.loadingDatabase,\n    filter: state.filter.contract,\n    keywords: state.keywords\n  }\n}\n\nexport default connect(mapStateToProps, {\n  addBreadcrumb,\n  setLoading,\n  setNavbar,\n  setLoadingDatabase,\n  updateAllContracts,\n  updateFilterContract,\n})(ContractsPage)\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { connect, useDispatch } from \"react-redux\"\nimport { Button, Alert, Space, message, Col, Row, Divider } from \"antd\"\nimport { navigate } from \"@reach/router\"\nimport ListDocuments from \"../components/ListDocuments\"\nimport Filter from \"../components/Filter\"\nimport {\n  addBreadcrumb,\n  update,\n  setLoading,\n  deleteDocument,\n  setNavbar,\n  setLoadingDatabase,\n  updateAllDocuments,\n  updateAllMetadata,\n  updateFilterDocument,\n} from \"../redux/actions\"\nimport { exportToCSVDocument } from \"../utils/exportUtils\"\nimport { getStrByFilter, getDateBeetweenTwoFilter, getManyByFilterMany } from \"../utils/fitler\"\n\nfunction DocumentsPage({ documents, loading, loadingDatabase, metadata, filter, documentTypes, keywords}) {\n  const dispatch = useDispatch()\n\n  const [documentFiltered, setDocumentFiltered] = useState([])\n\n  useEffect(() => {\n    dispatch(setNavbar(\"documents\"))\n    dispatch(\n      addBreadcrumb({\n        reset: true,\n        data: [{ name: \"Documents\", href: \"/documents\" }],\n      })\n    )\n  }, [dispatch])\n\n  useEffect(() => {\n    if (documents.data && filter) {\n      setDocumentFiltered(\n        documents.data.filter((document) => {\n          return (\n            // contract_name\n            getStrByFilter(document.contract_name, filter.contract_name) &&\n            // name\n            getStrByFilter(document.name, filter.name) &&\n            // domain\n            getStrByFilter(document.domain, filter.domain) &&\n            // type\n            getStrByFilter(document.type, filter.type) &&\n            // date\n            getDateBeetweenTwoFilter(document.date, filter.date) &&\n            // creationDate\n            getDateBeetweenTwoFilter(document.creationDate, filter.creationDate) &&\n            // extension\n            getStrByFilter(document.extension, filter.extension) &&\n            // tags\n            getManyByFilterMany(document.keywords, filter.keywords) &&\n            // metadata\n            getManyByFilterMany(document.metadata, filter.metadata) &&\n            // customer\n            getStrByFilter(document.customer, filter.customer)\n\n\n          )\n        })\n      )\n    } else {\n      setDocumentFiltered(documents.data)\n    }\n  }, [filter, documents])\n\n  return (\n    <div>\n      <Helmet>\n        <title>Documents</title>\n      </Helmet>\n      <Space style={{ paddingLeft: 10 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            exportToCSVDocument(documents.data, documentTypes, metadata)\n          }}\n          className=\"classic-button\"\n          loading={loading}\n        >\n          Exporter les documents\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            navigate(\"/documents/create\")\n          }}\n          className=\"classic-button\"\n          loading={loading}\n        >\n          Nouveau\n        </Button>\n      </Space>\n      <Space style={{ paddingRight: \"10px\", float: \"right\" }}>\n        <Button\n          onClick={() => {\n            dispatch(setLoading(true))\n            dispatch(updateAllDocuments())\n          }}\n          className=\"classic-button\"\n          loading={loading}\n        >\n          Actualiser les documents\n        </Button>\n        <Button\n          onClick={() => {\n            dispatch(setLoading(true))\n            dispatch(updateAllMetadata())\n          }}\n          className=\"classic-button\"\n          loading={loading}\n        >\n          Actualiser les metadata\n        </Button>\n        <Button\n          onClick={() => {\n            dispatch(setLoadingDatabase(true))\n            dispatch(update())\n            message.warning(\"L'actualisation de la base de données peut prendre plusieurs minutes.\")\n          }}\n          className=\"classic-button\"\n          loading={loadingDatabase}\n        >\n          Actualiser les données en base\n        </Button>\n      </Space>\n\n      <Divider />\n      <Filter\n        isDocument\n        OnFilter={(values) => dispatch(updateFilterDocument(values))}\n        loading={loading}\n        metadata={metadata}\n        style={{ marginLeft: \"10px\" }}\n        filter={filter}\n        OnReset={() => dispatch(updateFilterDocument(undefined))}\n        keywords={keywords}\n      />\n      <Row style={{ marginLeft: \"10px\", marginTop: \"10px\" }}>\n        <Col span={24}>\n          <ListDocuments documents={documentFiltered} size={12} loading={loading} documentsTypes={documentTypes} />\n        </Col>\n      </Row>\n\n      {documents.error !== \"\" && (\n        <Alert\n          style={{ marginTop: \"10px\" }}\n          message=\"Erreur de chargement des données\"\n          description={documents.error}\n          type=\"error\"\n        />\n      )}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    documents: state.documents,\n    loading: state.loading,\n    loadingDatabase: state.loadingDatabase,\n    metadata: { ...state.metadata.others, documentsTypes: state.metadata.documentsTypes },\n    documentTypes: state.metadata.documentsTypes,\n    filter: state.filter.document,\n    keywords: state.keywords.data\n  }\n}\n\nexport default connect(mapStateToProps, {\n  addBreadcrumb,\n  update,\n  setLoading,\n  deleteDocument,\n  setNavbar,\n  setLoadingDatabase,\n  updateAllDocuments,\n  updateAllMetadata,\n  updateFilterDocument,\n})(DocumentsPage)\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\n\nfunction NotFoundPage() {\n  return (\n    <div>\n      <Helmet>\n        <title>Not Found Page</title>\n      </Helmet>\n      <h1>Ooops, route not found.</h1>\n    </div>\n  )\n}\n\nexport default NotFoundPage\n","import React from \"react\"\nimport { Tag } from \"antd\"\n\nexport default function TagList({ data }) {\n  if (data && data.length > 0) {\n    return data.map((element) => (\n      <Tag\n        key={Math.random()\n          .toString(36)\n          .replace(/[^a-z]+/g, \"\")\n          .substr(0, 10)}\n      >\n        {element}\n      </Tag>\n    ))\n  }\n  return (\n    <span>\n      <i>Vide pour le moment</i>\n    </span>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/Icon-Bial-R.b5ccc2da.png\";","export default __webpack_public_path__ + \"static/media/Icon-Bial-X_2019.4be5fa8c.png\";","/* ########################################################### */\n/* ##                       Contract                           */\n/* ########################################################### */\n\nexport const getContract = (id) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}contracts/${id}`)\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\"Le contrat n'existe pas ou plus\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\n/* ########################################################### */\n/* ##                       Document                           */\n/* ########################################################### */\n\nexport const getDocument = (id) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}documents/${id}`)\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\"Le document n'existe pas ou plus\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const getDocumentsAssociated = (id) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}documents/associated/${id}`)\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\"Le document n'existe pas ou plus\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const addDocumentInBase = (doc) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}documents`, {\n      method: \"POST\",\n      body: doc,\n    })\n      .then((response) => {\n        if (response.status !== 201) {\n          throw new Error(\"Le document n'as pas été inséré\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const updateDocumentInBase = (doc) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}documents/${doc.document_id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(doc),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Le document n'as pas été modifié\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const getDocumentsByContract = (id) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}documents/byContract/${id}`)\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\"Le contrat n'existe pas ou plus\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const deleteDocumentInBase = (id) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}documents/${id}`)\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\"Le document n'as pas été supprimé\")\n        }\n        return response.json()\n      })\n      .then(() => {\n        resolve(id)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\n/* ########################################################### */\n/* ##                       Metadata                           */\n/* ########################################################### */\n\nexport const addMetadata = (data) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}metadata`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        if (response.status !== 201) {\n          throw new Error(\"La metadata n'as pas été insérée\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const updateMetadata = (id, data) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}metadata/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"La metadata n'as pas été modifié\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const deleteMetadata = (id) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}metadata/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\"La metadata n'as pas été supprimé\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const updateMetadataGroup = (group, newGroup) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}metadata/update_group?group=${group}&newGroup=${newGroup}`, {\n      method: \"PUT\",\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Le groupe n'as pas été modifié\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const deleteMetadataGroup = (group) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}metadata/delete_group/${group}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\"Le groupe n'as pas été supprimé\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\n/* ########################################################### */\n/* ##                    Document type                         */\n/* ########################################################### */\n\nexport const addDocumentType = (data) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}documentsTypes`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        if (response.status !== 201) {\n          throw new Error(\"La metadata n'as pas été insérée\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const updateDocumentType = (id, data) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}documentsTypes/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(data),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"La metadata n'as pas été modifié\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n\nexport const deleteDocumentType = (id) => {\n  return new Promise((resolve, reject) => {\n    fetch(`${process.env.REACT_APP_API_PATH}documentsTypes/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error(\"La metadata n'as pas été supprimé\")\n        }\n        return response.json()\n      })\n      .then((response) => {\n        resolve(response)\n      })\n      .catch((err) => {\n        reject(Error(`An error has occured: ${err.toString()}`))\n      })\n  })\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { connect, useDispatch } from \"react-redux\"\nimport { List, Timeline, Alert, Row, Col, Card, Divider, Space, Button } from \"antd\"\nimport { ClockCircleOutlined, SyncOutlined, CheckCircleOutlined } from \"@ant-design/icons\"\nimport { navigate } from \"@reach/router\"\nimport { addBreadcrumb, setLoading, setNavbar, setMetadatasFromDocuments} from \"../redux/actions\"\nimport ListDocuments from \"../components/ListDocuments\"\nimport TagList from \"../components/TagList\"\nimport logoR from \"../assets/Icon-Bial-R.png\"\nimport logoX from \"../assets/Icon-Bial-X_2019.png\"\nimport StatusIcon from \"../components/StatusIcon\"\nimport { getDate } from \"../utils/formatUtils\"\nimport { getContract, getDocumentsByContract } from \"../utils/currentRequest\"\nimport { getMetadataByID } from \"../utils/metadata\"\n\nfunction ContractDetailPage({ id, loading, documentsTypes, metadata}) {\n  const dispatch = useDispatch()\n  const [contract, setContract] = useState(null)\n  const [error, setError] = useState(\"\")\n  const [documents, setDocuments] = useState([])\n\n  const metadataMapped = getMetadataByID(contract ? contract.metadata : [], metadata)\n\n  useEffect(() => {\n    dispatch(setNavbar(\"contracts\"))\n    dispatch(setLoading(true))\n    getDocumentsByContract(id)\n      .then((response) => {\n        setDocuments(response)\n        return getContract(id)\n      })\n      .then((response) => {\n        setContract(response)\n        dispatch(\n          addBreadcrumb({\n            reset: true,\n            data: [\n              { name: \"Affaires\", href: \"/contracts\" },\n              {\n                name: response.title.split(\"-\")[0].split(\"_\")[0],\n                href: `/contracts/${response.contract_id}`,\n              },\n            ],\n          })\n        )\n        dispatch(setLoading(false))\n      })\n      .catch((err) => {\n        setError(err.message)\n        dispatch(setLoading(false))\n      })\n  }, [dispatch, id])\n\n  if (loading) {\n    return (\n      <div>\n        <Helmet>\n          <title>loading...</title>\n        </Helmet>\n        <SyncOutlined\n          spin\n          style={{\n            fontSize: \"20px\",\n          }}\n        />\n      </div>\n    )\n  }\n  if (error !== \"\" || !contract) {\n    return (\n      <div>\n        <Helmet>\n          <title>Erreur</title>\n        </Helmet>\n        <Alert\n          style={{ marginTop: \"10px\" }}\n          message=\"Erreur de chargement des données\"\n          description={\n            <div>\n              <span>Impossible de récuperer le contrat.</span>\n              <br />\n              <span>\n                <b>Message d&apos;erreur : </b>\n                {error}\n              </span>\n            </div>\n          }\n          type=\"error\"\n        />\n      </div>\n    )\n  }\n  return (\n    <div>\n      <Helmet>\n        <title>{contract.title}</title>\n      </Helmet>\n      <div className=\"contract-detail\">\n        <Row>\n          <Col xs={24}>\n            <h1 className=\"titre\">\n              {contract.company === \"BIAL-X\" ? (\n                <img className=\"logo-contract-detail\" src={logoX} alt=\"logo-bial-r\" />\n              ) : (\n                <img className=\"logo-contract-detail\" src={logoR} alt=\"logo-bial-x\" />\n              )}\n              {contract.title}\n            </h1>\n            <Divider />\n          </Col>\n          <Space style={{ paddingLeft: 10 }}>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                navigate(\"/contracts\")\n              }}\n              className=\"classic-button\"\n              loading={loading}\n            >\n              Retour\n            </Button>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                navigate(`/documents/create-for-contract/${contract.contract_id}`)\n              }}\n              className=\"classic-button\"\n              loading={loading}\n            >\n              Créer un document\n            </Button>\n\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                dispatch(setMetadatasFromDocuments(contract.contract_id))\n              }}\n              className=\"classic-button\"\n              loading={loading}\n            >\n              Importer les métadatas\n            </Button>\n          </Space>\n        </Row>\n\n        <Row>\n          <Col xs={{ span: 24 }} lg={{ span: 12 }} style={{ padding: 10 }}>\n            <Card title=\"Informations générales\">\n              <p>\n                <b>Client </b>: {contract.customer_name}\n              </p>\n              <p>\n                <b>Createur </b>: {contract.creator}\n              </p>\n              <p>\n                <b>Statut </b>: {contract.status} <StatusIcon status={contract.status} />\n              </p>\n              <p>\n                <b>Jours effectués </b>: {contract.total_days ? contract.total_days : 0}\n              </p>\n              <p>\n                <b>Vente totale </b>: {contract.total_charges ? contract.total_charges : 0}\n              </p>\n            </Card>\n          </Col>\n          <Col xs={{ span: 24 }} lg={{ span: 12 }} style={{ padding: 10 }}>\n            <Card title=\"Dates importantes\">\n              <Timeline>\n                {contract.begin_date === null ? (\n                  <Timeline.Item dot={<ClockCircleOutlined style={{ fontSize: \"1.2em\" }} />} color=\"red\">\n                    <b>Début inconnue</b>\n                  </Timeline.Item>\n                ) : (\n                  <Timeline.Item dot={<CheckCircleOutlined style={{ fontSize: \"1.2em\" }} />}>\n                    <b>Début</b> : {getDate(contract.begin_date)}\n                  </Timeline.Item>\n                )}\n                {contract.end_date === null ? (\n                  <Timeline.Item dot={<ClockCircleOutlined style={{ fontSize: \"1.2em\" }} />} color=\"red\">\n                    <b>Fin inconnue</b>\n                  </Timeline.Item>\n                ) : (\n                  <Timeline.Item dot={<CheckCircleOutlined style={{ fontSize: \"1.2em\" }} />}>\n                    <b>Fin</b> : {getDate(contract.end_date)}\n                  </Timeline.Item>\n                )}\n                {contract.billing_date === null ? (\n                  <Timeline.Item dot={<ClockCircleOutlined style={{ fontSize: \"1.2em\" }} />} color=\"red\">\n                    <b>Paiement inconnue</b>\n                  </Timeline.Item>\n                ) : (\n                  <Timeline.Item dot={<CheckCircleOutlined style={{ fontSize: \"1.2em\" }} />}>\n                    <b>Paiement</b> : {getDate(contract.billing_date)}\n                  </Timeline.Item>\n                )}\n              </Timeline>\n            </Card>\n          </Col>\n          <Col xs={{ span: 24 }} md={{ span: 12 }} style={{ padding: 10 }}>\n            <List\n              header={<span>Commerciaux</span>}\n              bordered\n              dataSource={\n                !contract.affected_commercials || contract.affected_commercials.length === 0\n                  ? [{ fullName: \"Aucun commerciaux affecté\" }]\n                  : contract.affected_commercials\n              }\n              renderItem={(item) => <List.Item>{item.fullName}</List.Item>}\n            />\n          </Col>\n          <Col xs={{ span: 24 }} md={{ span: 12 }} style={{ padding: 10 }}>\n            <List\n              header={<span>Chefs de projet</span>}\n              bordered\n              dataSource={\n                !contract.affected_project_managers || contract.affected_project_managers.length === 0\n                  ? [{ fullName: \"Aucun chef de projet affecté\" }]\n                  : contract.affected_project_managers\n              }\n              renderItem={(item) => <List.Item>{item.fullName}</List.Item>}\n            />\n          </Col>\n          <Col span={24} style={{ padding: 10 }}>\n                <Card title=\"Métadonnées associées \">\n                  <Row>\n                    {metadataMapped &&\n                      Object.keys(metadataMapped).map((key) => (\n                        <Col xs={{ span: 24 }} md={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                          <p>\n                            <b>{key} </b>: <TagList data={metadataMapped[key].list} />\n                          </p>\n                        </Col>\n                      ))}\n                  </Row>\n                </Card>\n              </Col>\n          <Col span={24} style={{ padding: 10 }}>\n            <ListDocuments\n              documents={documents}\n              title=\"Documents associés\"\n              size={12}\n              loading={loading}\n              documentsTypes={documentsTypes}\n            />\n          </Col>\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return { loading: state.loading, \n    documentsTypes: state.metadata.documentsTypes , \n    metadata: state.metadata.others,}\n}\n\nexport default connect(mapStateToProps, { addBreadcrumb, setLoading, setNavbar, setMetadatasFromDocuments})(ContractDetailPage)\n","export default __webpack_public_path__ + \"static/media/logo.05dba466.png\";","import React, { useEffect, useState } from \"react\"\nimport { Layout, Menu, Breadcrumb, Row, Col, message, ConfigProvider } from \"antd\"\nimport locale from \"antd/lib/locale/fr_FR\"\nimport { AuditOutlined, FileOutlined, SyncOutlined, ControlOutlined } from \"@ant-design/icons\"\nimport { connect, useDispatch } from \"react-redux\"\nimport { Link } from \"@reach/router\"\nimport { setNavbar, setLoading, initAll } from \"../redux/actions\"\nimport logo from \"../assets/logo.png\"\n\nconst { Header, Footer, Content } = Layout\n\nfunction Skeleton({ breadcrumb, loading, loadingDatabase, children, updateTime, navbar }) {\n  const dispatch = useDispatch()\n  const [messageInfo, setMessageInfo] = useState(false)\n\n  useEffect(() => {\n    if (!loadingDatabase && messageInfo) {\n      message.info(\"Mise à jour en base réussi, nous mettons à jour les données locales\")\n      dispatch(setLoading(true))\n      dispatch(initAll())\n      setMessageInfo(false)\n    }\n\n    if (loadingDatabase) {\n      setMessageInfo(true)\n    }\n  }, [dispatch, loadingDatabase, messageInfo])\n\n  return (\n    <div>\n      <Layout className=\"layout\">\n        <Header className=\"header ant-layout-header-custom\">\n          <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\n            <Col\n              xs={{ span: 11, offset: 1 }}\n              sm={{ span: 7, offset: 7 }}\n              md={{ span: 7, offset: 6 }}\n              lg={{ span: 8, offset: 4 }}\n              xl={{ span: 9, offset: 4 }}\n            >\n              <div className=\"header-title\">\n                <Link\n                  className=\"header-title_font_family\"\n                  to=\"/\"\n                  onClick={() => {\n                    dispatch(setNavbar(\"\"))\n                  }}\n                >\n                  Gestion documentaire{\" \"}\n                </Link>\n              </div>\n            </Col>\n            <Col xs={{ span: 12 }} sm={{ span: 10 }} md={{ span: 11 }} lg={{ span: 10 }} xl={{ span: 11 }}>\n              <Row type=\"flex\" justify=\"end\">\n                <Menu\n                  mode=\"horizontal\"\n                  theme=\"dark\"\n                  className=\"header-menu\"\n                  selectedKeys={navbar}\n                  onSelect={(e) => {\n                    dispatch(setNavbar(e.key))\n                  }}\n                >\n                  <Menu.Item key=\"contracts\">\n                    <Link to=\"/contracts\">\n                      <AuditOutlined\n                        style={{\n                          fontSize: \"20px\",\n                          margin: \"0px\",\n                          top: \"3px\",\n                          position: \"relative\",\n                        }}\n                      />\n                      &nbsp;Affaires\n                    </Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"documents\">\n                    <Link to=\"/documents\">\n                      <FileOutlined\n                        style={{\n                          fontSize: \"20px\",\n                          margin: \"0px\",\n                          top: \"3px\",\n                          position: \"relative\",\n                        }}\n                      />\n                      &nbsp;Documents\n                    </Link>\n                  </Menu.Item>\n                  <Menu.Item key=\"metadata\">\n                    <Link to=\"/metadata\">\n                      <ControlOutlined\n                        style={{\n                          fontSize: \"20px\",\n                          margin: \"0px\",\n                          top: \"3px\",\n                          position: \"relative\",\n                        }}\n                      />\n                      &nbsp;Metadata\n                    </Link>\n                  </Menu.Item>\n                </Menu>\n              </Row>\n            </Col>\n          </Row>\n        </Header>\n        <Content>\n          <Row>\n            <Col\n              xs={{ span: 10, offset: 1 }}\n              sm={{ span: 12, offset: 7 }}\n              md={{ span: 13, offset: 6 }}\n              lg={{ span: 15, offset: 4 }}\n              xl={{ span: 15, offset: 4 }}\n            >\n              <Breadcrumb\n                style={{\n                  fontSize: \"18px\",\n                  marginTop: \"15px\",\n                  marginBottom: \"15px\",\n                }}\n              >\n                {breadcrumb.map((item) => (\n                  <Breadcrumb.Item key={item.name}>\n                    <Link to={item.href}>{item.name}</Link>\n                  </Breadcrumb.Item>\n                ))}\n              </Breadcrumb>\n            </Col>\n            <Col span={5}>\n              {loadingDatabase || (loading && updateTime === \"\") ? (\n                <div\n                  style={{\n                    marginTop: \"15px\",\n                    marginBottom: \"15px\",\n                    marginRight: \"50px\",\n                    textAlign: \"right\",\n                    display: \"block\",\n                  }}\n                >\n                  <SyncOutlined spin />\n                </div>\n              ) : (\n                <span\n                  style={{\n                    marginTop: \"15px\",\n                    marginBottom: \"15px\",\n                    marginRight: \"50px\",\n                    textAlign: \"right\",\n                    display: \"block\",\n                  }}\n                >\n                  MàJ: {updateTime || \"Dernière MAJ inconnue\"}\n                </span>\n              )}\n            </Col>\n          </Row>\n          <ConfigProvider locale={locale}>\n            <div className=\"site-layout-content\">{children}</div>\n          </ConfigProvider>\n        </Content>\n        <Footer\n          style={{\n            textAlign: \"center\",\n            background: \"#f8f9f9\",\n            fontSize: \"17px\",\n          }}\n        >\n          © 2021 Bial-X\n        </Footer>\n      </Layout>\n      <Link\n        to=\"/\"\n        onClick={() => {\n          dispatch(setNavbar(\"\"))\n        }}\n        style={{ height: \"0em\" }}\n      >\n        <img className=\"logo\" src={logo} alt=\"logo-DIA\" />\n      </Link>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    breadcrumb: state.breadcrumb,\n    loading: state.loading,\n    loadingDatabase: state.loadingDatabase,\n    updateTime: state.updateTime,\n    navbar: state.navbar,\n  }\n}\n\nexport default connect(mapStateToProps, { setLoading, setNavbar, initAll })(Skeleton)\n","import React, { useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { connect, useDispatch } from \"react-redux\"\nimport { Button, Table, Row, Col, Card, Space, Form, Input, Select, Popover, Alert, message, Modal } from \"antd\"\nimport { PlusOutlined, CloseOutlined, EditOutlined, DeleteOutlined, CheckOutlined, SettingOutlined } from \"@ant-design/icons\"\nimport { getColumnSearchProps } from \"../utils/tableUtils\"\nimport {\n  updateMetadata as updateMetadataInBase,\n  addMetadata as addMetadataInBase,\n  deleteMetadata as deleteMetadataInBase,\n  updateDocumentType,\n  addDocumentType,\n  deleteDocumentType,\n  updateMetadataGroup,\n  deleteMetadataGroup,\n} from \"../utils/currentRequest\"\nimport {\n  addBreadcrumb,\n  updateAllMetadata,\n  setLoading,\n  setNavbar,\n  updateMetadata,\n  deleteMetadata,\n  addMetadata,\n  setLoadingDatabase,\n  update,\n  deleteGroup,\n  editGroup,\n} from \"../redux/actions\"\n\nfunction MetadataPage({ metadata, documentsTypes, error, loadingDatabase, loading }) {\n  const dispatch = useDispatch()\n  const [isEditing, setIsEditing] = useState(undefined)\n  const [isDeleting, setIsDeleting] = useState(undefined)\n  const [isAdding, setIsAdding] = useState(undefined)\n  const [errorBase, setErrorBase] = useState(null)\n  const [modal, setModal] = useState(undefined)\n  const [modalAdd, setModalAdd] = useState(false)\n  const [popoverDeleteGroup, setPopoverDeleteGroup] = useState(false)\n  const [form] = Form.useForm()\n  const [formModal] = Form.useForm()\n  const [formModalAdd] = Form.useForm()\n  const { Option } = Select\n\n  const onAddGroup = (group) => {\n    addMetadataInBase({ group, value: \"nouveau\" })\n      .then((response) => {\n        dispatch(addMetadata(response))\n        setErrorBase(null)\n        message.success(\"Ajout réussie\")\n        setModalAdd(false)\n      })\n      .catch((err) => {\n        setErrorBase(err.message)\n        setModalAdd(false)\n      })\n  }\n\n  const onEditGroup = (newGroup) => {\n    updateMetadataGroup(modal, newGroup)\n      .then(() => {\n        dispatch(editGroup({ group: modal, newGroup }))\n        setErrorBase(null)\n        message.success(\"Modification réussie\")\n        setModal(undefined)\n      })\n      .catch((err) => {\n        setErrorBase(err.message)\n        setModalAdd(false)\n      })\n  }\n\n  const onDeleteGroup = (group) => {\n    deleteMetadataGroup(group)\n      .then(() => {\n        dispatch(deleteGroup({ group }))\n        setErrorBase(null)\n        message.success(\"Suppression réussie\")\n        setModal(undefined)\n      })\n      .catch((err) => {\n        setErrorBase(err.message)\n        setModalAdd(false)\n      })\n  }\n\n  const onFinish = (data) => {\n    if (isAdding) {\n      if (isAdding === \"documentsTypes\") {\n        addDocumentType({ ...data, isInVersion: data.isInVersion === \"Version\" })\n          .then((response) => {\n            dispatch(addMetadata(response))\n            setErrorBase(null)\n            message.success(\"Ajout réussie\")\n          })\n          .catch((err) => {\n            setErrorBase(err.message)\n          })\n      } else {\n        addMetadataInBase({ group: isAdding, ...data })\n          .then((response) => {\n            dispatch(addMetadata(response))\n            setErrorBase(null)\n            message.success(\"Ajout réussie\")\n          })\n          .catch((err) => {\n            setErrorBase(err.message)\n          })\n      }\n    } else if (isEditing.group === \"documentsTypes\") {\n      updateDocumentType(isEditing.document_type_id, { ...data, isInVersion: data.isInVersion === \"Version\" })\n        .then((response) => {\n          dispatch(updateMetadata(response))\n          setErrorBase(null)\n          message.success(\"Modification réussie\")\n        })\n        .catch((err) => {\n          setErrorBase(err.message)\n        })\n    } else {\n      updateMetadataInBase(isEditing.metadata_id, {\n        ...data,\n        group: isEditing.group,\n      })\n        .then((response) => {\n          dispatch(updateMetadata(response))\n          setErrorBase(null)\n          message.success(\"Modification réussie\")\n        })\n        .catch((err) => {\n          setErrorBase(err.message)\n        })\n    }\n    setIsEditing(undefined)\n    setIsAdding(undefined)\n  }\n\n  const onDelete = (id) => {\n    if (isDeleting.group === \"documentsTypes\") {\n      deleteDocumentType(id)\n        .then(() => {\n          dispatch(deleteMetadata({ id }))\n          setErrorBase(null)\n          message.success(\"Suppression réussie\")\n        })\n        .catch((err) => {\n          setErrorBase(err.message)\n        })\n    } else {\n      deleteMetadataInBase(id)\n        .then(() => {\n          dispatch(deleteMetadata({ group: isDeleting.group, id }))\n          setErrorBase(null)\n          message.success(\"Suppression réussie\")\n        })\n        .catch((err) => {\n          setErrorBase(err.message)\n        })\n    }\n    setIsDeleting(undefined)\n  }\n\n  useEffect(() => {\n    dispatch(setNavbar(\"metadata\"))\n    dispatch(\n      addBreadcrumb({\n        reset: true,\n        data: [{ name: \"Metadata\", href: \"/metadata\" }],\n      })\n    )\n  }, [dispatch])\n\n  const tableRender = (dataSource, name, title) => {\n    return (\n      <Card\n        title={title}\n        extra={\n          <>\n            <Button\n              type=\"primary\"\n              className=\"classic-round-button\"\n              onClick={() => {\n                setModal(title)\n              }}\n              shape=\"circle\"\n            >\n              <SettingOutlined />\n            </Button>\n          </>\n        }\n      >\n        {isAdding && isAdding === name && (\n          <Row>\n            <Col span={18}>\n              <Form.Item name=\"value\" rules={[{ required: true }]} initialValue=\"Nouveau\" style={{ margin: \"auto\" }}>\n                <Input />\n              </Form.Item>\n            </Col>\n            <Col span={6}>\n              <div style={{ float: \"right\", paddingRight: \"16px\" }}>\n                <Space size={30}>\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      form.submit()\n                    }}\n                    shape=\"circle\"\n                  >\n                    <CheckOutlined />\n                  </Button>\n\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      setIsAdding(undefined)\n                    }}\n                    shape=\"circle\"\n                  >\n                    <CloseOutlined />\n                  </Button>\n                </Space>\n              </div>\n            </Col>\n          </Row>\n        )}\n        <Table\n          loading={loading}\n          rowKey=\"metadata_id\"\n          columns={[\n            {\n              dataIndex: \"value\",\n              key: \"value\",\n              sorter: {\n                compare: (a, b) => a.value.localeCompare(b.value),\n              },\n              ...getColumnSearchProps(\"value\", title),\n              width: \"100%\",\n              render: (value, record) => (\n                <div>\n                  {isEditing && isEditing.group === name && isEditing.metadata_id === record.metadata_id ? (\n                    <Form.Item name=\"value\" rules={[{ required: true }]} initialValue={value} style={{ margin: \"auto\" }}>\n                      <Input />\n                    </Form.Item>\n                  ) : (\n                    <span>{value}</span>\n                  )}\n                </div>\n              ),\n            },\n            {\n              width: \"5%\",\n              dataIndex: \"value\",\n              key: \"value\",\n              render: (value, record) => (\n                <div>\n                  {isEditing && isEditing.group === name && isEditing.metadata_id === record.metadata_id ? (\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        form.submit()\n                      }}\n                      shape=\"circle\"\n                    >\n                      <CheckOutlined />\n                    </Button>\n                  ) : (\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        form.setFieldsValue({\n                          key: undefined,\n                          value: record.value,\n                          isInVersion: undefined,\n                        })\n                        setIsEditing(record)\n                      }}\n                      shape=\"circle\"\n                      disabled={isEditing || isAdding}\n                    >\n                      <EditOutlined />\n                    </Button>\n                  )}\n                </div>\n              ),\n            },\n            {\n              title: (\n                <Button\n                  type=\"primary\"\n                  className=\"classic-round-button\"\n                  onClick={() => {\n                    form.setFieldsValue({\n                      key: undefined,\n                      value: \"Nouveau\",\n                      isInVersion: undefined,\n                    })\n                    setIsAdding(name)\n                  }}\n                  shape=\"circle\"\n                  disabled={isEditing || isAdding}\n                >\n                  <PlusOutlined />\n                </Button>\n              ),\n              width: \"5%\",\n              dataIndex: \"value\",\n              key: \"value\",\n              render: (value, record) => (\n                <div>\n                  {isEditing && isEditing.group === name && isEditing.metadata_id === record.metadata_id ? (\n                    <Button\n                      type=\"primary\"\n                      onClick={() => {\n                        setIsEditing(undefined)\n                      }}\n                      shape=\"circle\"\n                    >\n                      <CloseOutlined />\n                    </Button>\n                  ) : (\n                    <Popover\n                      content={\n                        <Space style={{ height: \"100%\", width: \"100%\", paddingBottom: \"0px\" }}>\n                          <Button onClick={() => setIsDeleting(undefined)}>Annuler</Button>\n                          <Button type=\"primary\" onClick={() => onDelete(record.metadata_id)}>\n                            Supprimer <DeleteOutlined />\n                          </Button>\n                        </Space>\n                      }\n                      title=\"Voulez-vous vraiment supprimer ?\"\n                      trigger=\"click\"\n                      visible={!!(isDeleting && isDeleting.group === name && isDeleting.metadata_id === record.metadata_id)}\n                      onVisibleChange={(visible) => {\n                        if (!visible) {\n                          setIsDeleting(undefined)\n                        }\n                      }}\n                    >\n                      <Button\n                        type=\"primary\"\n                        onClick={() => {\n                          setIsDeleting(record)\n                        }}\n                        shape=\"circle\"\n                        disabled={isEditing || isAdding}\n                      >\n                        <DeleteOutlined />\n                      </Button>\n                    </Popover>\n                  )}\n                </div>\n              ),\n            },\n          ]}\n          dataSource={dataSource}\n        />\n      </Card>\n    )\n  }\n\n  return (\n    <div className=\"metadata\">\n      <Helmet>\n        <title>Metadata</title>\n      </Helmet>\n      <Modal\n        title={`Paramètre de ${modal}`}\n        visible={modal !== undefined}\n        onCancel={() => setModal(undefined)}\n        footer={[\n          <Button key=\"back\" onClick={() => setModal(undefined)}>\n            Annuler\n          </Button>,\n          <Button key=\"save\" type=\"primary\" loading={loading} onClick={() => formModal.submit()}>\n            Sauvegarder\n          </Button>,\n          <Popover\n            content={\n              <Space style={{ height: \"100%\", width: \"100%\", paddingBottom: \"0px\" }}>\n                <Button onClick={() => setPopoverDeleteGroup(false)}>Annuler</Button>\n                <Button\n                  type=\"primary\"\n                  onClick={() => {\n                    onDeleteGroup(modal)\n                    setPopoverDeleteGroup(false)\n                  }}\n                >\n                  Supprimer <DeleteOutlined />\n                </Button>\n              </Space>\n            }\n            title=\"Voulez-vous vraiment supprimer ?\"\n            trigger=\"click\"\n            visible={popoverDeleteGroup}\n            onVisibleChange={(visible) => {\n              if (!visible) {\n                setPopoverDeleteGroup(false)\n              }\n            }}\n          >\n            <Button key=\"delete\" type=\"primary\" onClick={() => setPopoverDeleteGroup(true)}>\n              Supprimer\n            </Button>\n          </Popover>,\n        ]}\n      >\n        <Form\n          onFinish={(values) => {\n            onEditGroup(values.edit)\n          }}\n          form={formModal}\n          labelAlign=\"left\"\n        >\n          <Form.Item\n            label=\"Nouveau nom\"\n            name=\"edit\"\n            initialValue={modal}\n            rules={[{ required: true, message: \"Ne peut etre vide\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Form>\n      </Modal>\n\n      <Modal\n        title=\"Ajouter un nouveau type\"\n        visible={modalAdd}\n        onCancel={() => setModalAdd(false)}\n        footer={[\n          <Button key=\"back\" onClick={() => setModalAdd(false)}>\n            Annuler\n          </Button>,\n          <Button key=\"save\" type=\"primary\" loading={loading} onClick={() => formModalAdd.submit()}>\n            Sauvegarder\n          </Button>,\n        ]}\n      >\n        <Form\n          onFinish={(values) => {\n            onAddGroup(values.new)\n          }}\n          form={formModalAdd}\n          labelAlign=\"left\"\n        >\n          <Form.Item\n            label=\"Nouveau nom\"\n            name=\"new\"\n            initialValue={modal}\n            rules={[{ required: true, message: \"Ne peut etre vide\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Row>\n        <Col span={24} style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}>\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                setModalAdd(true)\n              }}\n              className=\"classic-button\"\n              loading={loading}\n            >\n              Ajouter un nouveau type\n            </Button>\n          </Space>\n          <Space style={{ float: \"right\" }}>\n            <Button\n              onClick={() => {\n                dispatch(setLoading(true))\n                dispatch(updateAllMetadata())\n              }}\n              className=\"classic-button\"\n              loading={loading}\n            >\n              Actualiser les metadata\n            </Button>\n            <Button\n              type=\"ghost\"\n              onClick={() => {\n                dispatch(setLoadingDatabase(true))\n                dispatch(update())\n                message.warning(\"L'actualisation de la base de données peut prendre plusieurs minutes.\")\n              }}\n              className=\"classic-button\"\n              loading={loadingDatabase}\n            >\n              Actualiser les données en base\n            </Button>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Form form={form} onFinish={onFinish}>\n            <Row>\n              {error !== \"\" && (\n                <Col span={24} style={{ padding: 10 }}>\n                  <Alert\n                    style={{ marginTop: \"10px\" }}\n                    message=\"Erreur de récupération des métadata\"\n                    description={error}\n                    type=\"error\"\n                  />\n                </Col>\n              )}\n              {errorBase !== null && (\n                <Col span={24} style={{ padding: 10 }}>\n                  <Alert style={{ marginTop: \"10px\" }} message=\"Erreur\" description={errorBase} type=\"error\" />\n                </Col>\n              )}\n              <Col xs={{ span: 24 }} xl={{ span: 12 }} style={{ padding: 10 }}>\n                <Card title=\"Type de documents\">\n                  {isAdding && isAdding === \"documentsTypes\" && (\n                    <Row>\n                      <Col span={18}>\n                        <Form.Item\n                          label=\"Clé\"\n                          name=\"key\"\n                          rules={[{ required: true }]}\n                          initialValue=\"NEW\"\n                          style={{ margin: \"auto\" }}\n                          labelCol={{ span: 4 }}\n                          wrapperCol={{ span: 20 }}\n                        >\n                          <Input />\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Valeur\"\n                          name=\"value\"\n                          rules={[{ required: true }]}\n                          initialValue=\"Nouveau\"\n                          style={{ margin: \"auto\" }}\n                          labelCol={{ span: 4 }}\n                          wrapperCol={{ span: 20 }}\n                        >\n                          <Input />\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Type\"\n                          name=\"isInVersion\"\n                          rules={[{ required: true }]}\n                          initialValue=\"Version\"\n                          style={{ margin: \"auto\" }}\n                          labelCol={{ span: 4 }}\n                          wrapperCol={{ span: 20 }}\n                        >\n                          <Select style={{ width: \"100%\" }}>\n                            <Option value=\"Version\">Version</Option>\n                            <Option value=\"Séquentiel\">Séquentiel</Option>\n                          </Select>\n                        </Form.Item>\n                      </Col>\n                      <Col span={6}>\n                        <div style={{ float: \"right\", paddingRight: \"16px\" }}>\n                          <Space size={30}>\n                            <Button\n                              type=\"primary\"\n                              onClick={() => {\n                                form.submit()\n                              }}\n                              shape=\"circle\"\n                            >\n                              <CheckOutlined />\n                            </Button>\n\n                            <Button\n                              type=\"primary\"\n                              onClick={() => {\n                                setIsAdding(undefined)\n                              }}\n                              shape=\"circle\"\n                            >\n                              <CloseOutlined />\n                            </Button>\n                          </Space>\n                        </div>\n                      </Col>\n                    </Row>\n                  )}\n                  <Table\n                    loading={loading}\n                    rowKey=\"document_type_id\"\n                    columns={[\n                      {\n                        title: \"Clé\",\n                        dataIndex: \"key\",\n                        key: \"key\",\n                        sorter: {\n                          compare: (a, b) => a.key.localeCompare(b.key),\n                        },\n                        ...getColumnSearchProps(\"key\", \"clé\"),\n                        render: (key, record) => (\n                          <div>\n                            {isEditing &&\n                            isEditing.group === \"documentsTypes\" &&\n                            isEditing.document_type_id === record.document_type_id ? (\n                              <Form.Item name=\"key\" rules={[{ required: true }]} initialValue={key} style={{ margin: \"auto\" }}>\n                                <Input />\n                              </Form.Item>\n                            ) : (\n                              <span>{key}</span>\n                            )}\n                          </div>\n                        ),\n                      },\n                      {\n                        title: \"Valeur\",\n                        dataIndex: \"value\",\n                        key: \"value\",\n                        sorter: {\n                          compare: (a, b) => a.value.localeCompare(b.value),\n                        },\n                        ...getColumnSearchProps(\"value\", \"Valeur\"),\n                        render: (value, record) => (\n                          <div>\n                            {isEditing &&\n                            isEditing.group === \"documentsTypes\" &&\n                            isEditing.document_type_id === record.document_type_id ? (\n                              <Form.Item\n                                name=\"value\"\n                                rules={[{ required: true }]}\n                                initialValue={value}\n                                style={{ margin: \"auto\" }}\n                              >\n                                <Input />\n                              </Form.Item>\n                            ) : (\n                              <span>{value}</span>\n                            )}\n                          </div>\n                        ),\n                      },\n                      {\n                        title: \"Type\",\n                        dataIndex: \"isInVersion\",\n                        key: \"isInVersion\",\n                        sorter: {\n                          compare: (a, b) => a.isInVersion.localeCompare(b.isInVersion),\n                        },\n                        render: (isInVersion, record) => (\n                          <div>\n                            {isEditing &&\n                            isEditing.group === \"documentsTypes\" &&\n                            isEditing.document_type_id === record.document_type_id ? (\n                              <Form.Item\n                                name=\"isInVersion\"\n                                rules={[{ required: true }]}\n                                initialValue={isInVersion}\n                                style={{ margin: \"auto\" }}\n                              >\n                                <Select style={{ width: 120 }}>\n                                  <Option value=\"Version\">Version</Option>\n                                  <Option value=\"Séquentiel\">Séquentiel</Option>\n                                </Select>\n                              </Form.Item>\n                            ) : (\n                              <span>{isInVersion ? \"Version\" : \"Séquentiel\"}</span>\n                            )}\n                          </div>\n                        ),\n                      },\n                      {\n                        width: \"5%\",\n                        dataIndex: \"key\",\n                        key: \"key\",\n                        render: (key, record) => (\n                          <div>\n                            {isEditing &&\n                            isEditing.group === \"documentsTypes\" &&\n                            isEditing.document_type_id === record.document_type_id ? (\n                              <Button\n                                type=\"primary\"\n                                onClick={() => {\n                                  form.submit()\n                                }}\n                                shape=\"circle\"\n                              >\n                                <CheckOutlined />\n                              </Button>\n                            ) : (\n                              <Button\n                                type=\"primary\"\n                                onClick={() => {\n                                  form.setFieldsValue({\n                                    key: record.key,\n                                    value: record.value,\n                                    isInVersion: record.isInVersion ? \"Version\" : \"Séquentiel\",\n                                  })\n                                  setIsEditing(record)\n                                }}\n                                shape=\"circle\"\n                                disabled={isEditing || isAdding}\n                              >\n                                <EditOutlined />\n                              </Button>\n                            )}\n                          </div>\n                        ),\n                      },\n                      {\n                        title: (\n                          <Button\n                            type=\"primary\"\n                            className=\"classic-round-button\"\n                            onClick={() => {\n                              form.setFieldsValue({\n                                key: \"New\",\n                                value: \"Nouveau\",\n                                isInVersion: \"Version\",\n                              })\n                              setIsAdding(\"documentsTypes\")\n                            }}\n                            shape=\"circle\"\n                            disabled={isEditing || isAdding}\n                          >\n                            <PlusOutlined />\n                          </Button>\n                        ),\n                        width: \"5%\",\n                        dataIndex: \"key\",\n                        key: \"key\",\n                        render: (key, record) => (\n                          <div>\n                            {isEditing &&\n                            isEditing.group === \"documentsTypes\" &&\n                            isEditing.document_type_id === record.document_type_id ? (\n                              <Button\n                                type=\"primary\"\n                                onClick={() => {\n                                  setIsEditing(undefined)\n                                }}\n                                shape=\"circle\"\n                              >\n                                <CloseOutlined />\n                              </Button>\n                            ) : (\n                              <Popover\n                                content={\n                                  <Space style={{ height: \"100%\", width: \"100%\", paddingBottom: \"0px\" }}>\n                                    <Button onClick={() => setIsDeleting(undefined)}>Annuler</Button>\n                                    <Button type=\"primary\" onClick={() => onDelete(record.document_type_id)}>\n                                      Supprimer <DeleteOutlined />\n                                    </Button>\n                                  </Space>\n                                }\n                                title=\"Voulez-vous vraiment supprimer ?\"\n                                trigger=\"click\"\n                                visible={\n                                  !!(\n                                    isDeleting &&\n                                    isDeleting.group === \"documentsTypes\" &&\n                                    isDeleting.document_type_id === record.document_type_id\n                                  )\n                                }\n                                onVisibleChange={(visible) => {\n                                  if (!visible) {\n                                    setIsDeleting(undefined)\n                                  }\n                                }}\n                              >\n                                <Button\n                                  type=\"primary\"\n                                  onClick={() => {\n                                    setIsDeleting(record)\n                                  }}\n                                  shape=\"circle\"\n                                  disabled={isEditing || isAdding}\n                                >\n                                  <DeleteOutlined />\n                                </Button>\n                              </Popover>\n                            )}\n                          </div>\n                        ),\n                      },\n                    ]}\n                    dataSource={documentsTypes}\n                  />\n                </Card>\n              </Col>\n              {Object.keys(metadata).map((key) => (\n                <Col xs={{ span: 24 }} xl={{ span: 12 }} style={{ padding: 10 }}>\n                  {tableRender(metadata[key], key, key)}\n                </Col>\n              ))}\n            </Row>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    metadata: state.metadata.others,\n    documentsTypes: state.metadata.documentsTypes,\n    error: state.metadata.error || \"\",\n    loadingDatabase: state.loadingDatabase,\n    loading: state.loading,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  addBreadcrumb,\n  setLoading,\n  updateAllMetadata,\n  setNavbar,\n  updateMetadata,\n  deleteMetadata,\n  addMetadata,\n  setLoadingDatabase,\n  update,\n})(MetadataPage)\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from \"react\"\nimport { Tag, Input, Button } from \"antd\"\nimport { CloseOutlined, PlusOutlined, CheckOutlined } from \"@ant-design/icons\"\n\nexport default function EditableTagList({ data, onUpdateData }) {\n  const [visibility, setVisibility] = useState(false)\n  const [text, setText] = useState(\"\")\n\n  return (\n    <div className=\"editable-tag-list\">\n      {data.map((element) => (\n        <Tag key={element}>\n          <span\n            onClick={() => {\n              setText(element)\n              onUpdateData([...data].filter((x) => x !== element))\n              setVisibility(true)\n            }}\n          >\n            {element}\n          </span>\n          <CloseOutlined onClick={() => onUpdateData(data.filter((x) => x !== element))} />\n        </Tag>\n      ))}\n      <Tag\n        key=\"NewTag\"\n        style={{ backgroundColor: \"var(--dia-blue)\", borderColor: \"var(--dia-blue)\", color: \"white\" }}\n        onClick={() => {\n          setText(\"\")\n          setVisibility(true)\n        }}\n      >\n        <span>Nouveau</span>\n        <PlusOutlined />\n      </Tag>\n      {visibility === true && (\n        <Input\n          defaultValue={text}\n          onChange={(e) => setText(e.target.value)}\n          onPressEnter={() => {\n            if (text !== \"\") {\n              onUpdateData([...data, text])\n            }\n            setVisibility(false)\n          }}\n          onBlur={() => {\n            if (text !== \"\") {\n              onUpdateData([...data, text])\n            }\n            setVisibility(false)\n          }}\n          ref={(input) => input && input.focus()}\n          addonAfter={\n            <Button type=\"primary\" style={{ width: \"100%\", padding: \"0\" }}>\n              {\"   \"}\n              <CheckOutlined />\n              {\"   \"}\n            </Button>\n          }\n        />\n      )}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { connect, useDispatch } from \"react-redux\"\nimport {\n  Alert,\n  Col,\n  Row,\n  Card,\n  Button,\n  Space,\n  Form,\n  Input,\n  DatePicker,\n  Select,\n  Divider,\n  ConfigProvider,\n  message,\n  Modal,\n} from \"antd\"\nimport moment from \"moment\"\nimport locale from \"antd/lib/locale/fr_FR\"\nimport \"moment/locale/fr\"\nimport { SyncOutlined } from \"@ant-design/icons\"\nimport { Link, navigate } from \"@reach/router\"\nimport StatusIcon from \"../components/StatusIcon\"\nimport TagList from \"../components/TagList\"\nimport ListDocuments from \"../components/ListDocuments\"\nimport { addBreadcrumb, setLoading, update, setNavbar, updateDocument, deleteDocument } from \"../redux/actions\"\nimport {\n  getContract,\n  getDocument,\n  getDocumentsAssociated,\n  updateDocumentInBase,\n  deleteDocumentInBase,\n} from \"../utils/currentRequest\"\nimport { isInVersion, getLibeleByKey, getMetadataByID } from \"../utils/metadata\"\nimport { getDate } from \"../utils/formatUtils\"\nimport EditableTagList from \"../components/EditableTagList\"\n\nmoment.locale(\"fr\")\n\nfunction DocumentReadPage({ id, loading, documentsTypes, metadata }) {\n  const dispatch = useDispatch()\n  const [waiting, setWaiting] = useState(true)\n  const [contract, setContract] = useState(null)\n  const [document, setDocument] = useState(null)\n  const [deleteModal, setdeleteModal] = useState(null)\n  const [error, setError] = useState(\"\")\n  const [errorUpdate, setErrorUpdate] = useState(\"\")\n  const [documentAssociated, setDocumentAssociated] = useState([])\n  const [isModify, setIsModify] = useState(false)\n  const [form] = Form.useForm()\n  const [tags, setTags] = useState([])\n  const { Option } = Select\n  const { TextArea } = Input\n  const metadataMapped = getMetadataByID(document ? document.metadata : [], metadata)\n\n  const handleOk = () => {\n    deleteDocumentInBase(document.document_id)\n      .then(() => {\n        dispatch(deleteDocument(document.document_id))\n        navigate(\"/documents\")\n      })\n      .catch((err) => {\n        setErrorUpdate(err.message)\n      })\n    setdeleteModal(null)\n  }\n\n  const handleCancel = () => {\n    setdeleteModal(null)\n  }\n\n  const onFinish = (values) => {\n    const metadataListStr = []\n    Object.keys(values.document.metadata).map(\n      (key) => values.document.metadata[key] && metadataListStr.push(...values.document.metadata[key])\n    )\n\n    const doc = { ...document, ...values.document, keywords: tags, metadata: metadataListStr }\n    updateDocumentInBase(doc)\n      .then(() => {\n        dispatch(updateDocument(doc))\n        message.success(\"Modification réussie\")\n        navigate(`/documents/${document.document_id}`)\n      })\n      .catch((err) => {\n        setErrorUpdate(err.message)\n      })\n  }\n\n  useEffect(() => {\n    dispatch(setNavbar(\"documents\"))\n    dispatch(\n      addBreadcrumb({\n        reset: true,\n        data: [\n          { name: \"Documents\", href: \"/documents\" },\n          {\n            name: \"creation\",\n            href: \"/documents/create\",\n          },\n        ],\n      })\n    )\n\n    if (window.location.pathname.split(\"/\")[2] === \"modify\") {\n      setIsModify(true)\n    }\n\n    dispatch(setLoading(true))\n    getDocumentsAssociated(id)\n      .then((response) => {\n        setDocumentAssociated(response)\n        return getDocument(id)\n      })\n      .then((response) => {\n        setDocument(response)\n        setTags(response.keywords)\n        dispatch(\n          addBreadcrumb({\n            reset: true,\n            data: [\n              { name: \"Documents\", href: \"/documents\" },\n              {\n                name: response.name,\n                href: `/documents/${response.document_id}`,\n              },\n            ],\n          })\n        )\n        return getContract(response.contract_id)\n      })\n      .then((response) => {\n        setContract(response)\n        setWaiting(false)\n        dispatch(setLoading(false))\n      })\n      .catch((err) => {\n        setError(err.message)\n        setWaiting(false)\n        dispatch(setLoading(false))\n      })\n  }, [dispatch, id])\n\n  if (loading === true || waiting === true) {\n    return (\n      <div>\n        <Helmet>\n          <title>loading...</title>\n        </Helmet>\n        <SyncOutlined\n          spin\n          style={{\n            fontSize: \"20px\",\n          }}\n        />\n      </div>\n    )\n  }\n\n  if (error !== \"\" || !document || !contract) {\n    return (\n      <div>\n        <Helmet>\n          <title>Erreur</title>\n        </Helmet>\n        <Alert\n          style={{ marginTop: \"10px\" }}\n          message=\"Erreur de chargement des données\"\n          description={\n            <div>\n              <span>Impossible de récuperer le document.</span>\n              <br />\n              <span>\n                <b>Message d&apos;erreur : </b>\n                {error}\n              </span>\n            </div>\n          }\n          type=\"error\"\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Helmet>\n        <title>{document.name}</title>\n      </Helmet>\n      <div className=\"document-detail\">\n        <Space style={{ paddingLeft: 10 }}>\n          {isModify ? (\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                navigate(`/documents/${document.document_id}`)\n              }}\n              className=\"classic-button\"\n              loading={loading}\n            >\n              Annuler\n            </Button>\n          ) : (\n            <>\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  navigate(\"/documents\")\n                }}\n                className=\"classic-button\"\n                loading={loading}\n              >\n                Retour\n              </Button>\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  navigate(`/documents/modify/${document.document_id}`)\n                }}\n                className=\"classic-button\"\n                loading={loading}\n              >\n                Modifier\n              </Button>\n              \n            </>\n          )}\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              setdeleteModal(true)\n            }}\n            className=\"classic-button\"\n            loading={loading}\n          >\n            Supprimer\n          </Button>\n          <Button\n                type=\"primary\"\n                onClick={() => {\n                  navigate(`/documents/create-for-contract/${document.contract_id}`)\n                }}\n                className=\"classic-button\"\n                loading={loading}\n              >\n                Nouveau document pour ce contrat\n          </Button>\n        </Space>\n        <Row>\n          <Col md={{ span: 24 }} lg={{ span: 8 }} style={{ padding: 10 }}>\n            <Card title=\"Etape 1 : affaire séléctionnée \">\n              <Row>\n                <Col xs={{ span: 12 }} lg={{ span: 24 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                  <p>\n                    <b>Titre </b>: <Link to={`/contracts/${contract.contract_id}`}>{contract.title}</Link>\n                  </p>\n                  <p>\n                    <b>Client </b>: {contract.customer_name}\n                  </p>\n                </Col>\n                <Col xs={{ span: 12 }} lg={{ span: 24 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                  <p>\n                    <b>Créateur</b> : {contract.creator}\n                  </p>\n                  <p>\n                    <b> Statut </b>: {contract.status} <StatusIcon status={contract.status} />\n                  </p>\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n          <>\n            <Col md={{ span: 24 }} lg={{ span: 16 }} style={{ padding: 10 }}>\n              <Card title=\"Etape 2 : autres critères \">\n                <Row>\n                  <Col xs={{ span: 24 }} md={{ span: 12 }} lg={{ span: 12 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                    <p>\n                      <b>Domaine</b> : {document.domain}\n                    </p>\n                    <p>\n                      <b>Type de document</b> : {getLibeleByKey(documentsTypes, document.type)}\n                    </p>\n\n                    <p>\n                      <b>Année</b> : {document.year}\n                    </p>\n\n                    <p>\n                      <b>Date</b> : {getDate(document.date)}\n                    </p>\n                    <p>\n                      <b>URL</b> : {document.url}\n                    </p>\n                  </Col>\n                  <Col xs={{ span: 24 }} md={{ span: 12 }} lg={{ span: 12 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                    <p>\n                      <b>Nom du projet </b> : {document.projectName}\n                    </p>\n                    <p>{document.isNew ? \"Premiere version d'un document\" : \"Nouvelle version d'un document\"}</p>\n\n                    <p>\n                      <b>{isInVersion(documentsTypes, document.type) ? \"Numéro séquentiel : \" : \"Numéro de version : \"}</b>\n                      {isInVersion(documentsTypes, document.type) ? document.sequentialNumber : document.version}\n                    </p>\n                    <p>\n                      <b>Extension du document</b> : {document.extension}\n                    </p>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </>\n          <Col span={24} style={{ padding: 10 }}>\n            <Card title=\"Etape 3 : nom généré \">\n              <h3>{document.name}</h3>\n            </Card>\n          </Col>\n          <Modal\n            title=\"Suppression\"\n            visible={deleteModal}\n            onOk={handleOk}\n            onCancel={handleCancel}\n            okText=\"Suppression\"\n            cancelText=\"Annuler\"\n          >\n            <p>Êtes vous sûr de vouloir supprimer ?</p>\n          </Modal>\n          {!isModify ? (\n            <>\n              <Col span={24} style={{ padding: 10 }}>\n                <Card title=\"Etape 4 : métadonnées associées \">\n                  <Row>\n                  <Col xs={{ span: 24 }} md={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <p>\n                        <b>URL </b>: {document.url}\n                      </p>\n                    </Col>\n                    <Col xs={{ span: 24 }} md={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <p>\n                        <b>Créateur </b>: {document.creator}\n                      </p>\n                    </Col>\n                    <Col xs={{ span: 24 }} md={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <p>\n                        <b>Date de création </b>: {getDate(document.creationDate)}\n                      </p>\n                    </Col>\n                    {metadataMapped &&\n                      Object.keys(metadataMapped).map((key) => (\n                        <Col xs={{ span: 24 }} md={{ span: 12 }} xl={{ span: 8 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                          <p>\n                            <b>{key} </b>: <TagList data={metadataMapped[key].list} />\n                          </p>\n                        </Col>\n                      ))}\n                    <Col span={24} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <span>\n                        <b> Mot Clé :</b>\n                        <p>\n                          <TagList data={document.keywords} />\n                        </p>\n                      </span>\n                    </Col>\n                    <Col xs={{ span: 24 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <b> Résumé :</b>\n                      <p style={{ whiteSpace: \"pre-wrap\" }}>{document.summary || <i>Aucun résumé pour le moment</i>}</p>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n              <Col span={24} style={{ paddingLeft: 10, paddingRight: 10, paddingTop: 10 }}>\n                <ListDocuments\n                  documents={documentAssociated}\n                  title=\"Documents équivalents\"\n                  size={12}\n                  documentsTypes={documentsTypes}\n                />\n              </Col>\n            </>\n          ) : (\n            <div className=\"step4\">\n              <Col span={24} style={{ padding: 10 }}>\n                <Card title=\"Etape 4 : métadonnées associées \" style={{ width: \"100%\" }}>\n                  <ConfigProvider locale={locale}>\n                    <Form\n                      labelCol={{ xs: { span: 10 }, md: { span: 12 }, lg: { span: 8 }, xl: { span: 7 } }}\n                      wrapperCol={{ xs: { span: 14 }, md: { span: 12 }, lg: { span: 16 }, xl: { span: 17 } }}\n                      form={form}\n                      onFinish={onFinish}\n                    >\n                      <Row>\n                        <Col xs={{ span: 24 }} md={{ span: 12 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                          \n                        \n                          <Form.Item\n                            label=\"Createur\"\n                            name={[\"document\", \"creator\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Ne peut pas être vide\",\n                              },\n                              () => ({\n                                validator(_, value) {\n                                  if (value.match(/^[A-Z]{3}$/)) {\n                                    return Promise.resolve()\n                                  }\n                                  return Promise.reject(new Error(\"Un trigramme est requis\"))\n                                },\n                              }),\n                            ]}\n                            initialValue={document.creator}\n                          >\n                            <Input />\n                          </Form.Item>\n                          <Form.Item\n                            label=\"URL\"\n                            name={[\"document\", \"url\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Ne peut pas être vide\",\n                              }\n                            ]}\n                            initialValue={document.url}\n                          >\n                            <Input />\n                          </Form.Item>\n                        </Col>\n                        <Col xs={{ span: 24 }} md={{ span: 12 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                          <Form.Item\n                            label=\"Date de création\"\n                            name={[\"document\", \"creationDate\"]}\n                            initialValue={moment(document.creationDate)}\n                          >\n                            <DatePicker style={{ width: \"100%\" }} format={(value) => moment(value).format(\"dddd DD MMMM YYYY\")} />\n                          </Form.Item>\n                        </Col>\n\n                        {metadata &&\n                          Object.keys(metadata).map((key) => (\n                            <Col xs={{ span: 24 }} md={{ span: 12 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                              <Form.Item\n                                label={key}\n                                name={[\"document\", \"metadata\", key]}\n                                initialValue={metadataMapped && metadataMapped[key] ? metadataMapped[key].idList : undefined}\n                              >\n                                <Select mode=\"multiple\" id={key}>\n                                  {metadata[key].map((obj) => (\n                                    <Option value={obj.metadata_id}>{obj.value}</Option>\n                                  ))}\n                                </Select>\n                              </Form.Item>\n                            </Col>\n                          ))}\n\n                        <Col span={24} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                          <Divider />\n\n                          <div className=\"left-form\">\n                            <Form.Item\n                              label=\"Mots Clé\"\n                              name={[\"document\", \"keywords\"]}\n                              labelCol={24}\n                              wrapperCol={24}\n                              initialValue={document.keywords}\n                            >\n                              <EditableTagList\n                                data={tags}\n                                onUpdateData={(e) => {\n                                  setTags(e)\n                                }}\n                              />\n                            </Form.Item>\n                          </div>\n                        </Col>\n                        <Col span={24} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                          <div className=\"left-form\">\n                            <Form.Item\n                              label=\"Résumé :\"\n                              name={[\"document\", \"summary\"]}\n                              labelCol={24}\n                              wrapperCol={24}\n                              initialValue={document.summary}\n                            >\n                              <TextArea />\n                            </Form.Item>\n                          </div>\n                        </Col>\n                        <Space style={{ margin: \"auto\" }}>\n                          <Button\n                            onClick={() => {\n                              navigate(`/documents/${document.document_id}`)\n                            }}\n                            className=\"classic-button\"\n                            loading={loading}\n                          >\n                            Annuler\n                          </Button>\n                          <Button type=\"primary\" className=\"classic-button\" onClick={() => form.submit()}>\n                            Sauvegarder\n                          </Button>\n                        </Space>\n                      </Row>\n                    </Form>\n                  </ConfigProvider>\n                </Card>\n              </Col>\n              {errorUpdate !== \"\" && (\n                <Col span={24} style={{ padding: 10 }}>\n                  <Alert\n                    style={{ marginTop: \"10px\" }}\n                    message=\"Erreur de modification\"\n                    description={\n                      <div>\n                        <span>Impossible de modifier le document.</span>\n                        <br />\n                        <span>\n                          <b>Message d&apos;erreur : </b>\n                          {errorUpdate}\n                        </span>\n                      </div>\n                    }\n                    type=\"error\"\n                  />\n                </Col>\n              )}\n            </div>\n          )}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    documentsTypes: state.metadata.documentsTypes,\n    metadata: state.metadata.others,\n  }\n}\n\nexport default connect(mapStateToProps, { addBreadcrumb, setLoading, update, setNavbar, updateDocument })(DocumentReadPage)\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { connect, useDispatch } from \"react-redux\"\nimport { Alert, Col, Row, Card, Button, Space, Form, Modal, Input, Select, DatePicker, Divider, message, InputNumber } from \"antd\"\nimport { SyncOutlined, PlusOutlined, EditOutlined, FolderOpenOutlined } from \"@ant-design/icons\"\nimport { Link, navigate } from \"@reach/router\"\nimport moment from \"moment\"\nimport StatusIcon from \"../components/StatusIcon\"\nimport ListDocuments from \"../components/ListDocuments\"\nimport { addBreadcrumb, setLoading, addDocument, update, setNavbar } from \"../redux/actions\"\nimport { getContract, addDocumentInBase } from \"../utils/currentRequest\"\nimport { isInVersion, getKeyById } from \"../utils/metadata\"\nimport { getYear, generateName, getEmptyDoc, dateFormat, getIdByContract } from \"../utils/formatUtils\"\nimport ListContracts from \"../components/ListContracts\"\n\nfunction DocumentCreatePage({ id, loading, documents, documentsTypes, contracts }) {\n  const { Option } = Select\n  const dispatch = useDispatch()\n  const [waiting, setWaiting] = useState(true)\n  const [contract, setContract] = useState(null)\n  const [document, setDocument] = useState(null)\n  const [error, setError] = useState(\"\")\n  const [stepOne, setStepOne] = useState(false)\n  const [stepTwo, setStepTwo] = useState(false)\n  const [step, setStep] = useState(1)\n  const [form] = Form.useForm()\n  const [isNew, setIsNew] = useState(\"new\")\n  const [isVersion, setIsVersion] = useState(true)\n  const [generatedName, setgeneratedName] = useState(null)\n  const [errorSave, setErrorSave] = useState(null)\n  const [generatedId, setGeneratedId] = useState(null)\n\n  const handleOk = (contractHandle) => {\n    setContract(contractHandle)\n    const generatedIdTmp = getIdByContract(contractHandle.title, null)\n    setGeneratedId(generatedIdTmp)\n    form.setFieldsValue({\n      document: {\n        ...form.getFieldValue.document,\n        projectName: contractHandle.title.split(\"-\").slice(2).join(\"-\") || contractHandle.title.split(\"-\").slice(1).join(\"-\"),\n      },\n      generatedId: generatedIdTmp,\n    })\n    if (step === 1) {\n      setStep(2)\n    }\n    setStepOne(false)\n  }\n\n  const handleCancel = () => {\n    setStepOne(false)\n  }\n\n  const handleChangeType = (e) => {\n    setIsVersion(isInVersion(documentsTypes, e))\n  }\n\n  const handleOkStepTwo = (documentHandle) => {\n    const documentName = documentHandle.name\n    let sequentialNumber = 1\n    if (documentHandle.sequentialNumber != null) {\n      sequentialNumber = documentHandle.sequentialNumber + 1\n    }\n    let version = \"1.0\"\n    if (documentHandle.version !== null) {\n      const versionSplit = documentHandle.version.split(\".\")\n      version = `${versionSplit[0]}.${(parseInt(versionSplit[1], 10) || 0) + 1}`\n    }\n\n    form.setFieldsValue({\n      document: {\n        ...form.getFieldValue.document,\n        newDocument: documentName,\n        sequentialNumber,\n        version,\n      },\n    })\n    setStepTwo(false)\n  }\n\n  const handleCancelStepTwo = () => {\n    setStepTwo(false)\n  }\n\n  const onFinish = (values) => {\n    setgeneratedName(\n      generateName(\n        contract,\n        values.document,\n        isInVersion(documentsTypes, values.document.type),\n        getKeyById(documentsTypes, values.document.type),\n        generatedId.trim()\n      )\n    )\n    setDocument({ ...values.document, customer: contract.customer_name })\n    setStep(3)\n  }\n\n  const handleSaveStep3 = () => {\n    const doc = {\n      ...getEmptyDoc(),\n      name: generatedName,\n      ...document,\n      contract_id: contract.contract_id,\n      contract_name: contract.title,\n      date: `${document.date.format(\"YYYY-MM-DD\")}T00:00:00.000000+00:00`,\n      creationDate: moment().format(\"YYYY-MM-DDTHH:mm:ss.000000+00:00\"),\n      year: parseInt(document.year, 10),\n    }\n\n    addDocumentInBase(JSON.stringify(doc))\n      .then((response) => {\n        dispatch(addDocument(response))\n        message.success(\"Ajout réussie\")\n        navigate(`/documents/modify/${response.document_id}`)\n      })\n      .catch((err) => {\n        setErrorSave(err.message)\n      })\n  }\n\n  useEffect(() => {\n    dispatch(setNavbar(\"documents\"))\n    if (window.location.pathname.split(\"/\")[2] === \"create\") {\n      setStep(1)\n      setWaiting(false)\n    } else if (window.location.pathname.split(\"/\")[2] === \"create-for-contract\") {\n      setStep(2)\n      getContract(id)\n        .then((response) => {\n          setContract(response)\n\n          const generatedIdTmp = getIdByContract(response.title, null)\n\n          setGeneratedId(generatedIdTmp)\n          form.setFieldsValue({\n            document: {\n              ...form.getFieldValue.document,\n              projectName: response.title.split(\"-\").slice(2).join(\"-\") || response.title.split(\"-\").slice(1).join(\"-\"),\n            },\n            generatedId: generatedIdTmp,\n          })\n\n          setWaiting(false)\n          dispatch(setLoading(false))\n        })\n        .catch((err) => {\n          setError(err.message)\n          setWaiting(false)\n          dispatch(setLoading(false))\n        })\n\n      dispatch(\n        addBreadcrumb({\n          reset: true,\n          data: [\n            { name: \"Documents\", href: \"/documents\" },\n            {\n              name: \"creation\",\n              href: \"/documents/create\",\n            },\n          ],\n        })\n      )\n    }\n  }, [dispatch, form, id])\n\n  if (loading === true || waiting === true) {\n    return (\n      <div>\n        <Helmet>\n          <title>loading...</title>\n        </Helmet>\n        <SyncOutlined\n          spin\n          style={{\n            fontSize: \"20px\",\n          }}\n        />\n      </div>\n    )\n  }\n\n  if (error !== \"\") {\n    return (\n      <div>\n        <Helmet>\n          <title>Erreur</title>\n        </Helmet>\n        <Alert\n          style={{ marginTop: \"10px\" }}\n          message=\"Erreur de chargement des données\"\n          description={\n            <div>\n              <span>Impossible de récuperer le document.</span>\n              <br />\n              <span>\n                <b>Message d&apos;erreur : </b>\n                {error}\n              </span>\n            </div>\n          }\n          type=\"error\"\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <Helmet>\n        <title>creation</title>\n      </Helmet>\n      <div className=\"document-detail\">\n        <Space style={{ paddingLeft: 10 }}>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              navigate(-1)\n            }}\n            className=\"classic-button\"\n            loading={loading}\n          >\n            Annuler\n          </Button>\n        </Space>\n        <Form\n          labelCol={{ xs: { span: 10 }, md: { span: 12 }, lg: { span: 10 } }}\n          wrapperCol={{ xs: { span: 14 }, md: { span: 12 }, lg: { span: 14 } }}\n          form={form}\n          onFinish={onFinish}\n        >\n          <Row>\n            <Col md={{ span: 24 }} lg={{ span: 8 }} style={{ padding: 10 }}>\n              <Card\n                title=\"Etape 1 : affaire séléctionnée \"\n                extra={\n                  <Button\n                    type=\"primary\"\n                    className=\"classic-round-button\"\n                    onClick={() => {\n                      setStepOne(true)\n                    }}\n                    shape=\"circle\"\n                    loading={loading}\n                  >\n                    {contract === null ? <PlusOutlined /> : <EditOutlined />}\n                  </Button>\n                }\n              >\n                {contract === null ? (\n                  <span>Selectionner une affaire</span>\n                ) : (\n                  <Row>\n                    <Col xs={{ span: 12 }} lg={{ span: 24 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <p>\n                        <b>Titre </b>: <Link to={`/contracts/${contract.contract_id}`}>{contract.title}</Link>\n                      </p>\n                      <p>\n                        <b>Client </b>: {contract.customer_name}\n                      </p>\n                    </Col>\n                    <Col xs={{ span: 12 }} lg={{ span: 24 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                      <p>\n                        <b>Créateur</b> : {contract.creator}\n                      </p>\n                      <p>\n                        <b> Statut </b>: {contract.status} <StatusIcon status={contract.status} />\n                      </p>\n                      <p>\n                        <b>ID de l&#39;affaire Fitnet</b>:\n                        <Form.Item\n                          name=\"generatedId\"\n                          labelCol={{ span: 0 }}\n                          wrapperCol={{ span: 24 }}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Un numéro d'ID Fitnet est requis\",\n                            },\n                            () => ({\n                              validator(_, value) {\n                                if (value.trim().match(/^\\d+$/) || value.trim() === \"???\") {\n                                  return Promise.resolve()\n                                }\n                                return Promise.reject(\n                                  new Error(\"L'ID peut seulement être un numéro, remplacer par ??? si vous ne l'avez pas\")\n                                )\n                              },\n                            }),\n                          ]}\n                        >\n                          <Input onChange={(value) => setGeneratedId(value.target.value)} />\n                        </Form.Item>\n                      </p>\n                    </Col>\n                  </Row>\n                )}\n              </Card>\n              <Modal title=\"Selection d'une affaire\" visible={stepOne} onCancel={handleCancel} footer={[]} width={1000}>\n                <ListContracts\n                  contracts={contracts.data}\n                  loading={loading}\n                  size={3}\n                  isButton\n                  isPreview\n                  onClickButton={(e) => handleOk(e)}\n                />\n              </Modal>\n            </Col>\n            {step >= 2 && (\n              <>\n                <Col md={{ span: 24 }} lg={{ span: 16 }} style={{ padding: 10 }}>\n                  <Card title=\"Etape 2 : autres critères \">\n                    <Row>\n                      <Col xs={{ span: 24 }} md={{ span: 12 }} lg={{ span: 12 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                        <Form.Item label=\"Domaine\" name={[\"document\", \"domain\"]} initialValue=\"C\">\n                          <Select>\n                            <Option value=\"C\">Client</Option>\n                            <Option value=\"F\">Fournisseur</Option>\n                            <Option value=\"P\">Partenaire</Option>\n                          </Select>\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Type\"\n                          name={[\"document\", \"type\"]}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Un type de document est requis\",\n                            },\n                          ]}\n                        >\n                          <Select onChange={(e) => handleChangeType(e)}>\n                            {documentsTypes.map((type) => (\n                              <Option value={type.document_type_id}>{type.value}</Option>\n                            ))}\n                          </Select>\n                        </Form.Item>\n                        <Form.Item label=\"Année\" name={[\"document\", \"year\"]} initialValue={getYear(moment())}>\n                          <Select>\n                            <Option value={getYear(moment().add(1, \"years\"))}>{getYear(moment().add(1, \"years\"))}</Option>\n                            <Option value={getYear(moment())}>{getYear(moment())}</Option>\n                            <Option value={getYear(moment().subtract(1, \"years\"))}>\n                              {getYear(moment().subtract(1, \"years\"))}\n                            </Option>\n                          </Select>\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Date\"\n                          name={[\"document\", \"date\"]}\n                          initialValue={moment()}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Une date est requise\",\n                            },\n                          ]}\n                        >\n                          <DatePicker format={dateFormat} style={{ width: \"100%\" }} />\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Nom du projet\"\n                          name={[\"document\", \"projectName\"]}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Un nom de projet est requis\",\n                            },\n                          ]}\n                        >\n                          <Input />\n                        </Form.Item>\n                        \n                      </Col>\n                      <Col xs={{ span: 24 }} md={{ span: 12 }} lg={{ span: 12 }} style={{ paddingLeft: 10, paddingRight: 10 }}>\n                        <Form.Item label=\"New\" name={[\"document\", \"isNew\"]} initialValue=\"new\">\n                          <Select onChange={(e) => setIsNew(e)}>\n                            <Option value=\"new\">Créer un nouveau document</Option>\n                            <Option value=\"old\">Créer une nouvelle version</Option>\n                          </Select>\n                        </Form.Item>\n                        <Form.Item label=\"Reference\" name={[\"document\", \"newDocument\"]}>\n                          <Input\n                            disabled={isNew === \"new\"}\n                            onClick={() => setStepTwo(true)}\n                            style={{ width: \"100%\" }}\n                            suffix={\n                              <FolderOpenOutlined\n                                onClick={() => {\n                                  if (isNew === \"old\") {\n                                    setStepTwo(true)\n                                  }\n                                }}\n                              />\n                            }\n                          />\n                        </Form.Item>\n                        <Modal\n                          title=\"Selection d'un document de réference\"\n                          visible={stepTwo}\n                          onCancel={handleCancelStepTwo}\n                          footer={[]}\n                          width={1000}\n                        >\n                          <ListDocuments\n                            documents={documents.data}\n                            loading={loading}\n                            size={3}\n                            isButton\n                            onClickButton={(e) => handleOkStepTwo(e)}\n                            isPreview\n                            documentsTypes={documentsTypes}\n                          />\n                        </Modal>\n                        {isVersion ? (\n                          <Form.Item\n                            label=\"Numéro de version\"\n                            name={[\"document\", \"version\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Un numéro de version est requis\",\n                              },\n                              () => ({\n                                validator(_, value) {\n                                  if (value && value.match(/^(\\d+\\.)(\\d+)$/)) {\n                                    return Promise.resolve()\n                                  }\n                                  return Promise.reject(new Error(\"Un Numéro de version X.X est requis\"))\n                                },\n                              }),\n                            ]}\n                          >\n                            <Input />\n                          </Form.Item>\n                        ) : (\n                          <Form.Item\n                            label=\"Numéro séquentiel\"\n                            name={[\"document\", \"sequentialNumber\"]}\n                            rules={[\n                              {\n                                required: true,\n                                message: \"Un numéro séquentiel est requis\",\n                              },\n                            ]}\n                          >\n                            <InputNumber />\n                          </Form.Item>\n                        )}\n                        <Form.Item\n                          label=\"Extension\"\n                          name={[\"document\", \"extension\"]}\n                          rules={[\n                            {\n                              required: true,\n                              message: \"Une extension est requise\",\n                            },\n                          ]}\n                        >\n                          <Select>\n                            <Option value=\"docx\">docx</Option>\n                            <Option value=\"xlsx\">xlsx</Option>\n                            <Option value=\"pptx\">pptx</Option>\n                            <Option value=\"pdf\">pdf</Option>\n                          </Select>\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Createur\"\n                          name={[\"document\", \"creator\"]}\n                          rules={[\n                            () => ({\n                              validator(_, value) {\n                                if (value && value.match(/^[A-Z]{3}$/)) {\n                                  return Promise.resolve()\n                                }\n                                return Promise.reject(new Error(\"Un trigramme est requis\"))\n                              },\n                            }),\n                          ]}\n                        >\n                          <Input />\n                        </Form.Item>\n                      </Col>\n                      <>\n                        <Divider />\n                        <Button\n                          type=\"primary\"\n                          className=\"classic-button-form \"\n                          style={{ margin: \"0 auto\", display: \"block\" }}\n                          onClick={() => form.submit()}\n                        >\n                          Generer le nom du fichier\n                        </Button>\n                      </>\n                    </Row>\n                  </Card>\n                </Col>\n              </>\n            )}\n            {step >= 3 && (\n              <Col span={24} style={{ padding: 10 }}>\n                <Card\n                  title=\"Etape 3 : nom généré \"\n                  extra={\n                    <Button\n                      type=\"primary\"\n                      className=\"classic-button\"\n                      onClick={() => {\n                        handleSaveStep3()\n                      }}\n                      loading={loading}\n                    >\n                      Enregistrer\n                    </Button>\n                  }\n                >\n                  <h3>{generatedName}</h3>\n                </Card>\n              </Col>\n            )}\n            {errorSave !== null && (\n              <Col span={24} style={{ padding: 10 }}>\n                <Alert style={{ marginTop: \"10px\" }} message=\"Erreur de sauvegarde\" description={errorSave} type=\"error\" />\n              </Col>\n            )}\n          </Row>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    documents: state.documents,\n    documentsTypes: state.metadata.documentsTypes,\n    contracts: state.contracts,\n  }\n}\n\nexport default connect(mapStateToProps, { addBreadcrumb, setLoading, addDocument, update, setNavbar })(DocumentCreatePage)\n","import React from \"react\"\nimport { Router } from \"@reach/router\"\nimport { connect, useDispatch } from \"react-redux\"\nimport \"./App.less\"\nimport { setLoading, initAll, getAllKeywords } from \"./redux/actions\"\nimport HomePage from \"./pages/HomePage\"\nimport ContractsPage from \"./pages/ContractsPage\"\nimport DocumentsPage from \"./pages/DocumentsPage\"\nimport NotFoundPage from \"./pages/NotFoundPage\"\nimport ContractDetailPage from \"./pages/ContractDetailPage\"\nimport Skeleton from \"./pages/Skeleton\"\nimport MetadataPage from \"./pages/MetadataPage\"\nimport DocumentReadModifyPage from \"./pages/DocumentReadModifyPage\"\nimport DocumentCreatePage from \"./pages/DocumentCreatePage\"\n\nfunction App() {\n  const dispatch = useDispatch()\n  dispatch(setLoading(true))\n  dispatch(initAll())\n  dispatch(getAllKeywords())\n  return (\n    <Skeleton>\n      <Router>\n        <HomePage path=\"/\" />\n        <ContractsPage path=\"/contracts\" />\n        <ContractDetailPage path=\"/contracts/:id\" />\n        <DocumentsPage path=\"/documents\" />\n        <DocumentReadModifyPage path=\"/documents/:id\" />\n        <DocumentReadModifyPage path=\"/documents/modify/:id\" />\n        <DocumentCreatePage path=\"/documents/create\" />\n        <DocumentCreatePage path=\"/documents/create-for-contract/:id\" />\n        <MetadataPage path=\"/metadata\" />\n        <NotFoundPage default />\n      </Router>\n    </Skeleton>\n  )\n}\n\nexport default connect(null, { setLoading, initAll })(App)\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-undef */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import {\n  ADD_BREADCRUMB,\n  SET_LOADING,\n  SET_NAVBAR,\n  UPDATE_ALL_CONTRACTS,\n  UPDATE_ALL_METADATA,\n  UPDATE_ALL_DOCUMENTS,\n  DELETE_DOCUMENT,\n  UPDATE_DOCUMENT,\n  ADD_DOCUMENT,\n  UPDATE,\n  GET_UPDATE_TIME,\n  UPDATE_METADATA,\n  ADD_METADATA,\n  DELETE_METADATA,\n  SET_LOADING_DATABASE,\n  INIT_ALL,\n  UPDATE_FILTER_CONTRACT,\n  UPDATE_FILTER_DOCUMENT,\n  EDIT_GROUP,\n  DELETE_GROUP,\n  GET_ALL_KEYWORDS,\n  SET_METADATA_FROM_DOCUMENTS,\n} from \"../actions/index\"\nimport { stringSimplfier } from \"../../utils/fitler\"\n\nconst initialState = {\n  navbar: \"\",\n  breadcrumb: [],\n  loading: false,\n  loadingDatabase: false,\n  contracts: {\n    error: \"\",\n    data: [],\n    filter: { commercials: [], projectManagers: [], creator: [], company: [] },\n  },\n  metadata: {\n    documentsTypes: [],\n    others: {},\n    error: \"\",\n  },\n  documents: {\n    error: \"\",\n    data: [],\n  },\n  updateTime: \"\",\n  filter: {\n    document: undefined,\n    contract: undefined,\n  },\n  keywords: {\n    error: \"\",\n    data: [],\n  },\n}\n\nconst getFilterContractOptions = (payload) => {\n  // Filter\n  const commercials = []\n  const projectManagers = []\n  const creator = []\n  const company = []\n  if (payload.data) {\n    payload.data.map((data) => {\n      if (data.affected_commercials) {\n        data.affected_commercials.map(\n          (item) => item !== [] && !commercials.find((elem) => elem.employeeId === item.employeeId) && commercials.push(item)\n        )\n      }\n      if (data.affected_project_managers) {\n        data.affected_project_managers.map(\n          (item) =>\n            item !== [] &&\n            !projectManagers.find((elem) => elem.employeeId === item.employeeId) &&\n            projectManagers.push({ ...item, company: data.company })\n        )\n      }\n      if (data.creator && !creator.find((elem) => stringSimplfier(data.creator) === stringSimplfier(elem))) {\n        creator.push(data.creator.trim())\n      }\n      if (data.company && !company.find((elem) => stringSimplfier(data.company) === stringSimplfier(elem))) {\n        company.push(data.company.trim())\n      }\n    })\n  }\n\n  const projectManagersTmp = []\n  projectManagers.map((man) => {\n    const exist = projectManagersTmp.find((elem) => stringSimplfier(elem.fullName) === stringSimplfier(man.fullName))\n    if (!exist) {\n      projectManagersTmp.push({ fullName: man.fullName, employeeId: [man.employeeId] })\n    } else {\n      exist.employeeId.push(man.employeeId)\n    }\n  })\n\n  return {\n    commercials: commercials.sort((a, b) => a.fullName.trim().localeCompare(b.fullName.trim())),\n    projectManagers: projectManagersTmp.sort((a, b) => a.fullName.trim().localeCompare(b.fullName.trim())),\n    creator: creator.sort((a, b) => a.trim().localeCompare(b.trim())),\n    company: company.sort((a, b) => a.trim().localeCompare(b.trim())),\n  }\n}\n\nconst orderMetadata = (data) => {\n  const result = {}\n  data.map((item) => {\n    const isExist = result[item.group]\n    if (isExist) {\n      result[item.group].push(item)\n    } else {\n      result[item.group] = [item]\n    }\n  })\n\n  // sort values\n  Object.keys(result).map((key) => result[key].sort((a, b) => a.value.trim().localeCompare(b.value.trim())))\n\n  const sortedResult = {}\n  // sort key\n  Object.keys(result)\n    .sort((a, b) => a.trim().localeCompare(b.trim()))\n    .map((key) => {\n      sortedResult[key] = result[key]\n    })\n\n  return sortedResult\n}\n\nconst quotes = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    //* ******************** Skeleton ************************* //\n    case ADD_BREADCRUMB:\n      if (action.payload.reset) {\n        return {\n          ...state,\n          breadcrumb: [...action.payload.data],\n        }\n      }\n      return {\n        ...state,\n        breadcrumb: [...state.breadcrumb, ...action.payload.data],\n      }\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n      }\n    case SET_LOADING_DATABASE:\n      return {\n        ...state,\n        loadingDatabase: action.payload,\n      }\n    case SET_NAVBAR:\n      return {\n        ...state,\n        navbar: action.payload,\n      }\n    //* ******************** database ************************* //\n    case UPDATE:\n      return {\n        ...state,\n        loadingDatabase: false,\n      }\n    case GET_UPDATE_TIME:\n      return {\n        ...state,\n        updateTime: action.payload,\n        loading: false,\n      }\n    //* ******************** Contract ************************* //\n\n    case UPDATE_ALL_CONTRACTS:\n      return {\n        ...state,\n        contracts: {\n          error: action.payload.error,\n          data: action.payload.data,\n          filter: getFilterContractOptions(action.payload),\n        },\n        loading: false,\n      }\n    //* ******************** Metadata ************************* //\n\n    case UPDATE_ALL_METADATA: {\n      let metadata = {}\n      if (action.payload.error !== \"\") {\n        metadata = {\n          documentsTypes: [],\n          others: {},\n          error: action.payload.error,\n        }\n      } else {\n        const documentsTypes = []\n        action.payload.data.documentsTypes.map((obj) => {\n          documentsTypes.push({ group: \"documentsTypes\", ...obj })\n        })\n        metadata = {\n          documentsTypes: documentsTypes.sort((a, b) => a.key.trim().localeCompare(b.key.trim())),\n          others: orderMetadata(action.payload.data.metadata),\n          error: \"\",\n        }\n      }\n\n      return {\n        ...state,\n        metadata,\n        loading: false,\n      }\n    }\n    case UPDATE_METADATA: {\n      if (!action.payload.group) {\n        const index = state.metadata.documentsTypes.findIndex((type) => type.document_type_id === action.payload.document_type_id)\n        const array = [...state.metadata.documentsTypes]\n        array[index] = { group: \"documentsTypes\", ...action.payload }\n        return {\n          ...state,\n          metadata: { ...state.metadata, documentsTypes: array },\n        }\n      }\n      const index = state.metadata.others[action.payload.group].findIndex(\n        (type) => type.metadata_id === action.payload.metadata_id\n      )\n      const array = [...state.metadata.others[action.payload.group]]\n      array[index] = action.payload\n      const others = { ...state.metadata.others }\n      others[action.payload.group] = array\n      return {\n        ...state,\n        metadata: { ...state.metadata, others },\n      }\n    }\n    case ADD_METADATA: {\n      if (!action.payload.group) {\n        return {\n          ...state,\n          metadata: {\n            ...state.metadata,\n            documentsTypes: [{ group: \"documentsTypes\", ...action.payload }, ...state.metadata.documentsTypes],\n          },\n        }\n      }\n      const others = { ...state.metadata.others }\n      if (others[action.payload.group]) {\n        others[action.payload.group] = [action.payload, ...others[action.payload.group]]\n      } else {\n        others[action.payload.group] = [action.payload]\n      }\n      return {\n        ...state,\n        metadata: { ...state.metadata, others },\n      }\n    }\n    case DELETE_METADATA: {\n      if (!action.payload.group) {\n        return {\n          ...state,\n          metadata: {\n            ...state.metadata,\n            documentsTypes: [...state.metadata.documentsTypes.filter((item) => item.document_type_id !== action.payload.id)],\n          },\n        }\n      }\n      const others = { ...state.metadata.others }\n      others[action.payload.group] = [...others[action.payload.group].filter((item) => item.metadata_id !== action.payload.id)]\n      return {\n        ...state,\n        metadata: { ...state.metadata, others },\n      }\n    }\n    case EDIT_GROUP: {\n      const others = { ...state.metadata.others }\n      const newObj = {}\n      Object.keys(others).map((key) => {\n        if (key !== action.payload.group) {\n          newObj[key] = others[key]\n        } else {\n          newObj[action.payload.newGroup] = others[key]\n        }\n      })\n      return {\n        ...state,\n        metadata: { ...state.metadata, others: newObj },\n      }\n    }\n    case DELETE_GROUP: {\n      const others = { ...state.metadata.others }\n      const newObj = {}\n      Object.keys(others).map((key) => {\n        if (key !== action.payload.group) {\n          newObj[key] = others[key]\n        }\n      })\n      return {\n        ...state,\n        metadata: { ...state.metadata, others: newObj },\n      }\n    }\n    //* ******************** Documents ************************* //\n\n    case UPDATE_ALL_DOCUMENTS:\n      return {\n        ...state,\n        documents: {\n          error: action.payload.error,\n          data: action.payload.data,\n        },\n        loading: false,\n      }\n    case DELETE_DOCUMENT:\n      return {\n        ...state,\n        documents: {\n          error: action.payload.error,\n          data: state.documents.data.filter((item) => item.document_id !== action.payload.id),\n        },\n        loading: false,\n      }\n    case UPDATE_DOCUMENT:\n      return {\n        ...state,\n        documents: {\n          error: state.documents.error,\n          data: [...state.documents.data.filter((item) => item.document_id !== action.payload.document_id), action.payload],\n        },\n        loading: false,\n      }\n    case ADD_DOCUMENT:\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          data: [...state.documents.data, action.payload],\n        },\n      }\n    //* ******************** Init ************************* //\n\n    case INIT_ALL: {\n      let metadata = {}\n      if (action.payload.metadata.error !== \"\") {\n        metadata = {\n          documentsTypes: [],\n          others: {},\n          error: action.payload.error,\n        }\n      } else {\n        const documentsTypes = []\n        action.payload.metadata.data.documentsTypes.map((obj) => {\n          documentsTypes.push({ group: \"documentsTypes\", ...obj })\n        })\n        metadata = {\n          documentsTypes: documentsTypes.sort((a, b) => a.key.trim().localeCompare(b.key.trim())),\n          others: orderMetadata(action.payload.metadata.data.metadata),\n          error: action.payload.error,\n        }\n      }\n\n      return {\n        ...state,\n        metadata,\n        documents: {\n          error: action.payload.documents.error,\n          data: action.payload.documents.data,\n        },\n        contracts: {\n          error: action.payload.contracts.error,\n          data: action.payload.contracts.data,\n          filter: getFilterContractOptions(action.payload.contracts),\n        },\n        updateTime: action.payload.updateTime,\n        loading: false,\n      }\n    }\n    //* ******************** filter ************************* //\n    case UPDATE_FILTER_DOCUMENT:\n      return {\n        ...state,\n        filter: {\n          ...state.filter,\n          document: action.payload,\n        },\n      }\n\n    case UPDATE_FILTER_CONTRACT:\n      return {\n        ...state,\n        filter: {\n          ...state.filter,\n          contract: action.payload,\n        },\n      }\n\n\n    case GET_ALL_KEYWORDS:\n      return {\n        ...state,\n        keywords: action.payload,\n      }\n\n    case SET_METADATA_FROM_DOCUMENTS: {\n      const modifiedContract = action.payload.data\n      const contracts = state.contracts.data.map(function(item) { \n        return item.contract_id === modifiedContract.contract_id ? modifiedContract : item \n      })\n\n      return {\n        ...state,\n        contracts: {\n          ...state.contracts,\n          data: contracts\n        }\n      }\n    }\n      \n\n    default:\n      return state\n  }\n}\n\nexport default quotes\n","import { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\n\nimport rootReducer from \"../reducers/index\"\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport { Provider } from \"react-redux\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport store from \"./redux/store/index\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}